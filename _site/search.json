[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nThis website is a collection of my coursework for the Visual Analytics courses taken during my MITB Journey.\nThere are 3 type of exercises:\n\nHands-on Exercise\nIn-Class Exercise\nTake-Home Exercise"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple chart",
    "text": "Plotting a simple chart\n\nUsing geombar() to plot a bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nUsing geom_dotplot() to plot a dot plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)\n\n\n\n\n\n\nUsing geom_histogram() to create a histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "Working with Theme",
    "text": "Working with Theme\n\nChanging theme of bar chart\n\nggplot(data=exam_data, aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", colour = \"lightblue\", \n                                    size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-driven-graphics-for-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-driven-graphics-for-analysis",
    "title": "Hands-on Exercise 1",
    "section": "Designing Data-driven Graphics for Analysis",
    "text": "Designing Data-driven Graphics for Analysis\n\nExercise 1\n\nggplot(data=exam_data, \n       aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nExercise 2 : Adding mean and median lines\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nExercise 3: Distribution of English scores for all pupils\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nExercise 4\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "The code chunck below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.1 Working with ggrepel",
    "text": "2.1 Working with ggrepel\nggrepel helps to repel overlapping text\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nSimply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-themes",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.2 Working with Themes",
    "text": "2.2 Working with Themes\n8 Built-in Themes: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nUsing ggtheme package\nIn the example below, The Economist theme is used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\nUsing hrbthems package\nProvides a base theme that focuses on typographic elements, including where various labels are placed and fonts used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_ipsum(axis_title_size = 18,       #increase font size of axis title to 18 \n              base_size = 15,             #increase default axis label to 15\n              grid = \"Y\") +               # keep only y-axis grid lines\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.3 Beyond Single Graph",
    "text": "2.3 Beyond Single Graph\nCreate composite plot by combining multiple graphs First, create the three statistical graphics below\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\nWorking with patchwork\nCreating patchwork Use ‘+’ to create two columns layout Use ‘/’ to create two row layout (stack) Use ‘()’ to create subplot group Use ‘|’ to place the plots beside each other\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')   #creating a composite figure with tag\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nCombining patchwork and themes\n\n((p1 / p2) | p3) & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nInsert another plot in a plot with inset_element()\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\nggiraph, for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\nDT, provides an R interface to the JavaScript library DataTablesthat create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork, for combining multiple plots into one figure.\ngifski , converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder, an excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggiraph-for-interactive-data-visualisation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggiraph-for-interactive-data-visualisation",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Using ggiraph for interactive data visualisation",
    "text": "2.1 Using ggiraph for interactive data visualisation\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive. The interactivity is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nData_id: a column of data-sets that contain an id to be associated with elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\n\nIf it is used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\n\n2.1.1 Using tooltip (tooltip effect)\nThere are two parts of the codes: 1. creating ggplot object, 2. girafe() of ggiraph will be used to create an interactive svg object.\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  #geom_dotplot_interactive still takes argument of original geom_dotplot but with tooltip enabled in aes()\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\n\n\n2.1.2 Displaying multiple information on tooltip\n\n# Create a new field called tooltip\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\n\n\n2.1.3 Customising Tooltip style\nUsing opts_tooltip() of ggiraph to customize tooltip rendering by adding css declarations.\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:blue;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBackground colour of the tooltip is now white and the font colour is blue and bold\n\n\n\n\n2.1.4 Displaying statistics on tooltip"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph,visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nGAStech_edges data.frame consists of individual email flow records, which is not useful for visualisation.\nThus, we will aggregate the individual by date,senders, receivers, main subject and day of the week.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n  summarise(Weight = n()) %>%\n  filter(source!=target) %>%    #only want those that you sent to others, dont want those u cc yourself\n  filter(Weight > 1) %>%         #only want those you sent out more than 1\n  ungroup()\n\nGAStech_edges_aggregated\n\n# A tibble: 1,372 × 4\n   source target Weekday   Weight\n    <dbl>  <dbl> <ord>      <int>\n 1      1      2 Sunday         5\n 2      1      2 Monday         2\n 3      1      2 Tuesday        3\n 4      1      2 Wednesday      4\n 5      1      2 Friday         6\n 6      1      3 Sunday         5\n 7      1      3 Monday         2\n 8      1      3 Tuesday        3\n 9      1      3 Wednesday      4\n10      1      3 Friday         6\n# ℹ 1,362 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "Using tbl_graph() to build tidygraph data model",
    "text": "Using tbl_graph() to build tidygraph data model\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.1 Plotting a basic network graph",
    "text": "3.1 Plotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n3.1.2 Changing the default network graph theme\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.3 Changing the color of the plot\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n3.1.4 Modifying network nodes\nIn this section, you will color each node by referring to their respective departments.\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.5 Modifying edges\nHere, the code chunck below shows how the thickness of the edges will be mapped with the Weight variable. (Thin line means not much interaction with one another)\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.6 Creating facet graphs\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\nAs shown above, we can see that weekdays there are interactions, but Saturday there are no links, meaning not much interaction with others."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#network-metrics-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#network-metrics-analysis",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.2 Network Metrics Analysis",
    "text": "3.2 Network Metrics Analysis\n\n3.2.1 Computing centrality indices\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n3.2.2 Visualising Community\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-interactive-network-graph-with-visnetwork",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-interactive-network-graph-with-visnetwork",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.3 Building Interactive Network Graph with visNetwork",
    "text": "3.3 Building Interactive Network Graph with visNetwork\nBefore we plot the interactive network graph, we need to prepare the data model using the code chunk below.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nPlotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n3.3.1 Working with visual attributes - Nodes\nRename Department field to group\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-On_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-On_Ex07.html",
    "title": "In-class Exercise 7",
    "section": "",
    "text": "1. Getting Started\nBefore getting start, make sure that ggHoriPlot has been included in the pacman::p_load(...) statement above.\n\npacman::p_load(ggHoriPlot, ggthemes, tidyverse, lubridate)\n\n\n\n2. Importing the Data\n\naverp <- read_csv(\"data/AVERP.csv\") \n\nRows: 7452 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Date, Consumer Items\ndbl (1): Values\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n3. Data Wrangling\n\naverp <- averp %>%\n  mutate(`Date` = dmy(`Date`))\n\n\n\n4. Plotting the Horizon graph\n\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix,gt,patchwork,tidyverse,ggstatsplot,ggpubr)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq() +\n  stat_qq_line()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In_class_Ex05_MC1.html",
    "href": "In-class_Ex/In-class_Ex05/In_class_Ex05_MC1.html",
    "title": "Jsonlite",
    "section": "",
    "text": "pacman::p_load(jsonlite,tidygraph,ggraph,visNetwork,tidyverse)\n\n\nMC1 <- jsonlite::fromJSON(\"data/MC1.json\")\n\n\n#Extract id, type and country and make it as a tibble database. use select to choose the fields you want and reorganise the data as you want\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country)\n\n\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Application Learning Journey",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nIn this website, you will find my coursework prepared for this course.\nHope you enjoy reading them!\nMost Recent Submissions…\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake Home_Ex02\n\n\n\n\n\n\nDabbie Neo\n\n\nJun 4, 2023\n\n\n\n\n\n\n\n\n\n\n\nTake Home_Ex03\n\n\n\n\n\n\nDabbie Neo\n\n\nJun 3, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "This exercise aims to discover the demographic, financial characteristics and hidden patterns of the City of Engagement, using static and interactive statistical graphics methods. The data will be processed using appropriate tidyverse packages and visualization will be designed using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-and-launching-r-packages",
    "title": "Take-Home_Ex01",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\nplotly: R library for plotting interactive statistical graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\ngganimate: an ggplot extension for creating animated statistical graphs.\ngifski: converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\nknitr: Used for dynamic report generation\npatchwork: Used to combine plots\nggdist: Used for visualization distribution and uncertainty\nggthemes: Provide additional themes for ggplot2\nggrepel: A package in R used for avoiding overplotting of text labels\ngt:For creating and styling publication-quality tables in R\nrstatix: Used for statistical analysis and data visualization\nggridges: For creating ridge plots\nviridis: An R package that provides a set of color palettes for data visualization\nggiraph: For making ‘ggplot’ graphics interactive\nreshape2: Provides functions for transforming and reshaping data between “wide” and “long” formats\nscales: Provides a set of functions for formatting and labeling data for visualization\ntidyverse: A family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes,ggrepel, tidyverse,gt,rstatix,ggpmisc,ggridges,gganimate,viridis,ggiraph,reshape2,scales, performance,ggalt,ggpubr,crosstalk, ungeviz, ggdist, colorspace)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "title": "Take-Home_Ex01",
    "section": "3.2 Importing the Data",
    "text": "3.2 Importing the Data\n\nparticipants <- read_csv(\"data/Participants.csv\")\nfinancial <- read_csv(\"data/FinancialJournal.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take-Home_Ex01",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Check for missing values in each column in the participants and financial data\n\n# Check for missing values in each column in participants data\ncolSums(is.na(participants))\n\n participantId  householdSize       haveKids            age educationLevel \n             0              0              0              0              0 \n interestGroup      joviality \n             0              0 \n\n# Check for missing values in each column\ncolSums(is.na(financial))\n\nparticipantId     timestamp      category        amount \n            0             0             0             0 \n\n\n\n\n3.3.2 Data Issues\nUsing glimpse(), we can look at the data types of the datasets.\n\nglimpse(participants)\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\", \"HighScho…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", \"D\", \"D\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\n\nglimpse(financial)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nISSUE 1: WRONG DATA FORMAT\nparticipantId is in <dbl> format. It needs to be converted to <chr>.\n\nparticipants$participantId <- as.character(participants$participantId)\n#str(participants)--> to check if data type has been changed\n\nfinancial$participantId <- as.character(financial$participantId)\n#str(financial) --> to check if data type has been changed\n\nISSUE 2: CHANGE TIMESTAMP TO MONTH_YEAR FORMAT\nExtract the month and year using lubridate.\n\nfinancial$month_year <- floor_date(as.POSIXct(financial$timestamp), unit = \"month\")\nfinancial$month_year <- format(financial$month_year, format = \"%m/%Y\")\n\n# Convert month_year to date format\nfinancial$month_year <- as.Date(paste0(\"01/\", financial$month_year), format = \"%d/%m/%Y\")\n\n#head(financial) --> check if new col month_year is created \n\nISSUE 3: DUPLICATES FOUND IN DATA\nCheck for duplicates in both dataset using the following code chunk,\n\n#Check for duplicates in financial table\nsum(duplicated(financial))\n\n[1] 1113\n\n#Check for duplicates in participants table\nsum(duplicated(participants))\n\n[1] 0\n\n#Remove duplicates in financial table\nfinancial_unique <- distinct(financial)\nnrow(financial_unique)\n\n[1] 1512523\n\n\nISSUE 4: DATA IS SEGREGATED BY INDIVDUAL ENTRIES\nGroup the entries by participants taking into consideration month_year and category and summing up the amount.\n\n# Group by participant_id and month_year, subgroup by category, then summarize by amount\nnew_financial <- financial_unique %>%\n  group_by(participantId, month_year, category) %>%\n  summarise(total_amount = sum(amount)) %>%\n  mutate(total_amount = round(total_amount, 2))\n\n# Pivot the table so that the categories appear as columns\nnew_financial_wide <- new_financial %>% \n  pivot_wider(names_from = category, values_from = total_amount)\n\nNext, check if columns have missing value, if yes, replace the missing values with 0\n\n# Check if any columns has missing value \ncolSums(is.na(new_financial_wide))\n\n participantId     month_year      Education           Food     Recreation \n             0              0           7673              0           1199 \n       Shelter           Wage RentAdjustment \n           131              0          10619 \n\n# replace missing values with 0\nnew_financial_wide <- new_financial_wide %>% \n  mutate_all(~replace_na(., 0))\n\nISSUE 5: DATA DOES NOT SHOW FINANCIAL HEALTH AND COST OF LIVING\nFinancial Health = Sum (Wage + Education + Shelter + Recreation + Food + RentAdjustment)\n\nnew_financial_wide$Financial_health <- rowSums(new_financial_wide[, c(\"Wage\", \"Education\",\"Shelter\",\"Recreation\",\"Food\",\"RentAdjustment\" )], na.rm = TRUE)\n\nCost_of_living = Sum(Education + Shelter + Recreation + Food)\n\nnew_financial_wide$Cost_of_living <- rowSums(new_financial_wide[,c(\"Education\",\"Shelter\",\"Recreation\",\"Food\")], na.rm = TRUE)\nnew_financial_wide$Cost_of_living <- new_financial_wide$Cost_of_living * -1\n\nISSUE 6: AGE DATA ARE NOT AGGREGATED\nBin age data by groups of 10.\n\nparticipants <- participants %>%\n  mutate(age_bin = cut(age, \n                       breaks = c(seq(max(age), min(age) - 10, -10), min(age)), \n                       right = FALSE, \n                       include.lowest = TRUE, \n                       labels = NULL))\n\n# Replace the numeric bin labels with age ranges\nparticipants$age_bin <- sub(\"(\\\\d+)-(\\\\d+)\", \"\\\\1-\\\\2\", as.character(participants$age_bin))\nparticipants$age_bin[participants$age_bin == paste0(max(participants$age_bin), \"-\")] <- paste0(\"<= \", max(as.numeric(levels(participants$age_bin)))-1)\n\n# Display the first 10 rows of the new data frame with age_bin column\n#head(participants, 10)\n\nISSUE 7: PARTICIPANTS DATA AND FINANCIAL DATA ARE SEPARATED\nCombine the two tables together by participantId\n\ncombined_table <- merge(participants, new_financial_wide, by = \"participantId\")\nDT::datatable(combined_table, class= \"compact\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographic-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographic-analysis",
    "title": "Take-Home_Ex01",
    "section": "4.1 Demographic Analysis",
    "text": "4.1 Demographic Analysis\n\n4.1.1 Distribution of Income and Age\n\nDistribution of Income\nWe will first take a look at the Income Distribution using histogram and boxplot.\nBased on the boxplot plotted, we can observe that the minimum income is $1600, which means that all the participants are considering under the working population and we can analyse them as a whole.\nFurthermore, we can observe from the shape of the wage distribution that there is income inequality in the city. It has a right-skewed distribution, i.e. mean wage > median wage, where there is very few high earners at the top and majority falls under the middle and bottom.\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot\nwage_mean <- round(mean(combined_table$Wage))\nwage_median <- round(median(combined_table$Wage))\nymax <- as.numeric(round((IQR(combined_table$Wage)*1.5) +\n                quantile(combined_table$Wage,0.75)))\nymin <- as.integer(min(combined_table$Wage))\n\n#plotting histogram\nh_wage <- ggplot(data = combined_table, aes(x = Wage)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,25000), labels = scales::comma) +\n  labs(x = \"Wage\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = wage_mean), col=\"darkblue\", linewidth=0.75) +\n  annotate(\"text\", x=5900, y=1700, label=\"Mean wage:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5600, y=1550, label=format(wage_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = wage_median), col=\"lightpink4\", linewidth=0.75) +\n  annotate(\"text\", x=1900, y=1700, label=\"Median wage\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=1900, y=1600, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb_wage <- ggplot(data = combined_table, aes(y = Wage)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=0.6, notch=FALSE, width = 0.25) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,25000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.25) + \n  annotate(\"text\", x=0.20, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.20, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=5000, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=2500, label=\"Median wage =\",\n           size=3, color=\"lightpink4\")\n\n# combine the 2 plots \n\nwage_distri <- b_wage / h_wage + plot_layout(heights = c(1, 2)) \n\nwage_distri + plot_annotation(title = \"Distribution of Wage\", \n                               subtitle = str_wrap(\"There is a right-skewed distribution i.e. mean wage > median wage. There is also a large number of outliers (wage >$9,110).\", width =60),\n                               theme = theme(\n                                 plot.title = element_text(size = 18),\n                                 plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nTo confirm that the wage distribution is indeed not normally distributed, we will perform the normality assumption test. But before performing the normality assumption test, we will first create the meanwage_table as shown in the code chunk below,\n\n# Create mean wage table \nmeanwage_table <- combined_table %>%\n  group_by(participantId) %>%\n  summarize(mean_wage = mean(Wage))\n#head(meanwage_table)\n\nNext, we will use the Q-Q Plot to visualize if normal distribution exist.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nqq <- ggplot(meanwage_table,\n       aes(sample=mean_wage))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Income\")\n\nsw_t <- meanwage_table %>%\n  shapiro_test(mean_wage) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\nqq + table_png\n\n\n\n\n\nLooking at Normal Quartile Plot (Q-Q plot), we can see that the points deviate significantly from the straight diagonal line. The results of the Shaprio-test above also suggest that there is sufficient statistical evidence to reject the null hypothesis at 95% confidence. Thus, the set of data is indeed not normally distributed, showing that the city has income inequality.\n\n\nDistribution of Age\nSimilarly, we will use histogram and boxplot to show the age distribution.\nThe boxplot below shows that the minimum age is 18 and the maximum age is 60, which is most likely the retirement age. The histogram shows that the age is normally distributed,where the mean age equals the median age of 39. Thus, it appears that the city of engagement does not need to worry about aging population, which in turn meant that they do not need to invest in improving birth rate.\nHowever, based on the pie chart, we can see that though the starting age is 18, only 5% of the working population is below the age of 21. This is probably because most are still studying at that age and are not actively working.\n\n\nShow the code\nage_count <- combined_table %>%\n  group_by(age_bin) %>%\n  summarize(\n    count = n_distinct(participantId)) %>% \n  mutate(prop_count = as.numeric(count) / n_distinct(as.numeric(combined_table$participantId)),\n         age_pie_pct = round(prop_count * 100)) %>% \n  mutate(ypos_p = rev(cumsum(rev(age_pie_pct))),\n         pos_p = age_pie_pct/2 + lead(ypos_p, 1, default = 0),\n         pos_p = if_else(is.na(pos_p), age_pie_pct/2, pos_p))\n\npie_age <- ggplot(age_count, aes(x = \"\" , y = age_pie_pct, fill = fct_inorder(age_bin))) +\n  geom_col(width = 1, color = 1) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  geom_label_repel(data = age_count,\n                   aes(y = pos_p, label = paste0(age_pie_pct, \"%\")),\n                   size = 4.5, nudge_x = 1, color = c(1, 1, 1, 1, 1), show.legend = FALSE) +\n  guides(fill = guide_legend(title = \"Age Bin\")) +\n  labs(title = \"Proportion of participants in each Age Bin\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(face = \"bold\")) +\n  theme_minimal() \n\n\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot for AGE\nage_mean <- round(mean(combined_table$age))\nage_median <- round(median(combined_table$age))\nymax <- max(combined_table$age)\nymin <- as.integer(min(combined_table$age))\n\n#plotting histogram for AGE\nh_age <- ggplot(data = combined_table, aes(x = age)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 4) + \n  scale_x_continuous(limits = c(0,70), labels = scales::comma) +\n  labs(x = \"Age\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = age_mean), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=48, y=1700, label=\"Mean age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=48, y=1600, label=format(age_mean, big.mark = \",\"),\n           size=3, color=\"black\") +\n  geom_vline(aes(xintercept = age_median), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=30, y=1750, label=\"Median age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=30, y=1650, label=format(age_median, big.mark = \",\"),\n           size=3, color=\"black\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot for AGE\nb_age <- ggplot(data = combined_table, aes(y = age)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE, width =0.2) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,70), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.2) + \n  annotate(\"text\", x=0.15, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.15, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") \n  #annotate(\"text\", x=-0.25, y=50, label=format(age_median, big.mark = \",\"),\n           #size=3, color=\"lightpink4\") \n  #annotate(\"text\", x=-0.25, y=25, label=\"Median age =\",\n           #size=3, color=\"lightpink4\")\n\nage_distri <- b_age / h_age + plot_layout(heights = c(1, 2)) \n\n# age_distri + plot_annotation(title = \"Distribution of Age\", \n#                                subtitle = \"There is a normal distribution i.e. mean age = median age\",\n#                                theme = theme(\n#                                  plot.title = element_text(size = 18),\n#                                  plot.subtitle = element_text(size = 12)))\n\n\n\n\nShow the code\n#combine the age_distri plot dervied earlier with the pie_age plot\nage_distri_pie <- (age_distri | pie_age) + plot_layout(widths = c(3,3))\n\nage_distri_pie + plot_annotation(title = \"Distribution of Age\", \n                               theme = theme(\n                                 plot.title = element_text(size = 16)))\n\n\n\n\n\n\n\n\n4.1.2 Income by Age\nLet’s find out if income is affected by age.\nTo compare the income level across ages, we will test the following null hypothesis:\nH0: the mean wage across different age groups are the same\nH1: the mean wage across different age groups are different\nTo start the confirmatory data analysis, we first perform the normality assumption test for the distribution of income and age. Normality assumption test for income has been performed previously.\nPlot the qqplot for income and age.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create age table \nunique_participants <- unique(subset(combined_table, select = c(\"participantId\", \"age\")))\nhead(unique_participants)\n\n\n   participantId age\n1              0  36\n13             1  25\n25            10  48\n37           100  29\n49          1000  56\n61          1001  49\n\n\nShow the code\nqq_age <- ggplot(unique_participants,\n       aes(sample=age))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Age\")\n\nsw_t_age <- unique_participants %>%\n  shapiro_test(age) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp_age <- tempfile(fileext = '.png')\ngtsave(sw_t_age, tmp_age)\ntable_png_age <- png::readPNG(tmp_age,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\n(qq_age + table_png_age) / (qq + table_png)\n\n\n\n\n\nBased on the Shapiro test, both the p-value are < alpha value of 0.05, thus there is sufficient statistical evidence to conclude that the distribution of income and age are not normally distributed. Thus we will perform the non-parametric test, Oneway ANOVA Test.\n\n\nShow the code\nggbetweenstats(\n  data = combined_table,\n  x = age_bin, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"ns\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  ylim = c(0, 25000)\n) +\nggtitle(\"Oneway ANNOVA - Income across different age\")\n\n\n\n\n\nThe Kruskal-Wallis Test p-value is lower than the alpha values, thus there is sufficient statistical evidence to reject the null hypothesis and infer that the mean income across age is not the same.\nWe can observe that there are few pairs of age_bin with p-value > 0.05 such as [40,50) and [50,60]. This suggests that the differences between the medians of the pair are not statistically significant.\nWe can also observe that there is a higher wage median for those age 30-40. After the age of 40, it seems that the increase in age is not consistent with the increase in wage. The 2 highest wage level are from the opposite ends of the age spectrum. Though these are outliers, it suggests that age is not the limiting factor for high wage tier. It does not necessary mean that an individual has to be older to earn a higher income.\n\n\n4.1.3 Financial Health Observation\n\nCumulative Financial Health\nCreate a table to plot the cumulative financial health to see if there are cumulative savings in the city.\n\n# Create a data frame\ndf_totalfh <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(total_fh = sum(Financial_health))\n\n#head(df_totalfh)\n\n\n\nShow the code\n# calculate cumulative financial health\ndf_totalfh <- df_totalfh %>% \n  mutate(cumulative_fh = cumsum(total_fh))\n\nhead(df_totalfh)\n\n\n# A tibble: 6 × 3\n  month_year total_fh cumulative_fh\n  <date>        <dbl>         <dbl>\n1 2022-03-01 4832812.      4832812.\n2 2022-04-01 2204851.      7037663.\n3 2022-05-01 2403220.      9440883.\n4 2022-06-01 2421291.     11862173.\n5 2022-07-01 2272492.     14134666.\n6 2022-08-01 2574129.     16708794.\n\n\nShow the code\n# Calculate y-axis breaks and labels\ny_breaks <- pretty_breaks(n = 3)(range(df_totalfh$cumulative_fh))\ny_labels <- dollar_format(prefix = \"$\")(y_breaks)\n\n# plot graph\nggplot(data = df_totalfh, aes(x = month_year, y = cumulative_fh)) +\n  geom_line() +\n  labs(x = \"Month/Year\", y = \"Cumulative Financial Health\", title = \"Cumulative Financial Health Over Time\") +\n  stat_summary(geom = \"line\", fun = \"cumsum\", linetype = \"dashed\") +\n  scale_y_continuous(breaks = y_breaks, labels = y_labels) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  theme(plot.title = element_text(face = \"bold\"),\n        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"))\n\n\n\n\n\nFrom the figure above, we can see that the city has cumulative savings across the months.\nDiving deeper into the financial health of the participants, we will plot the boxplot of the Financial Health vs Mean Financial Health. Based on the plot below, we can see that the mean of the financial health is at the highest in March 2022 at around $4800 and decreased significantly in April 2022. Between April 2022 to Feb 2023, financial health was maintained between $2,500 to $3,000.\n\n\nShow the code\np_fh <- ggplot(data = combined_table, aes(x = month_year, y = Financial_health, \n                                      tooltip = month_year)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", size = 1) +\n  geom_line(stat = \"summary\", fun.y = \"mean\", colour = \"red\", size = 0.5) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Dark2\") +\n  labs(title = \"Financial Health Over Time\",\n       y = \"Financial Health\",\n       x = \"Month/Year\") +\n  theme(plot.title = element_text(hjust = 0.2, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        axis.text = element_text(size = 8, face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%Y\")\n\nggplotly(p_fh, tooltip = c(\"x\", \"y\", \"tooltip\"))\n\n\n\n\n\n\nTo find out if financial health is affected by wage or cost of living, we use the correlogram to see the correlation between financial health and wage, cost of living and the various expense category. Based on the correlation table and the significant test of correlation, we can see that financial health and wage has a strong positive correlation of 0.98 , while cost of living has low negative correlation of -0.14.\nBased on the correlogram below, we can also observe that Recreation and Shelter have a high correlation with Cost of living.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c( \"Wage\", \"Financial_health\", \"Cost_of_living\", \"Food\", \"Shelter\", \"Recreation\", \"Education\", \"RentAdjustment\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Financial Health Correlation Table\")\n\n\n\n\n\n\nWage CorrelationCost of Living Correlation\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Wage,\n  y = Financial_health,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Cost_of_living,\n  y = Financial_health,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\nTo further explore each expense category over time, we will plot the different expense category over time.\n\n\nShow the code\n# group the expenses by month year\nexpenses_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(total_recreation = mean(Recreation),\n            total_food = mean(Food),\n            total_shelter = mean(Shelter),\n            total_education = mean(Education))\n\n# plot the data using ggplot2\np_expense <- ggplot(expenses_grouped, aes(x = month_year)) + \n  geom_line(aes(y = total_recreation, color = \"Recreation\")) +\n  geom_line(aes(y = total_food, color = \"Food\")) +\n  geom_line(aes(y = total_shelter, color = \"Shelter\")) +\n  geom_line(aes(y = total_education, color = \"Education\")) +\n  labs(x = \"Month/Year\", y = \"Mean Expenses($)\") +\n  scale_y_continuous(limits = c(-1000, 0), \n                      breaks = seq(-1000, 0, 2*100),\n                      labels = dollar_format(prefix = \"$\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses Over time\") +\n  scale_color_manual(values = c(\"Recreation\" = \"red\", \n                                \"Food\" = \"blue\", \n                                \"Shelter\" = \"green\", \n                                \"Education\" = \"purple\")) +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5)) \n\n\nAlso, we shall plot the wage over time to compare it with the expenses over time plot.\n\n\nShow the code\n# group the wage by month year\nwage_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(mean_wage_bymonth = mean(Wage))\n\n# plot the data using ggplot2\np_meanwage <- ggplot(wage_grouped, aes(x = month_year)) + \n  geom_line(aes(y = mean_wage_bymonth)) +\n  labs(x = \"Month/Year\", y = \"Mean Wage($)\") +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses by Month/Year\") +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5))\n\n\nFor easier comparison, we shall combine the 2 plots together for better visualization.\n\nexpenses_wage <- p_expense + p_meanwage + plot_layout(heights = c(80, 50)) \nexpenses_wage\n\n\n\n\nLooking at the expenses over time plot above, it showed that education, food and shelter remained stable over time, which meant these costs are most likely fixed despite any wage fluctuations. Recreation expenses, on the hand, is high in March and decreases significantly from March 2022 to April 2022 and plateaus to a stable rate thereafter.\nLooking at the wage over time plot, we can see that in March, the mean income is at its peak in March 2022 and dips significantly in April 2022. April 2022 onward, the income remains relatively stable and starts to increase slightly in August 2022, but in Jan 2023 it start to decrease further. The fluctuations in the financial health and income is directly proportionate. And we can also see that, recreation expenses increases when there is an increase in income but remain low when income is low.\nSince this is an agricultural city, participants’ pay could be likely to be affected by the seasons and harvest.\n\n\nWage vs Cost of Living overtime\nLooking at the wage vs cost of living, we can see that on average, most citizens can cope with their cost of living as their mean wage (blue bars) is higher than the mean cost of living (red bars). Most citizens should still have savings monthly.\n\n# Creating a table with Wage and Cost of Living by month_year\n\n# Group the data by month and find the corresponding means\ndf_monthly <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(mean_income = mean(Wage),\n            mean_cost_of_living = mean(Cost_of_living))\n# Melt the data frame to create a long format\ndf_monthly_melt <- melt(df_monthly, id.vars = \"month_year\", variable.name = \"variable\", value.name = \"value\")\n\n\n\nShow the code\n# Plot using ggplot2\nggplot(df_monthly_melt, aes(x = month_year, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 25), alpha = 0.7) +\n  scale_fill_manual(name = \"Legend\", values = c(\"mean_income\" = \"blue\", \"mean_cost_of_living\" = \"red\")) +\n  labs(x = \"Month\", y = \"Mean\", title = \"Monthly Mean Income and Cost of Living\") +\n  scale_x_date(guide = guide_axis(angle = 45)) +\n  theme(axis.text.x = element_text(hjust = 0.4, vjust = 0.5, size = 5)) \n\n\n\n\n\n\n\n\n4.1.4 Observation on Education Level\n\nEducation affects financial health and birth rate\nTo see if education affects financial health and birth rate, we will create the boxplot as shown below.\n\n\nShow the code\n# Create a factor with the education levels in the desired order\nedu_levels <- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\ncombined_table$educationLevel <- factor(combined_table$educationLevel, levels = edu_levels)\n\n# Create a box plot with separate panels for individuals with and without kids\np_fh_kids <- ggplot(combined_table, aes(x = educationLevel, y = Financial_health, fill = haveKids)) +\n  geom_boxplot() +\n  stat_summary(aes(group = haveKids, color = haveKids), fun = mean, geom = \"line\", size = 0.5) + # add mean lines\n  stat_boxplot(geom='errorbar', width=0.1, coef=1.5, size=0.5) + # add error bars\n  scale_fill_manual(name = \"haveKids\", values = c(\"FALSE\" = \"grey\", \"TRUE\" = \"orange\")) +\n  labs(title = \"Boxplot of Financial Health and Education by Kids\", x = \"Education\", y = \"Financial Health\") +\n  facet_wrap(~haveKids, ncol = 2) +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Display the plot\nggplotly(p_fh_kids)\n\n\n\n\n\n\nWe observe here that education is positively correlated to wage and financial health of the citizens. The higher the education level, the higher the financial health. Also, we can see that citizen with kids tend to have better financial health overall. Thus, showing that good education is necessary for higher wage.\nTo further confirm that wage is affected by education level, we will test the following null hypothesis:\nH0: the mean wage across different education levels are the same\nH1: the mean wage across different education levels are different\nAs based on previous normality assumption test done for wage, we know that wage is not normally distributed. Thus, to test the null hypothesis, we will perform the non-parametric test, Oneway ANOVA Test.\n\n\nShow the code\nggbetweenstats(\n  data = combined_table,\n  x = educationLevel, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"ns\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  ylim = c(0, 25000),\n  breaks = seq(0, 25000, 5000)\n) +\nggtitle(\"Oneway ANNOVA - Income across different educationLevel\")\n\n\n\n\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can thus conclude that education indeed does affect one’s wage and overall the median wage is higher for higher education level, which is consistent with our findings earlier."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#observation-on-joviality",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#observation-on-joviality",
    "title": "Take-Home_Ex01",
    "section": "4.2 Observation on Joviality",
    "text": "4.2 Observation on Joviality\nTo find out the factors that could possibly affect joviality, we plot the below correlogram. However, looking at the plot below, we can see that none of the factors have correlation more than 0.5. Joviality has a negative correlation relationship with wage, expense, and savings.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c(\"joviality\", \"Wage\", \"Financial_health\", \"Cost_of_living\", \"age\", \"householdSize\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Joviality Correlation Table\")\n\n\n\n\n\n\n4.2.1 Joviality is affected by Financial health\nEven though correlation between joviality is weak (-0.35), we can observe the smooth red curve is relatively different across different income levels. It appears joviality has a strong correlation for lower income levels as compaeed to the rich. when broken down in health levels, it appears that joviality has the lowest correlation for middle income, the R2= 0.006.\nHowever, we also observed that there are poor people who have the highest joviality of 0.90 whereas for the income earners (in red), all of them have a joviality score below 0.64. Thus, we can conclude that being rich does not necessarily make citizens happy.\n\n\nShow the code\n# Create the plot\np_j <- ggplot(combined_table, aes(x = Financial_health, y = joviality, color = Wage)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"loess\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) + # Set Y-axis limits to 0-1\n  scale_color_gradient(low = \"blue\", high = \"red\") # Set color scale from blue to red\n\nggplotly(p_j)\n\n\n\n\n\n\n\n\nShow the code\nlibrary(ggpmisc)\n# Compute the 25th and 75th percentiles of Financial_health\nq <- quantile(combined_table$Financial_health, probs = c(0.25, 0.75))\n\n# Create a new column \"income_level\" based on Financial_health percentiles\ncombined_table$income_level <- ifelse(combined_table$Financial_health < q[1], \"Low\",\n                                      ifelse(combined_table$Financial_health > q[2], \"High\", \"Middle\"))\n\n# Specify the order of the income levels\ncombined_table$income_level <- factor(combined_table$income_level,\n                                      levels = c(\"Low\", \"Middle\", \"High\"))\n\n# Create the plot with facets and regression line equation\nggplot(combined_table, aes(x = Financial_health, y = joviality)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"lm\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) + # Set Y-axis limits to 0-1\n  facet_wrap(~ income_level) + # Create facets by income level\n  stat_poly_eq(formula = y ~ x, aes(label = paste(\"R^2 = \", round(..r.squared.., 3))),\n               parse = TRUE, label.x = \"right\", label.y = 0.9, \n               eq.with.lhs = FALSE, size = 3) + # Show R-squared only, adjust label position and decrease font size\n  theme(plot.margin = unit(c(1, 1, 1, 5), \"lines\")) # Adjust right margin to make room for equation\n\n\n\n\n\n\n\n4.2.2 Joviality is affected by Cost of Living\nTo test the significance of correlation between joviality and cost of living, the following code chunk is used, and we notice that the slight positive correlation for 0.45.\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Cost_of_living,\n  y = joviality,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\nJoviality vs expense_category\nWe can see that food expenses has the highest correlation at 0.49. Thus, the city planners and managers can consider allocating a portion of the grant to food expenses.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c(\"joviality\", \"Food\", \"Education\", \"Shelter\", \"Recreation\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Joviality Correlation Table\")\n\n\n\n\n\n\n\nShow the code\n# Select only the columns of interest from combined_table\ndata_reg <- select(combined_table, Shelter, Food, Education, Recreation, joviality)\n\ndata_reg <- data_reg %>%\n  mutate_at(vars(Shelter, Food, Education, Recreation), abs)\n\n# Melt data into long format\ndata_reg <- reshape2::melt(data_reg, id.vars = \"joviality\")\n\n#Create plot with multiple regression lines\n\nggplot(data_reg, aes(x = value, y = joviality, color = variable)) +\n  geom_point(size = 0.25) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, aes(group = variable)) +\n  xlab(\"Expenses_type\") +\n  ylab(\"Joviality\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#observation-on-interest-groups",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#observation-on-interest-groups",
    "title": "Take-Home_Ex01",
    "section": "4.3 Observation on Interest Groups",
    "text": "4.3 Observation on Interest Groups\nWe can plot the histogram below to observe the distribution of the different interest interest group. As seen from below, there is roughly the same proportion of participants in each group.\n\n\nShow the code\ncombined_table_grp <- combined_table %>% \n  group_by(participantId) %>%\n  summarise(interestGroup = first(interestGroup), age_bin = first(age_bin)) # assuming interestGroup and age_bin are constant for each participantID\n\nggplot(data = combined_table_grp, aes(x = interestGroup)) + \n  stat_count(color=\"black\", fill=\"azure4\") + \n  labs(x = \"Interest Groups\", y = \"Number of participants\") +\n  ggtitle(\"Distribution of interest groups\") +\n  geom_text(stat = \"count\", aes(label=..count..), vjust=-0.5) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nFurthermore, we can use the heatmap to have overall glimpse of the interest groups by age_bin to see if it affects the type of interest participants are in.\nFrom the heatmap below, we can see that there is a high proportion of age_bin [30,40) that are in Interest Group H.\n\n\nShow the code\n#Group the data by interest group and age bin, and count the number of participants\n\ndf_heatmap <- combined_table_grp %>% \n  group_by(interestGroup, age_bin) %>% \n  summarize(n = n()) %>% \n  ungroup()\n\n# Create a heatmap\nggplot(data = df_heatmap, aes(x = interestGroup, y = age_bin, fill = n)) +\n  geom_tile() +\n  scale_fill_gradientn(colors = c(\"lightblue\", \"red\"), na.value = \"white\") +\n  labs(x = \"Interest Group\", y = \"Age Bin\", fill = \"Number of Participants\") +\n  ggtitle(\"Heatmap of Participants by Interest Group and Age\") +\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualizing-uncertainty",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualizing-uncertainty",
    "title": "Take-Home_Ex01",
    "section": "4.4 Visualizing uncertainty",
    "text": "4.4 Visualizing uncertainty\n\n4.4.1 Visualizing uncertainty of point estimates\nIt can be tempting to interpret point estimates like median as the true precise representation of the true data value. However, it should be noted that there are uncertainties surrounding these point estimates. Thus we want to show the target quantile confidence levels (95% or 99%) that the true (unknown) estimate would like within the interval, given evidence provided by observed data.\nAs can been seen from the age_bin plot below, some age_bin have higher uncertainties such as age_bin [20,30) and [50,60]. This could be due to the presence of large no of outliers, and probably at the stage of the deciding their career path. On the other hand, age_bin such as [18,20) has less uncertainties,which may indicate lower presence of outliers.\nLikewise, for the educationLevel plot below, low level education has less uncertainties, while the higher educationLevel, the higher the uncertainties get.\n\nAge_bineducationLevel\n\n\n\n\nShow the code\n#Base ggplot\nggplot(data = combined_table,\n  aes(x = age_bin,\n      y = Wage)) +\n\n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals\n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n\n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of wage by age_bin',\n  subtitle = 'Quantiles intervals (95% and 99%) of wage by age_bin',\n  x = \"age_bin\",\n  y = \"Wage\") +\n\n  theme_hc() +\n\n  theme(plot.title = element_text(face = \"bold\", size = 18),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(angle = 30, hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = combined_table,\n  aes(x = educationLevel,\n      y = Wage)) +\n\n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals\n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n\n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of wage by educationLevel',\n  subtitle = 'Quantiles intervals (95% and 99%) of wage by educationLevel',\n  x = \"educationLevel\",\n  y = \"Wage\") +\n\n  theme_hc() +\n\n  theme(plot.title = element_text(face = \"bold\", size = 18),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(angle = 30, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n4.4.2 Visualizing Uncertainty with Hypothetical Outcome Plots (HOPs)\nHPOs can help to illustrate the uncertainty and variability of the data and model predictions, and highlight the potential impact of different variables or factors on the outcomes of interest.\n\nAge_bineducationLevel\n\n\n\n\nShow the code\nlibrary(ungeviz)\n\nggplot(data = combined_table,\n        (aes(x = factor(age_bin), y = Wage))) +\n   geom_point(position = position_jitter(\n     width = 0.05, height = 0.3),\n     size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n   geom_hpline(data = sampler(25, group = age_bin), height = 0.6, color = \"#D55E00\") +\n   theme_bw() +\n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = combined_table,\n        aes(x = factor(educationLevel), y = Wage)) +\n   geom_point(position = position_jitter(\n     width = 0.05, height = 0.3),\n     size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n   geom_hpline(data = sampler(25, group = educationLevel), height = 0.6, color = \"#D55E00\") +\n   theme_bw() +\n   transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home_Ex02",
    "section": "",
    "text": "The country of Oceanus has sought FishEye International’s help in identifying companies possibly engaged in illegal, unreported, and unregulated (IUU) fishing. As part of the collaboration, FishEye’s analysts received import/export data for Oceanus’ marine and fishing industries.\nWith reference to Mini-Challenge 2 of VAST Challenge 2023 and by using appropriate static and interactive statistical graphics methods, we will be helping FishEye to identify companies that may be engaged in illegal fishing."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-and-launching-r-packages",
    "title": "Take Home_Ex02",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\npacman::p_load(jsonlite,tidygraph,ggraph,visNetwork,tidyverse,lubridate,igraph,plotly)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#loading-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#loading-the-data",
    "title": "Take Home_Ex02",
    "section": "3.2 Loading the Data",
    "text": "3.2 Loading the Data\nfromJSON() of jsonlite package is used to import mc2_challenge_graph.json into R environment.\n\nMC2 <- fromJSON(\"data/mc2_challenge_graph.json\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "title": "Take Home_Ex02",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Extracting the nodes\nThe code chunk is used to extract nodes data table from mc2_data list object and save the output in a tibble data frame object called mc2_nodes.\n\n#Extract id, shpcountry and rcvcountry and make it as a tibble database. use select to choose the fields you want and reorganise the fields as you want\nMC2_nodes <- as_tibble(MC2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\nhead(MC2_nodes)\n\n# A tibble: 6 × 3\n  id                                shpcountry rcvcountry\n  <chr>                             <chr>      <chr>     \n1 AquaDelight Inc and Son's         Polarinda  Oceanus   \n2 BaringoAmerica Marine Ges.m.b.H.  <NA>       <NA>      \n3 Yu gan  Sea spray GmbH Industrial Oceanus    Oceanus   \n4 FlounderLeska Marine BV           <NA>       <NA>      \n5 Olas del Mar Worldwide            Oceanus    Oceanus   \n6 French Crab S.p.A. Worldwide      Kondanovia Utoporiana\n\n\n\n\n\n\n\n\nThings to learn\n\n\n\nselect() is used not only to select the field needed but also to re-organise the sequence of the fields.\n\n\n\n\n3.3.2 Extracting the edges\nThe code chunk is used to extract edges data table from mc2_data list object and save the output in a tibble data frame object called mc2_edges.\n\nMC2_edges <- as_tibble(MC2$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, valueofgoodsusd, volumeteu, weightkg)\n\n\n\n3.3.3 Reviewing the imported data\nNext, we will examine the structure of the data frame using glimpse() of dplyr.\n\nglimpse(MC2_nodes)\n\nRows: 34,576\nColumns: 3\n$ id         <chr> \"AquaDelight Inc and Son's\", \"BaringoAmerica Marine Ges.m.b…\n$ shpcountry <chr> \"Polarinda\", NA, \"Oceanus\", NA, \"Oceanus\", \"Kondanovia\", NA…\n$ rcvcountry <chr> \"Oceanus\", NA, \"Oceanus\", NA, \"Oceanus\", \"Utoporiana\", NA, …\n\nglimpse(MC2_edges)\n\nRows: 5,464,378\nColumns: 8\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ valueofgoodsusd  <dbl> NA, NA, NA, NA, NA, NA, 87110, 188140, NA, 221110, 58…\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe output report of MC2_edges above reveals that the arrivaldate is treated as  data type instead of date data type. This is an error! Before we continue, it is important for us to change the data type of arrivaldate field to “Date”” data type.\n\n\n\n\n3.3.4 Wrangling Time\n\nMC2_edges <- MC2_edges %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  mutate(Month = month(ArrivalDate)) %>%\n  mutate(Monthyear = paste(Year, Month, sep = \"-\")) %>%\n  select(source, target, ArrivalDate, Month, Year, hscode, valueofgoods_omu, volumeteu, weightkg, valueofgoodsusd) %>%\n  distinct()\nhead(MC2_edges)\n\n# A tibble: 6 × 10\n  source        target ArrivalDate Month  Year hscode valueofgoods_omu volumeteu\n  <chr>         <chr>  <date>      <dbl> <dbl> <chr>             <dbl>     <dbl>\n1 AquaDelight … Barin… 2034-02-12      2  2034 630630           141015         0\n2 AquaDelight … Barin… 2034-03-13      3  2034 630630           141015         0\n3 AquaDelight … -15045 2028-02-07      2  2028 470710               NA         0\n4 AquaDelight … -15045 2028-02-23      2  2028 470710               NA         0\n5 AquaDelight … -15045 2028-09-11      9  2028 470710               NA         0\n6 AquaDelight … -15045 2028-10-09     10  2028 470710               NA         0\n# ℹ 2 more variables: weightkg <int>, valueofgoodsusd <dbl>\n\n\n\n\n\n\n\n\nThings to learn\n\n\n\n\nmutate() is used 4 times to create 4 derive fields.\n\nymd() of lubridate package is used to covert arrivaldate field from character data type into date data type.\nyear() of lubridate package is used to convert the values in ArrivalDate field into year values.\nmonth() of lubridate package is used to convert the values in ArrivalDate field into month values.\n\nselect() is used not only to select the field needed but also to re-organise the sequent of the fields.\n\n\n\n\n\n3.3.5 Checking if there is any missing values in the edge data table\nThe below chunck is used to calculate the percentage of NAs and 0s in the each column in the edge data table to see if we should use it for our analysis.\n\n# Select specific columns in your dataset\nselected_columns <- c(\"valueofgoods_omu\", \"volumeteu\", \"weightkg\", \"valueofgoodsusd\")\n\n## Calculate the percentage of NA values and zeros for the selected columns\ntotal_rows <- nrow(MC2_edges)\nna_percentage <- colSums(is.na(MC2_edges[, selected_columns])) / total_rows * 100\nzero_percentage <- colSums(MC2_edges[, selected_columns] == 0, na.rm = TRUE) / total_rows * 100\n\n# Combine the results into a data frame\nresult <- data.frame(NA_Percentage = na_percentage, Zero_Percentage = zero_percentage)\n\n# Display the result\nresult\n\n                 NA_Percentage Zero_Percentage\nvalueofgoods_omu      99.99471      0.00000000\nvolumeteu              9.38167     75.91084870\nweightkg               0.00000      0.90128491\nvalueofgoodsusd       54.36443      0.08169013\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThere is a high percentage of NA value in valueofgoods_omu and valueofgoodusd and a high percentage of zero in volumeteu, thus we will leave them out in our analysis, since we are unable to derive any useful insights.\n\n\n\n\n3.3.6 Preparing the edges data table\nHarmonized System (HS) codes are the identification codes given to goods for use in international trade. The HS codes are administered by the World Customs Organization (WCO) and are internationally accepted for use by customs authorities and companies to identify goods.\nSince we are doing an analysis on the fishing industry, we have to first filter those hscodes that are fishing industry related products.\n\nmc2_edges_aggregated <- MC2_edges %>%\n  filter(grepl(\"^30[1-8]|^2301|^160[4-5]|^1212|^1302|^1504|^151610|^151790\", hscode)) %>% # filter out only those hscode that are fishing industry related products \n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), median_weight = median(weightkg)) %>%\n  filter(source!=target) %>%\n  filter(weights>10) %>%\n  ungroup()\nmc2_edges_aggregated\n\n# A tibble: 12,408 × 6\n   source                              target hscode  Year weights median_weight\n   <chr>                               <chr>  <chr>  <dbl>   <int>         <dbl>\n 1 \" Direct Herring Company Transit\"   Estre… 306170  2031      12        21078.\n 2 \"1 Limited Liability Company\"       Olas … 303630  2034      28        19830 \n 3 \"1 Limited Liability Company Trans… Selou… 160414  2030      12         9985 \n 4 \"1 Limited Liability Company Trans… Selou… 160414  2031      21         8815 \n 5 \"1 Limited Liability Company Trans… Selou… 160414  2032      16         6908.\n 6 \"1 Limited Liability Company Trans… Selou… 160414  2033      54         6922.\n 7 \"1 Limited Liability Company Trans… Selou… 160414  2034      28         6545 \n 8 \"1 Ltd. Liability Co Cargo\"         Himac… 306170  2028      68        10095 \n 9 \"1 Ltd. Liability Co Cargo\"         Himac… 306170  2029      59        19205 \n10 \"1 Ltd. Liability Co Cargo\"         Himac… 306170  2030      26        17708.\n# ℹ 12,398 more rows\n\n\nNext, we take a look at what are the top fishing related products that has most transactions.\n\ntop_3_hscode <- mc2_edges_aggregated %>%\n  group_by(hscode) %>%\n  summarise(total_weights = sum(weights)) %>%\n  arrange(desc(total_weights)) %>%\n  slice_head(n = 3)\n\ntop_3_hscode\n\n# A tibble: 3 × 2\n  hscode total_weights\n  <chr>          <int>\n1 306170        122910\n2 304620         81075\n3 160414         63745\n\n\nThe top 3 hscodes that has most number of transactions are ‘306170’,‘304620’ and ‘160414’. Thus, we will focus our analysis based on these 3 hscodes.\n\n#Filter the mc2_edges_aggregated based on the top 3 hscode\nmc2_edges_aggregated_top <- mc2_edges_aggregated %>%\n  filter(hscode == \"306170\"| hscode == \"304620\"| hscode == \"160414\")\n\n#mc2_edges_aggregated_top\n\n\n\n\n\n\n\nThings to learn\n\n\n\n\nfilter() is used to select records whereby hscode that fishing industry related products. The selection of hscode is referenced from the link here\ngroup_by() is used to aggregate values by source, target, hscode, Year.\nsummarise() and n() are used to count the aggregated records.\nfilter() is then used to perform the below selection,\n\nto select all records whereby source are not equal to target\n\n\n\n\n\n\n3.3.7 Preparing the nodes data table\nInstead of using the nodes data table extracted from mc2_data, we will prepare a new nodes data table by using the source and target fields of mc2_edges_aggregated data table. This is necessary to ensure that the nodes in nodes data tables include all the source and target values. Then we will reference to the MC2_nodes table to get the corresponding shpcountry and rcvcountry values.\n\nid1_aggregated <- mc2_edges_aggregated_top %>%\n  select(source) %>%\n  rename(id = source)\nid2_aggregated <- mc2_edges_aggregated_top %>%\n  select(target) %>%\n  rename(id = target)\nmc2_nodes_extracted_aggregated <- rbind(id1_aggregated, id2_aggregated) %>%\n  distinct()\n\n# Join with MC2_nodes by 'id to get the 'shpcountry', and 'rcvcountry'\nmc2_nodes_extracted_aggregated <- mc2_nodes_extracted_aggregated %>%\n  left_join(MC2_nodes, by = \"id\")\nhead(mc2_nodes_extracted_aggregated)\n\n# A tibble: 6 × 3\n  id                                                shpcountry rcvcountry \n  <chr>                                             <chr>      <chr>      \n1 \" Direct Herring Company Transit\"                 Mawazam    Coralmarica\n2 \"1 Limited Liability Company Transport\"           Kondanovia Oceanus    \n3 \"1 Ltd. Liability Co Cargo\"                       Mawandia   <NA>       \n4 \"6 Ltd. Liability Co Transportation\"              Marebak    Oceanus    \n5 \"8 Aquamarine Limited Liability Company Holdings\" Marebak    Oceanus    \n6 \"9 Marine biology Ltd Family\"                     Mawazam    <NA>       \n\n\n\n\n3.3.8 Building the tidygraph model\nThe code chunk below is then used to build the tidy graph data model.\n\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted_aggregated,\n                       edges = mc2_edges_aggregated_top,\n                       directed = TRUE)\nmc2_graph\n\n# A tbl_graph: 930 nodes and 4670 edges\n#\n# A directed acyclic multigraph with 27 components\n#\n# A tibble: 930 × 3\n  id                                                shpcountry rcvcountry \n  <chr>                                             <chr>      <chr>      \n1 \" Direct Herring Company Transit\"                 Mawazam    Coralmarica\n2 \"1 Limited Liability Company Transport\"           Kondanovia Oceanus    \n3 \"1 Ltd. Liability Co Cargo\"                       Mawandia   <NA>       \n4 \"6 Ltd. Liability Co Transportation\"              Marebak    Oceanus    \n5 \"8 Aquamarine Limited Liability Company Holdings\" Marebak    Oceanus    \n6 \"9 Marine biology Ltd Family\"                     Mawazam    <NA>       \n# ℹ 924 more rows\n#\n# A tibble: 4,670 × 6\n   from    to hscode  Year weights median_weight\n  <int> <int> <chr>  <dbl>   <int>         <dbl>\n1     1   543 306170  2031      12        21078.\n2     2   544 160414  2030      12         9985 \n3     2   544 160414  2031      21         8815 \n# ℹ 4,667 more rows"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calulating-the-in-out-and-total-degree-centrality-of-the-nodes",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calulating-the-in-out-and-total-degree-centrality-of-the-nodes",
    "title": "Take Home_Ex02",
    "section": "4.1 Calulating the in, out and total degree centrality of the nodes",
    "text": "4.1 Calulating the in, out and total degree centrality of the nodes\nDegree centrality is a measure of immediate connection in a network. It could be interpreted as immediate reach in a social network.\nWe will calculate the in and out degree centrality of the nodes, and create 2 new columns to store these scores.\n\n\n# A tbl_graph: 930 nodes and 4670 edges\n#\n# A directed acyclic multigraph with 27 components\n#\n# A tibble: 930 × 6\n  id            shpcountry rcvcountry in_degree_centrality out_degree_centrality\n  <chr>         <chr>      <chr>                     <dbl>                 <dbl>\n1 Mar del Este… Merigrad   Oceanus                     400                     0\n2 Caracola del… Puerto Sol Oceanus                     363                     0\n3 hǎi dǎn Corp… Marebak    Oceanus                     337                     0\n4 Costa de la … Alverossia Oceanus                     181                     0\n5 Selous Game … Isliandor  Oceanus                     153                     0\n6 Pao gan SE S… Alverossia Oceanus                     150                     0\n# ℹ 924 more rows\n# ℹ 1 more variable: degree_centrality <dbl>\n#\n# A tibble: 4,670 × 6\n   from    to hscode  Year weights median_weight\n  <int> <int> <chr>  <dbl>   <int>         <dbl>\n1   402    48 306170  2031      12        21078.\n2   403     5 160414  2030      12         9985 \n3   403     5 160414  2031      21         8815 \n# ℹ 4,667 more rows\n\n\n\n\n\n\n\n\nThings to learn\n\n\n\nactivate() is used to make the nodes of mc2_graph active to calculate the degree centrality.\nmutate() function from the dplyr package is used to add two new columns, in_degree_centrality and out_degree_centrality, to the nodes of the mc2_graph object"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#determining-the-type-of-entity-the-id-belongs-to",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#determining-the-type-of-entity-the-id-belongs-to",
    "title": "Take Home_Ex02",
    "section": "4.2 Determining the type of entity the id belongs to",
    "text": "4.2 Determining the type of entity the id belongs to\n\n#Specify what entity the id could be \nmc2_graph <- mc2_graph %>%\n  mutate(\n    node_type = case_when(\n      in_degree_centrality == 0 & out_degree_centrality > 0 ~ \"vessels\",\n      in_degree_centrality > 0 & out_degree_centrality == 0 ~ \"transshipment\",\n      in_degree_centrality > 0 & out_degree_centrality > 0 ~ \"vessels/transshipment\"\n    )\n  )\n\n\n4.2.1 Counting number of entities for each business type\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Count the how many id belong to each entity\nvessels_count <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  filter(node_type == \"vessels\") %>%\n  nrow()\n\ntranshipment_count <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  filter(node_type == \"transshipment\") %>%\n  nrow()\n\nboth_count <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  filter(node_type == \"vessels/transshipment\") %>%\n  nrow()\n\n# cat(\"Number of vessels:\", vessels_count, \"\\n\")\n# cat(\"Number of transshipment:\", transhipment_count, \"\\n\")\n# cat(\"Number of vessels/transshipment:\", both_count, \"\\n\")\n\n\nAfter cleaning up the data, we have a total of 529 vessels, 388 transshipment and 13 companies that may be either a vessel or transshipment to work with for our analysis.\n\n\n\n\n\n\nNote\n\n\n\n\nIf in_degree_centrality == 0, it means that the company is most likely a pure exporter and highly likely a vessel.\nIf out_degree_centrality == 0, it means that the company is most likely a pure importer and highly likely involved in transshipment.\nIf in_degree_centrality > 0 & out_degree_centrality > 0, the company is most likely both a vessel or transshipment."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#community-detection-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#community-detection-analysis",
    "title": "Take Home_Ex02",
    "section": "4.6 Community Detection Analysis",
    "text": "4.6 Community Detection Analysis\nNext, we will do a community detection analysis using the group_edge_betweenness function. It works by iteratively removing the edges with the highest betweenness centrality, which is a measure of the number of shortest paths that pass through an edge. By removing these edges, the graph is divided into clusters or communities.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nset.seed(123)\nmc2_graph <- mc2_graph %>%\n   mutate(community = as.factor(group_edge_betweenness(weights = weights, directed = TRUE)))\n\ng_mcgraph <- mc2_graph %>%\n  activate(nodes) %>%\n  group_by(community) %>%\n  filter(n() > 2) %>%    #filter the community size > 2\n  ungroup() %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights), \n                 alpha = 0.2,\n                 arrows = \"to\") +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community)) +\n  theme_graph()\n\ng_mcgraph\n\n\n\n\n\nAs seen from the community detection graph above, after filtering for community size > 2, there are 9 community shown, and looking at the connectivity and density of the graph, it seems that community 1, seems to be the most densely populated. Thus, for the following analysis, we shall focus on community 1.\nThe code chunk below can be used to find out which node has the highest in-degree centrality for in community 1. And we can see that within community 1, Mar del Este CJSC has the highest in-degree centrality score.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nindegree_community <- mc2_graph %>%\n  activate(nodes) %>%\n  filter(community == 1) %>%\n  mutate(in_degree_centrality_community = centrality_degree(mode = \"in\")) %>%\n  arrange(desc(in_degree_centrality_community)) %>%\n  as_tibble()\n\nhead(indegree_community, 5)\n\n\n# A tibble: 5 × 11\n  id            shpcountry rcvcountry in_degree_centrality out_degree_centrality\n  <chr>         <chr>      <chr>                     <dbl>                 <dbl>\n1 Mar del Este… Merigrad   Oceanus                     400                     0\n2 hǎi dǎn Corp… Marebak    Oceanus                     337                     0\n3 Caracola del… Puerto Sol Oceanus                     363                     0\n4 Costa de la … Alverossia Oceanus                     181                     0\n5 Pao gan SE S… Alverossia Oceanus                     150                     0\n# ℹ 6 more variables: degree_centrality <dbl>, eigen_centrality <dbl>,\n#   combined_centrality <dbl>, node_type <chr>, community <fct>,\n#   in_degree_centrality_community <dbl>"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take Home_Ex03",
    "section": "",
    "text": "FishEye International, a non-profit focused on countering illegal, unreported, and unregulated (IUU) fishing, has been given access to an international finance corporation’s database on fishing related companies. In the past, FishEye has determined that companies with anomalous structures are far more likely to be involved in IUU (or other “fishy” business). FishEye has transformed the database into a knowledge graph. It includes information about companies, owners, workers, and financial status. FishEye is aiming to use this graph to identify anomalies that could indicate a company is involved in IUU.\nWith reference to Mini-Challenge 3 of VAST Challenge 2023 and by using appropriate static and interactive statistical graphics methods, we will be helping FishEye to better understand fishing business anomalies."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#install-and-launching-r-packages",
    "title": "Take Home_Ex03",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\npacman::p_load(jsonlite, tidygraph, ggraph, \n               visNetwork, graphlayouts, ggforce, \n               skimr, tidytext, tidyverse, patchwork, ggiraph, ggrepel)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-the-data",
    "title": "Take Home_Ex03",
    "section": "3.2 Loading the Data",
    "text": "3.2 Loading the Data\nfromJSON() of jsonlite package is used to import MC3.json into R environment.\n\nmc3_data <- fromJSON(\"data/MC3.json\")\n\nThe output is called mc3_data. It is a large list R object."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#data-wrangling",
    "title": "Take Home_Ex03",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculating-the-in-out-and-total-degree-centrality-of-the-nodes",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculating-the-in-out-and-total-degree-centrality-of-the-nodes",
    "title": "Take Home_Ex02",
    "section": "4.1 Calculating the in, out and total degree centrality of the nodes",
    "text": "4.1 Calculating the in, out and total degree centrality of the nodes\nDegree centrality is a measure of immediate connection in a network. It could be interpreted as immediate reach in a social network.Eigenvector centrality is a measure that takes into account both the number of connections that a node or an actor has, and the degree of influence that the node’s immediate connections have in the entire network.\nWe will calculate the in, out and total degree centrality of the nodes, and use mutate() to create new columns to store these values.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Calulate the in, out and total degree centrality and add 3 new columns via mutate() to store the values \nmc2_graph <- mc2_graph %>%\n  activate(nodes) %>%\n  mutate(\n    in_degree_centrality = centrality_degree(mode = \"in\"),\n    out_degree_centrality = centrality_degree(mode = \"out\"),\n    degree_centrality = centrality_degree(mode = \"all\"),\n    eigen_centrality = centrality_eigen()\n  ) %>%\n  mutate(combined_centrality = degree_centrality * eigen_centrality) %>%\n  arrange(desc(combined_centrality)) \nmc2_graph\n\n\n# A tbl_graph: 930 nodes and 4670 edges\n#\n# A directed acyclic multigraph with 27 components\n#\n# A tibble: 930 × 8\n  id            shpcountry rcvcountry in_degree_centrality out_degree_centrality\n  <chr>         <chr>      <chr>                     <dbl>                 <dbl>\n1 \"Mar del Est… Merigrad   Oceanus                     400                     0\n2 \"Caracola de… Puerto Sol Oceanus                     363                     0\n3 \"hǎi dǎn Cor… Marebak    Oceanus                     337                     0\n4 \"Costa de la… Alverossia Oceanus                     181                     0\n5 \"Blue Horizo… Osterivar… <NA>                          0                   108\n6 \"Sea Breezes… Isliandor  Coralmari…                    0                   117\n# ℹ 924 more rows\n# ℹ 3 more variables: degree_centrality <dbl>, eigen_centrality <dbl>,\n#   combined_centrality <dbl>\n#\n# A tibble: 4,670 × 6\n   from    to hscode  Year weights median_weight\n  <int> <int> <chr>  <dbl>   <int>         <dbl>\n1   788   158 306170  2031      12        21078.\n2   279     7 160414  2030      12         9985 \n3   279     7 160414  2031      21         8815 \n# ℹ 4,667 more rows\n\n\nBelow code chunk to find out the top 20 id that has a high combined degree and eigenvector centrality score.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Select the top 20 IDs based on centrality value\ntop_20_ids <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  pull(id) %>%\n  head(20)\n\ntop_20_ids\n\n\n [1] \"Mar del Este CJSC\"                   \"Caracola del Sol Services\"          \n [3] \"hǎi dǎn Corporation Wharf\"           \"Costa de la Felicidad Shipping\"     \n [5] \"Blue Horizon Family &\"               \"Sea Breezes S.A. de C.V. Freight \"  \n [7] \"Selous Game Reserve  S.A. de C.V.\"   \"Playa de Arena OJSC Express\"        \n [9] \"Pao gan SE Seal\"                     \"Pao gan LC Freight \"                \n[11] \"AquaDelight N.V. Coral Reef\"         \"Balkan Cat ОАО Transport\"           \n[13] \"Madagascar Coast  AG Freight \"       \"Shou gan  Oyj Overseas\"             \n[15] \"Lake Tana  & Son's\"                  \"Daniel Ferry N.V. Transit\"          \n[17] \"Caracola del Este Ltd. Liability Co\" \"Viento Azul N.V. Distribution\"      \n[19] \"Tripura  Market S.A. de C.V.\"        \"The Sea Turtle GmbH & Co. KG\"       \n\n\nBsed on the table above, we can see that the top 20 actors with high combined degree and eigen centrality value, include Mar del Este CJSC, Caracola del Sol Services and hǎi dǎn Corporation Wharf.\n\n\n\n\n\n\nThings to learn\n\n\n\nactivate() is used to make the nodes of mc2_graph active to calculate the degree centrality.\nmutate() function from the dplyr package is used to add two new columns, in_degree_centrality and out_degree_centrality, to the nodes of the mc2_graph object"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-the-network-graph-with-ggraph",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-the-network-graph-with-ggraph",
    "title": "Take Home_Ex02",
    "section": "4.3 Visualising the network graph with ggraph",
    "text": "4.3 Visualising the network graph with ggraph\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes(width=weights), \n                 alpha=0.2) +\n  geom_node_point(aes(colour = node_type)) +\n  theme_graph() +\n  labs(title = \"Network graph of global transhipment activities\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#flag-based-network",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#flag-based-network",
    "title": "Take Home_Ex02",
    "section": "4.4 Flag Based Network",
    "text": "4.4 Flag Based Network\nTo gain a better understanding of the prevalence of the types of flags in the transshipment events, we can find out which country the vessels tends to be most often associated with when shipping.\nAnd we can see that vessels tend to ship to Merigrad and Marebak.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\ncountry_id_counts_shp <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  filter(in_degree_centrality == 0) %>% # filter out for the vessels \n  group_by(shpcountry) %>%\n  summarise(id_count = n_distinct(id)) %>%\n  arrange(desc(id_count))\n\nhead(country_id_counts_shp)\n\n\n# A tibble: 6 × 2\n  shpcountry   id_count\n  <chr>           <int>\n1 Merigrad           97\n2 Marebak            78\n3 Vesperanda         54\n4 Mawazam            52\n5 Osterivaria        49\n6 Arreciviento       31\n\n\nAlso, we can see that for transshipment, companies are most often associated with Oceanus when receiving their products.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\ncountry_id_counts_rcv <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  filter(out_degree_centrality == 0) %>% # filter out for the vessels \n  group_by(rcvcountry) %>%\n  summarise(id_count = n_distinct(id)) %>%\n  arrange(desc(id_count))\n\nhead(country_id_counts_rcv)\n\n\n# A tibble: 6 × 2\n  rcvcountry   id_count\n  <chr>           <int>\n1 Oceanus           362\n2 Coralmarica        13\n3 Sol y Oceana        5\n4 Utoporiana          2\n5 Icarnia             1\n6 Kethilim            1"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#top-20-transshipment-companies-trading-frequencies",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#top-20-transshipment-companies-trading-frequencies",
    "title": "Take Home_Ex02",
    "section": "4.5 Top 20 transshipment companies trading frequencies",
    "text": "4.5 Top 20 transshipment companies trading frequencies\nCheck out the trading frequencies of the top 20 transshipment companies trading frequencies over the years. These top 20 companies are those who has high in-degree centrality.\nWe can see that the total transactions fluctuates more for Caracola del Sol Services, Mar del Este CJSC and Pao gan SE Seal.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Select the top 20 IDs based on centrality value\ntop_20_ids <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  arrange(desc(in_degree_centrality)) %>%\n  pull(id) %>%\n  head(20)\n\n# Filter the mc2_edges_aggregated_top dataframe\nfiltered_edges_entities <- mc2_edges_aggregated_top %>%\n  filter(target %in% top_20_ids) %>%\n  group_by(Year, target) %>%\n  summarise(total_weight = sum(weights))\n\n# Plot the aggregated weights\np <- ggplot(filtered_edges_entities, aes(x = Year, y = total_weight, color = target)) +\n  geom_line() +\n  geom_point() +\n  labs(x = \"Year\", y = \"Total transactions\", title = \"Number of Transactions by Year\") +\n  scale_color_discrete(name = \"Target Entity\")\n\nggplotly(p)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-the-visnetwork-graph-of-transshipment-leader",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-the-visnetwork-graph-of-transshipment-leader",
    "title": "Take Home_Ex02",
    "section": "4.7 Plotting the visNetwork graph of transshipment leader",
    "text": "4.7 Plotting the visNetwork graph of transshipment leader\nNext, we will further investigate our highest transshipment node, Mar del Este CJSC, by plotting its network graph over the years from 2028-2034 to see if we can find any insights.\n\n202820292030203120322034\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Filter the year and id in edges and the corresponding id\nfiltered_graph_2028 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2028, to == 1)\n\nunique_ids_2028 <- unique(c(filtered_graph_2028 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2028 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2028 <- filtered_graph_2028 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2028) %>%\n  as_tbl_graph()\n\nedges_df_2028 <- filtered_graph_2028 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2028 <- filtered_graph_2028 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2028<- nodes_df_2028 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2028 <- visNetwork(nodes_df_2028, edges_df_2028, submain = list(text = \"Network Graph of Mar del Este CJSC in 2028 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE)\nvis_2028\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Filter the year and id in edges and the corresponding id\nfiltered_graph_2029 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2029, to == 1)\n\nunique_ids_2029 <- unique(c(filtered_graph_2029 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2029 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2029 <- filtered_graph_2029 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2029) %>%\n  as_tbl_graph()\n\nedges_df_2029 <- filtered_graph_2029 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2029 <- filtered_graph_2029 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2029<- nodes_df_2029 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2029 <- visNetwork(nodes_df_2029, edges_df_2029, submain = list(text = \"Network Graph of Mar del Este CJSC in 2029 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE)\nvis_2029\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nfiltered_graph_2030 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2030, to == 1)\n\nunique_ids_2030 <- unique(c(filtered_graph_2030 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2030 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2030 <- filtered_graph_2030 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2030) %>%\n  as_tbl_graph()\n\nedges_df_2030 <- filtered_graph_2030 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2030 <- filtered_graph_2030 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2030<- nodes_df_2030 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2030 <- visNetwork(nodes_df_2030, edges_df_2030, submain = list(text = \"Network Graph ofMar del Este CJSC in 2030 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE) \nvis_2030\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nfiltered_graph_2031 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2031, to == 1)\n\nunique_ids_2031 <- unique(c(filtered_graph_2031 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2031 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2031 <- filtered_graph_2031 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2031) %>%\n  as_tbl_graph()\n\nedges_df_2031 <- filtered_graph_2031 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2031 <- filtered_graph_2031 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2031<- nodes_df_2031 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2031 <- visNetwork(nodes_df_2031, edges_df_2031, submain = list(text = \"Network Graph ofMar del Este CJSC in 2031 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE) \nvis_2031\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nfiltered_graph_2032 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2032, to == 1)\n\nunique_ids_2032 <- unique(c(filtered_graph_2032 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2032 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2032 <- filtered_graph_2032 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2032) %>%\n  as_tbl_graph()\n\nedges_df_2032 <- filtered_graph_2032 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2032 <- filtered_graph_2032 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2032<- nodes_df_2032 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2032 <- visNetwork(nodes_df_2032, edges_df_2032, submain = list(text = \"Network Graph ofMar del Este CJSC in 2032 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE) \nvis_2032\n\n\n\n\n\n\n#2033\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nfiltered_graph_2033 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2033, to == 1)\n\nunique_ids_2033 <- unique(c(filtered_graph_2033 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2033 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2033 <- filtered_graph_2033 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2033) %>%\n  as_tbl_graph()\n\nedges_df_2033 <- filtered_graph_2033 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2033 <- filtered_graph_2033 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2033<- nodes_df_2033 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2033 <- visNetwork(nodes_df_2033, edges_df_2033, submain = list(text = \"Network Graph ofMar del Este CJSC in 2033 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE) \nvis_2033\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nfiltered_graph_2034 <- mc2_graph %>%\n  activate(edges) %>%\n  filter(Year == 2034, to == 1)\n\nunique_ids_2034 <- unique(c(filtered_graph_2034 %>%\n                         activate(edges) %>%\n                         pull(from),\n                       filtered_graph_2034 %>%\n                         activate(edges) %>%\n                         pull(to)))\n\nfiltered_graph_2034 <- filtered_graph_2034 %>%\n  activate(nodes) %>%\n  filter(row_number() %in% unique_ids_2034) %>%\n  as_tbl_graph()\n\nedges_df_2034 <- filtered_graph_2034 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_df_2034 <- filtered_graph_2034 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2034<- nodes_df_2034 %>%\n  rename(group = node_type) \n\n# Plot the network graph with labeled nodes using visNetwork\nvis_2034 <- visNetwork(nodes_df_2034, edges_df_2034, submain = list(text = \"Network Graph ofMar del Este CJSC in 2034 \",\n                          style = \"font-family:Comic Sans MS;color:#000000;font-size:15px;text-align:center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(zoomView = TRUE, dragNodes = TRUE, dragView = TRUE, navigationButtons = TRUE) \nvis_2034\n\n\n\n\n\n\n\n\n\n\n4.7.1 Summary of the changes of transshipment leader over the years\nBelow is the code chunk to find if there is any missing nodes or addition of new nodes over the different time period:\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Diff 2028-2029 \n\n# Check if all nodes in nodes_df_2028 are present in nodes_df_2029\nmissing_nodes_1 <- setdiff(nodes_df_2028$id, nodes_df_2029$id)\n\n# Get the corresponding names for the missing nodes\nmissing_node_names_1 <- nodes_df_2028$label[nodes_df_2028$id %in% missing_nodes_1]\n\n# Identify any new nodes in nodes_df_2029\nnew_nodes_1 <- setdiff(nodes_df_2029$id, nodes_df_2028$id)\n\n# Get the corresponding names for the missing nodes\nnew_node_names_1 <- nodes_df_2029$label[nodes_df_2029$id %in% new_nodes_1]\n\n# # Print the missing node names with a comma after each label found\n# cat(\"Missing nodes: \", paste(missing_node_names_1, collapse = \", \"), \"\\n\")\n# # Print the new node names with a comma after each label found\n# cat(\"New nodes: \", paste(new_node_names_1, collapse = \", \"), \"\\n\")\n\n\n#Diff 2029-2030\n\n# Check if all nodes in nodes_df_2020 are present in nodes_df_2030\nmissing_nodes_2 <- setdiff(nodes_df_2029$id, nodes_df_2030$id)\n\n# Get the corresponding names for the missing nodes\nmissing_node_names_2 <- nodes_df_2029$label[nodes_df_2029$id %in% missing_nodes_2]\n\n# Identify any new nodes in nodes_df_2030\nnew_nodes_2 <- setdiff(nodes_df_2030$id, nodes_df_2029$id)\n\n# Get the corresponding names for the missing nodes\nnew_node_names_2 <- nodes_df_2030$label[nodes_df_2030$id %in% new_nodes_2]\n\n# # Print the missing node names with a comma after each label found\n# cat(\"Missing nodes: \", paste(missing_node_names_2, collapse = \", \"), \"\\n\")\n# # Print the new node names with a comma after each label found\n# cat(\"New nodes: \", paste(new_node_names_2, collapse = \", \"), \"\\n\")\n\n\n# Diff 2030-2031\n\n# Check if all nodes in nodes_df_2030 are present in nodes_df_2031\nmissing_nodes_3 <- setdiff(nodes_df_2030$id, nodes_df_2031$id)\n\n# Get the corresponding names for the missing nodes\nmissing_node_names_3 <- nodes_df_2030$label[nodes_df_2030$id %in% missing_nodes_3]\n\n# Identify any new nodes in nodes_df_2031\nnew_nodes_3 <- setdiff(nodes_df_2031$id, nodes_df_2030$id)\n\n# Get the corresponding names for the missing nodes\nnew_node_names_3 <- nodes_df_2031$label[nodes_df_2031$id %in% new_nodes_3]\n\n# # Print the missing node names with a comma after each label found\n# cat(\"Missing nodes: \", paste(missing_node_names_3, collapse = \", \"), \"\\n\")\n# # Print the new node names with a comma after each label found\n# cat(\"New nodes: \", paste(new_node_names_3, collapse = \", \"), \"\\n\")\n\n\n# Diff 2031-2032\n\n# Check if all nodes in nodes_df_2031 are present in nodes_df_2032\nmissing_nodes_4 <- setdiff(nodes_df_2031$id, nodes_df_2032$id)\n\n# Get the corresponding names for the missing nodes\nmissing_node_names_4 <- nodes_df_2031$label[nodes_df_2031$id %in% missing_nodes_4]\n\n# Identify any new nodes in nodes_df_2032\nnew_nodes_4 <- setdiff(nodes_df_2032$id, nodes_df_2031$id)\n\n# Get the corresponding names for the missing nodes\nnew_node_names_4 <- nodes_df_2032$label[nodes_df_2032$id %in% new_nodes_4]\n\n# # Print the missing node names with a comma after each label found\n# cat(\"Missing nodes: \", paste(missing_node_names_4, collapse = \", \"), \"\\n\")\n# # Print the new node names with a comma after each label found\n# cat(\"New nodes: \", paste(new_node_names_4, collapse = \", \"), \"\\n\")\n\n\n# Diff 2033-2034\n\n# Check if all nodes in nodes_df_2033 are present in nodes_df_2034\nmissing_nodes_5 <- setdiff(nodes_df_2033$id, nodes_df_2034$id)\n\n# Get the corresponding names for the missing nodes\nmissing_node_names_5 <- nodes_df_2033$label[nodes_df_2033$id %in% missing_nodes_5]\n\n# Identify any new nodes in nodes_df_2034\nnew_nodes_5 <- setdiff(nodes_df_2034$id, nodes_df_2033$id)\n\n# Get the corresponding names for the missing nodes\nnew_node_names_5 <- nodes_df_2034$label[nodes_df_2034$id %in% new_nodes_5]\n\n# # Print the missing node names with a comma after each label found\n# cat(\"Missing nodes: \", paste(missing_node_names_5, collapse = \", \"), \"\\n\")\n# # Print the new node names with a comma after each label found\n# cat(\"New nodes: \", paste(new_node_names_5, collapse = \", \"), \"\\n\")\n\n\n\n\n\n\n\n\n\nYear\nFindings\n\n\n\n\n2028 and 2029\n6 Missing nodes:\n\nCaracola Marina Lighthouse A/S Forwading\nSeashell Seekers Ltd Distribution\nZanzibar Archipelago Incorporated International\nOceanfront Oasis AS Delivery\nPlaya del Sol Incorporated, Kallianassa Fish AG Solutions\nTunaTime GmbH & Co. KG Export.\n\n\n\n2029 - 2030\n5 New nodes:\n\nRift Valley fishery OJSC Enterprises\nAqua Azul Oyster BV Freight\nsuō yú Incorporated Seagull\nbái suō wěn lú Ltd. Corporation Freight\nNorwegian Fjord Plc Transit\n\n\n\n2030 - 2031\n13 Missing nodes:\n\nBarents Sea Shrimp Plc\nHaryana Sea Marine ecology\nGambia River Ges.m.b.H. &\nMar y Viento Ltd. Liability Co Captain\nGulf of Tadjoura Corp Shipping\nBarco de Plata SE\nDutch Eel LLC Express\nIcelandic Cod GmbH & Co. KG Express\nRift Valley fishery OJSC Enterprises\nAqua Azul Oyster BV Freight\nsuō yú Incorporated Seagull\nbái suō wěn lú Ltd. Corporation Freight\nNorwegian Fjord Plc Transit\n\n\n\n2031 - 2032\n20 New nodes:\n\nIsla del Tesoro SE Transport\nCaracola del Este Incorporated\nSpanish Anchovy OJSC International\nSaltSea & Inc Carriers\nMar de la Aventura Limited Liability Company\nMar de Cristalino OJSC\njīn qiāng yú Express\nMar y Viento Abalone N.V. Marine conservation\nPlaya de Coral Distribution Marine sanctuary\nxiǎo xiā A/S Holdings\nMarine Mates Pic Delivery\nOceanKing s ship Pic Logistics\nLake Kariba GmbH & Co. KG\nMar y Viento Ltd. Liability Co Captain\nAquaBite Limited Liability Company Marine\nSurfSide GmbH & Co. KG Consulting\nCoralCrest Limited Liability Company Seabass\nBlack Sea Anchovy NV\nMar del Oeste LLC Marine\nTurkish Salmon LC Barracuda\n\n\n\n2032 - 2034\n10 Missing nodes:\n\nOb River LLC and Son’s\nPez Dorado Inc Freight\nOla de la Costa Ges.m.b.H.\nMarine Adventures Ltd Cod\nCoral Reef Oyj Solutions\nEstrella de Mar AB Delivery\nGreek ermen Kga Freight\nBlack Sea Anchovy NV\nMar del Oeste LLC Marine\nOla del Este Ltd\n\n\n\n\nAlso, we can see from the networkgraph that in 2028, Marine Mates NV Worldwide and ReefRider Foods Lte Corporation Family supplies goods to Mar del Este CSJC but disappears in 2029. And in 2032, there are 2 new suppliers, The Salty Dog Limited Liability Company and Turkish Salmon A/S Marine, however, both disappeared in 2034."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "This exercise aims to discover the demographic, financial characteristics and hidden patterns of the City of Engagement, using static and interactive statistical graphics methods. The data will be processed using appropriate tidyverse packages and visualization will be designed using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#install-and-launching-r-packages",
    "title": "Take-Home_Ex01",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\nplotly: R library for plotting interactive statistical graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\ngganimate: an ggplot extension for creating animated statistical graphs.\ngifski: converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\nknitr: Used for dynamic report generation\npatchwork: Used to combine plots\nggdist: Used for visualization distribution and uncertainty\nggthemes: Provide additional themes for ggplot2\nggrepel: A package in R used for avoiding overplotting of text labels\ngt:For creating and styling publication-quality tables in R\nrstatix: Used for statistical analysis and data visualization\nggridges: For creating ridge plots\nviridis: An R package that provides a set of color palettes for data visualization\nggiraph: For making ‘ggplot’ graphics interactive\nreshape2: Provides functions for transforming and reshaping data between “wide” and “long” formats\nscales: Provides a set of functions for formatting and labeling data for visualization\ntidyverse: A family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes,ggrepel, tidyverse,gt,rstatix,ggpmisc,ggridges,gganimate,viridis,ggiraph,reshape2,scales, performance,ggalt,ggpubr,crosstalk, ungeviz, ggdist, colorspace)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#importing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#importing-the-data",
    "title": "Take-Home_Ex01",
    "section": "3.2 Importing the Data",
    "text": "3.2 Importing the Data\n\nparticipants <- read_csv(\"data/Participants.csv\")\nfinancial <- read_csv(\"data/FinancialJournal.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#data-wrangling",
    "title": "Take-Home_Ex01",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Check for missing values in each column in the participants and financial data\n\n# Check for missing values in each column in participants data\ncolSums(is.na(participants))\n\n participantId  householdSize       haveKids            age educationLevel \n             0              0              0              0              0 \n interestGroup      joviality \n             0              0 \n\n# Check for missing values in each column\ncolSums(is.na(financial))\n\nparticipantId     timestamp      category        amount \n            0             0             0             0 \n\n\n\n\n3.3.2 Data Issues\nUsing glimpse(), we can look at the data types of the datasets.\n\nglimpse(participants)\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\", \"HighScho…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", \"D\", \"D\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\n\nglimpse(financial)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nISSUE 1: WRONG DATA FORMAT\nparticipantId is in <dbl> format. It needs to be converted to <chr>.\n\nparticipants$participantId <- as.character(participants$participantId)\n#str(participants)--> to check if data type has been changed\n\nfinancial$participantId <- as.character(financial$participantId)\n#str(financial) --> to check if data type has been changed\n\nISSUE 2: CHANGE TIMESTAMP TO MONTH_YEAR FORMAT\nExtract the month and year using lubridate.\n\nfinancial$month_year <- floor_date(as.POSIXct(financial$timestamp), unit = \"month\")\nfinancial$month_year <- format(financial$month_year, format = \"%m/%Y\")\n\n# Convert month_year to date format\nfinancial$month_year <- as.Date(paste0(\"01/\", financial$month_year), format = \"%d/%m/%Y\")\n\n#head(financial) --> check if new col month_year is created \n\nISSUE 3: DUPLICATES FOUND IN DATA\nCheck for duplicates in both dataset using the following code chunk,\n\n#Check for duplicates in financial table\nsum(duplicated(financial))\n\n[1] 1113\n\n#Check for duplicates in participants table\nsum(duplicated(participants))\n\n[1] 0\n\n#Remove duplicates in financial table\nfinancial_unique <- distinct(financial)\nnrow(financial_unique)\n\n[1] 1512523\n\n\nISSUE 4: DATA IS SEGREGATED BY INDIVDUAL ENTRIES\nGroup the entries by participants taking into consideration month_year and category and summing up the amount.\n\n# Group by participant_id and month_year, subgroup by category, then summarize by amount\nnew_financial <- financial_unique %>%\n  group_by(participantId, month_year, category) %>%\n  summarise(total_amount = sum(amount)) %>%\n  mutate(total_amount = round(total_amount, 2))\n\n# Pivot the table so that the categories appear as columns\nnew_financial_wide <- new_financial %>% \n  pivot_wider(names_from = category, values_from = total_amount)\n\nNext, check if columns have missing value, if yes, replace the missing values with 0\n\n# Check if any columns has missing value \ncolSums(is.na(new_financial_wide))\n\n participantId     month_year      Education           Food     Recreation \n             0              0           7673              0           1199 \n       Shelter           Wage RentAdjustment \n           131              0          10619 \n\n# replace missing values with 0\nnew_financial_wide <- new_financial_wide %>% \n  mutate_all(~replace_na(., 0))\n\nISSUE 5: DATA DOES NOT SHOW FINANCIAL HEALTH AND COST OF LIVING\nFinancial Health = Sum (Wage + Education + Shelter + Recreation + Food + RentAdjustment)\n\nnew_financial_wide$Financial_health <- rowSums(new_financial_wide[, c(\"Wage\", \"Education\",\"Shelter\",\"Recreation\",\"Food\",\"RentAdjustment\" )], na.rm = TRUE)\n\nCost_of_living = Sum(Education + Shelter + Recreation + Food)\n\nnew_financial_wide$Cost_of_living <- rowSums(new_financial_wide[,c(\"Education\",\"Shelter\",\"Recreation\",\"Food\")], na.rm = TRUE)\nnew_financial_wide$Cost_of_living <- new_financial_wide$Cost_of_living * -1\n\nISSUE 6: AGE DATA ARE NOT AGGREGATED\nBin age data by groups of 10.\n\nparticipants <- participants %>%\n  mutate(age_bin = cut(age, \n                       breaks = c(seq(max(age), min(age) - 10, -10), min(age)), \n                       right = FALSE, \n                       include.lowest = TRUE, \n                       labels = NULL))\n\n# Replace the numeric bin labels with age ranges\nparticipants$age_bin <- sub(\"(\\\\d+)-(\\\\d+)\", \"\\\\1-\\\\2\", as.character(participants$age_bin))\nparticipants$age_bin[participants$age_bin == paste0(max(participants$age_bin), \"-\")] <- paste0(\"<= \", max(as.numeric(levels(participants$age_bin)))-1)\n\n# Display the first 10 rows of the new data frame with age_bin column\n#head(participants, 10)\n\nISSUE 7: PARTICIPANTS DATA AND FINANCIAL DATA ARE SEPARATED\nCombine the two tables together by participantId\n\ncombined_table <- merge(participants, new_financial_wide, by = \"participantId\")\nDT::datatable(combined_table, class= \"compact\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#demographic-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#demographic-analysis",
    "title": "Take-Home_Ex01",
    "section": "4.1 Demographic Analysis",
    "text": "4.1 Demographic Analysis\n\n4.1.1 Distribution of Income and Age\n\nDistribution of Income\nWe will first take a look at the Income Distribution using histogram and boxplot.\nBased on the boxplot plotted, we can observe that the minimum income is $1600, which means that all the participants are considering under the working population and we can analyse them as a whole.\nFurthermore, we can observe from the shape of the wage distribution that there is income inequality in the city. It has a right-skewed distribution, i.e. mean wage > median wage, where there is very few high earners at the top and majority falls under the middle and bottom.\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot\nwage_mean <- round(mean(combined_table$Wage))\nwage_median <- round(median(combined_table$Wage))\nymax <- as.numeric(round((IQR(combined_table$Wage)*1.5) +\n                quantile(combined_table$Wage,0.75)))\nymin <- as.integer(min(combined_table$Wage))\n\n#plotting histogram\nh_wage <- ggplot(data = combined_table, aes(x = Wage)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,25000), labels = scales::comma) +\n  labs(x = \"Wage\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = wage_mean), col=\"darkblue\", linewidth=0.75) +\n  annotate(\"text\", x=5900, y=1700, label=\"Mean wage:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5600, y=1550, label=format(wage_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = wage_median), col=\"lightpink4\", linewidth=0.75) +\n  annotate(\"text\", x=1900, y=1700, label=\"Median wage\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=1900, y=1600, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb_wage <- ggplot(data = combined_table, aes(y = Wage)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=0.6, notch=FALSE, width = 0.25) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,25000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.25) + \n  annotate(\"text\", x=0.20, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.20, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=5000, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=2500, label=\"Median wage =\",\n           size=3, color=\"lightpink4\")\n\n# combine the 2 plots \n\nwage_distri <- b_wage / h_wage + plot_layout(heights = c(1, 2)) \n\nwage_distri + plot_annotation(title = \"Distribution of Wage\", \n                               subtitle = str_wrap(\"There is a right-skewed distribution i.e. mean wage > median wage. There is also a large number of outliers (wage >$9,110).\", width =60),\n                               theme = theme(\n                                 plot.title = element_text(size = 18),\n                                 plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nTo confirm that the wage distribution is indeed not normally distributed, we will perform the normality assumption test. But before performing the normality assumption test, we will first create the meanwage_table as shown in the code chunk below,\n\n# Create mean wage table \nmeanwage_table <- combined_table %>%\n  group_by(participantId) %>%\n  summarize(mean_wage = mean(Wage))\n#head(meanwage_table)\n\nNext, we will use the Q-Q Plot to visualize if normal distribution exist.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nqq <- ggplot(meanwage_table,\n       aes(sample=mean_wage))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Income\")\n\nsw_t <- meanwage_table %>%\n  shapiro_test(mean_wage) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\nqq + table_png\n\n\n\n\n\nLooking at Normal Quartile Plot (Q-Q plot), we can see that the points deviate significantly from the straight diagonal line. The results of the Shaprio-test above also suggest that there is sufficient statistical evidence to reject the null hypothesis at 95% confidence. Thus, the set of data is indeed not normally distributed, showing that the city has income inequality.\n\n\nDistribution of Age\nSimilarly, we will use histogram and boxplot to show the age distribution.\nThe boxplot below shows that the minimum age is 18 and the maximum age is 60, which is most likely the retirement age. The histogram shows that the age is normally distributed,where the mean age equals the median age of 39. Thus, it appears that the city of engagement does not need to worry about aging population, which in turn meant that they do not need to invest in improving birth rate.\nHowever, based on the pie chart, we can see that though the starting age is 18, only 5% of the working population is below the age of 21. This is probably because most are still studying at that age and are not actively working.\n\n\nShow the code\nage_count <- combined_table %>%\n  group_by(age_bin) %>%\n  summarize(\n    count = n_distinct(participantId)) %>% \n  mutate(prop_count = as.numeric(count) / n_distinct(as.numeric(combined_table$participantId)),\n         age_pie_pct = round(prop_count * 100)) %>% \n  mutate(ypos_p = rev(cumsum(rev(age_pie_pct))),\n         pos_p = age_pie_pct/2 + lead(ypos_p, 1, default = 0),\n         pos_p = if_else(is.na(pos_p), age_pie_pct/2, pos_p))\n\npie_age <- ggplot(age_count, aes(x = \"\" , y = age_pie_pct, fill = fct_inorder(age_bin))) +\n  geom_col(width = 1, color = 1) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  geom_label_repel(data = age_count,\n                   aes(y = pos_p, label = paste0(age_pie_pct, \"%\")),\n                   size = 4.5, nudge_x = 1, color = c(1, 1, 1, 1, 1), show.legend = FALSE) +\n  guides(fill = guide_legend(title = \"Age Bin\")) +\n  labs(title = \"Proportion of participants in each Age Bin\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(face = \"bold\")) +\n  theme_minimal() \n\n\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot for AGE\nage_mean <- round(mean(combined_table$age))\nage_median <- round(median(combined_table$age))\nymax <- max(combined_table$age)\nymin <- as.integer(min(combined_table$age))\n\n#plotting histogram for AGE\nh_age <- ggplot(data = combined_table, aes(x = age)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 4) + \n  scale_x_continuous(limits = c(0,70), labels = scales::comma) +\n  labs(x = \"Age\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = age_mean), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=48, y=1700, label=\"Mean age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=48, y=1600, label=format(age_mean, big.mark = \",\"),\n           size=3, color=\"black\") +\n  geom_vline(aes(xintercept = age_median), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=30, y=1750, label=\"Median age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=30, y=1650, label=format(age_median, big.mark = \",\"),\n           size=3, color=\"black\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot for AGE\nb_age <- ggplot(data = combined_table, aes(y = age)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE, width =0.2) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,70), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.2) + \n  annotate(\"text\", x=0.15, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.15, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") \n  #annotate(\"text\", x=-0.25, y=50, label=format(age_median, big.mark = \",\"),\n           #size=3, color=\"lightpink4\") \n  #annotate(\"text\", x=-0.25, y=25, label=\"Median age =\",\n           #size=3, color=\"lightpink4\")\n\nage_distri <- b_age / h_age + plot_layout(heights = c(1, 2)) \n\n# age_distri + plot_annotation(title = \"Distribution of Age\", \n#                                subtitle = \"There is a normal distribution i.e. mean age = median age\",\n#                                theme = theme(\n#                                  plot.title = element_text(size = 18),\n#                                  plot.subtitle = element_text(size = 12)))\n\n\n\n\nShow the code\n#combine the age_distri plot dervied earlier with the pie_age plot\nage_distri_pie <- (age_distri | pie_age) + plot_layout(widths = c(3,3))\n\nage_distri_pie + plot_annotation(title = \"Distribution of Age\", \n                               theme = theme(\n                                 plot.title = element_text(size = 16)))\n\n\n\n\n\n\n\n\n4.1.2 Income by Age\nLet’s find out if income is affected by age.\nTo compare the income level across ages, we will test the following null hypothesis:\nH0: the mean wage across different age groups are the same\nH1: the mean wage across different age groups are different\nTo start the confirmatory data analysis, we first perform the normality assumption test for the distribution of income and age. Normality assumption test for income has been performed previously.\nPlot the qqplot for income and age.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create age table \nunique_participants <- unique(subset(combined_table, select = c(\"participantId\", \"age\")))\nhead(unique_participants)\n\n\n   participantId age\n1              0  36\n13             1  25\n25            10  48\n37           100  29\n49          1000  56\n61          1001  49\n\n\nShow the code\nqq_age <- ggplot(unique_participants,\n       aes(sample=age))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Age\")\n\nsw_t_age <- unique_participants %>%\n  shapiro_test(age) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp_age <- tempfile(fileext = '.png')\ngtsave(sw_t_age, tmp_age)\ntable_png_age <- png::readPNG(tmp_age,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\n(qq_age + table_png_age) / (qq + table_png)\n\n\n\n\n\nBased on the Shapiro test, both the p-value are < alpha value of 0.05, thus there is sufficient statistical evidence to conclude that the distribution of income and age are not normally distributed. Thus we will perform the non-parametric test, Oneway ANOVA Test.\n\n\nShow the code\nggbetweenstats(\n  data = combined_table,\n  x = age_bin, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"ns\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  ylim = c(0, 25000)\n) +\nggtitle(\"Oneway ANNOVA - Income across different age\")\n\n\n\n\n\nThe Kruskal-Wallis Test p-value is lower than the alpha values, thus there is sufficient statistical evidence to reject the null hypothesis and infer that the mean income across age is not the same.\nWe can observe that there are few pairs of age_bin with p-value > 0.05 such as [40,50) and [50,60]. This suggests that the differences between the medians of the pair are not statistically significant.\nWe can also observe that there is a higher wage median for those age 30-40. After the age of 40, it seems that the increase in age is not consistent with the increase in wage. The 2 highest wage level are from the opposite ends of the age spectrum. Though these are outliers, it suggests that age is not the limiting factor for high wage tier. It does not necessary mean that an individual has to be older to earn a higher income.\n\n\n4.1.3 Financial Health Observation\n\nCumulative Financial Health\nCreate a table to plot the cumulative financial health to see if there are cumulative savings in the city.\n\n# Create a data frame\ndf_totalfh <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(total_fh = sum(Financial_health))\n\n#head(df_totalfh)\n\n\n\nShow the code\n# calculate cumulative financial health\ndf_totalfh <- df_totalfh %>% \n  mutate(cumulative_fh = cumsum(total_fh))\n\nhead(df_totalfh)\n\n\n# A tibble: 6 × 3\n  month_year total_fh cumulative_fh\n  <date>        <dbl>         <dbl>\n1 2022-03-01 4832812.      4832812.\n2 2022-04-01 2204851.      7037663.\n3 2022-05-01 2403220.      9440883.\n4 2022-06-01 2421291.     11862173.\n5 2022-07-01 2272492.     14134666.\n6 2022-08-01 2574129.     16708794.\n\n\nShow the code\n# Calculate y-axis breaks and labels\ny_breaks <- pretty_breaks(n = 3)(range(df_totalfh$cumulative_fh))\ny_labels <- dollar_format(prefix = \"$\")(y_breaks)\n\n# plot graph\nggplot(data = df_totalfh, aes(x = month_year, y = cumulative_fh)) +\n  geom_line() +\n  labs(x = \"Month/Year\", y = \"Cumulative Financial Health\", title = \"Cumulative Financial Health Over Time\") +\n  stat_summary(geom = \"line\", fun = \"cumsum\", linetype = \"dashed\") +\n  scale_y_continuous(breaks = y_breaks, labels = y_labels) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  theme(plot.title = element_text(face = \"bold\"),\n        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"))\n\n\n\n\n\nFrom the figure above, we can see that the city has cumulative savings across the months.\nDiving deeper into the financial health of the participants, we will plot the boxplot of the Financial Health vs Mean Financial Health. Based on the plot below, we can see that the mean of the financial health is at the highest in March 2022 at around $4800 and decreased significantly in April 2022. Between April 2022 to Feb 2023, financial health was maintained between $2,500 to $3,000.\n\n\nShow the code\np_fh <- ggplot(data = combined_table, aes(x = month_year, y = Financial_health, \n                                      tooltip = month_year)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", size = 1) +\n  geom_line(stat = \"summary\", fun.y = \"mean\", colour = \"red\", size = 0.5) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Dark2\") +\n  labs(title = \"Financial Health Over Time\",\n       y = \"Financial Health\",\n       x = \"Month/Year\") +\n  theme(plot.title = element_text(hjust = 0.2, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        axis.text = element_text(size = 8, face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%Y\")\n\nggplotly(p_fh, tooltip = c(\"x\", \"y\", \"tooltip\"))\n\n\n\n\n\n\nTo find out if financial health is affected by wage or cost of living, we use the correlogram to see the correlation between financial health and wage, cost of living and the various expense category. Based on the correlation table and the significant test of correlation, we can see that financial health and wage has a strong positive correlation of 0.98 , while cost of living has low negative correlation of -0.14.\nBased on the correlogram below, we can also observe that Recreation and Shelter have a high correlation with Cost of living.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c( \"Wage\", \"Financial_health\", \"Cost_of_living\", \"Food\", \"Shelter\", \"Recreation\", \"Education\", \"RentAdjustment\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Financial Health Correlation Table\")\n\n\n\n\n\n\nWage CorrelationCost of Living Correlation\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Wage,\n  y = Financial_health,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Cost_of_living,\n  y = Financial_health,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\nTo further explore each expense category over time, we will plot the different expense category over time.\n\n\nShow the code\n# group the expenses by month year\nexpenses_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(total_recreation = mean(Recreation),\n            total_food = mean(Food),\n            total_shelter = mean(Shelter),\n            total_education = mean(Education))\n\n# plot the data using ggplot2\np_expense <- ggplot(expenses_grouped, aes(x = month_year)) + \n  geom_line(aes(y = total_recreation, color = \"Recreation\")) +\n  geom_line(aes(y = total_food, color = \"Food\")) +\n  geom_line(aes(y = total_shelter, color = \"Shelter\")) +\n  geom_line(aes(y = total_education, color = \"Education\")) +\n  labs(x = \"Month/Year\", y = \"Mean Expenses($)\") +\n  scale_y_continuous(limits = c(-1000, 0), \n                      breaks = seq(-1000, 0, 2*100),\n                      labels = dollar_format(prefix = \"$\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses Over time\") +\n  scale_color_manual(values = c(\"Recreation\" = \"red\", \n                                \"Food\" = \"blue\", \n                                \"Shelter\" = \"green\", \n                                \"Education\" = \"purple\")) +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5)) \n\n\nAlso, we shall plot the wage over time to compare it with the expenses over time plot.\n\n\nShow the code\n# group the wage by month year\nwage_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(mean_wage_bymonth = mean(Wage))\n\n# plot the data using ggplot2\np_meanwage <- ggplot(wage_grouped, aes(x = month_year)) + \n  geom_line(aes(y = mean_wage_bymonth)) +\n  labs(x = \"Month/Year\", y = \"Mean Wage($)\") +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses by Month/Year\") +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5))\n\n\nFor easier comparison, we shall combine the 2 plots together for better visualization.\n\nexpenses_wage <- p_expense + p_meanwage + plot_layout(heights = c(80, 50)) \nexpenses_wage\n\n\n\n\nLooking at the expenses over time plot above, it showed that education, food and shelter remained stable over time, which meant these costs are most likely fixed despite any wage fluctuations. Recreation expenses, on the hand, is high in March and decreases significantly from March 2022 to April 2022 and plateaus to a stable rate thereafter.\nLooking at the wage over time plot, we can see that in March, the mean income is at its peak in March 2022 and dips significantly in April 2022. April 2022 onward, the income remains relatively stable and starts to increase slightly in August 2022, but in Jan 2023 it start to decrease further. The fluctuations in the financial health and income is directly proportionate. And we can also see that, recreation expenses increases when there is an increase in income but remain low when income is low.\nSince this is an agricultural city, participants’ pay could be likely to be affected by the seasons and harvest.\n\n\nWage vs Cost of Living overtime\nLooking at the wage vs cost of living, we can see that on average, most citizens can cope with their cost of living as their mean wage (blue bars) is higher than the mean cost of living (red bars). Most citizens should still have savings monthly.\n\n# Creating a table with Wage and Cost of Living by month_year\n\n# Group the data by month and find the corresponding means\ndf_monthly <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(mean_income = mean(Wage),\n            mean_cost_of_living = mean(Cost_of_living))\n# Melt the data frame to create a long format\ndf_monthly_melt <- melt(df_monthly, id.vars = \"month_year\", variable.name = \"variable\", value.name = \"value\")\n\n\n\nShow the code\n# Plot using ggplot2\nggplot(df_monthly_melt, aes(x = month_year, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 25), alpha = 0.7) +\n  scale_fill_manual(name = \"Legend\", values = c(\"mean_income\" = \"blue\", \"mean_cost_of_living\" = \"red\")) +\n  labs(x = \"Month\", y = \"Mean\", title = \"Monthly Mean Income and Cost of Living\") +\n  scale_x_date(guide = guide_axis(angle = 45)) +\n  theme(axis.text.x = element_text(hjust = 0.4, vjust = 0.5, size = 5)) \n\n\n\n\n\n\n\n\n4.1.4 Observation on Education Level\n\nEducation affects financial health and birth rate\nTo see if education affects financial health and birth rate, we will create the boxplot as shown below.\n\n\nShow the code\n# Create a factor with the education levels in the desired order\nedu_levels <- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\ncombined_table$educationLevel <- factor(combined_table$educationLevel, levels = edu_levels)\n\n# Create a box plot with separate panels for individuals with and without kids\np_fh_kids <- ggplot(combined_table, aes(x = educationLevel, y = Financial_health, fill = haveKids)) +\n  geom_boxplot() +\n  stat_summary(aes(group = haveKids, color = haveKids), fun = mean, geom = \"line\", size = 0.5) + # add mean lines\n  stat_boxplot(geom='errorbar', width=0.1, coef=1.5, size=0.5) + # add error bars\n  scale_fill_manual(name = \"haveKids\", values = c(\"FALSE\" = \"grey\", \"TRUE\" = \"orange\")) +\n  labs(title = \"Boxplot of Financial Health and Education by Kids\", x = \"Education\", y = \"Financial Health\") +\n  facet_wrap(~haveKids, ncol = 2) +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Display the plot\nggplotly(p_fh_kids)\n\n\n\n\n\n\nWe observe here that education is positively correlated to wage and financial health of the citizens. The higher the education level, the higher the financial health. Also, we can see that citizen with kids tend to have better financial health overall. Thus, showing that good education is necessary for higher wage.\nTo further confirm that wage is affected by education level, we will test the following null hypothesis:\nH0: the mean wage across different education levels are the same\nH1: the mean wage across different education levels are different\nAs based on previous normality assumption test done for wage, we know that wage is not normally distributed. Thus, to test the null hypothesis, we will perform the non-parametric test, Oneway ANOVA Test.\n\n\nShow the code\nggbetweenstats(\n  data = combined_table,\n  x = educationLevel, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"ns\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  ylim = c(0, 25000),\n  breaks = seq(0, 25000, 5000)\n) +\nggtitle(\"Oneway ANNOVA - Income across different educationLevel\")\n\n\n\n\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can thus conclude that education indeed does affect one’s wage and overall the median wage is higher for higher education level, which is consistent with our findings earlier."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#observation-on-joviality",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#observation-on-joviality",
    "title": "Take-Home_Ex01",
    "section": "4.2 Observation on Joviality",
    "text": "4.2 Observation on Joviality\nTo find out the factors that could possibly affect joviality, we plot the below correlogram. However, looking at the plot below, we can see that none of the factors have correlation more than 0.5. Joviality has a negative correlation relationship with wage, expense, and savings.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c(\"joviality\", \"Wage\", \"Financial_health\", \"Cost_of_living\", \"age\", \"householdSize\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Joviality Correlation Table\")\n\n\n\n\n\n\n4.2.1 Joviality is affected by Financial health\nEven though correlation between joviality is weak (-0.35), we can observe the smooth red curve is relatively different across different income levels. It appears joviality has a strong correlation for lower income levels as compaeed to the rich. when broken down in health levels, it appears that joviality has the lowest correlation for middle income, the R2= 0.006.\nHowever, we also observed that there are poor people who have the highest joviality of 0.90 whereas for the income earners (in red), all of them have a joviality score below 0.64. Thus, we can conclude that being rich does not necessarily make citizens happy.\n\n\nShow the code\n# Create the plot\np_j <- ggplot(combined_table, aes(x = Financial_health, y = joviality, color = Wage)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"loess\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) + # Set Y-axis limits to 0-1\n  scale_color_gradient(low = \"blue\", high = \"red\") # Set color scale from blue to red\n\nggplotly(p_j)\n\n\n\n\n\n\n\n\nShow the code\nlibrary(ggpmisc)\n# Compute the 25th and 75th percentiles of Financial_health\nq <- quantile(combined_table$Financial_health, probs = c(0.25, 0.75))\n\n# Create a new column \"income_level\" based on Financial_health percentiles\ncombined_table$income_level <- ifelse(combined_table$Financial_health < q[1], \"Low\",\n                                      ifelse(combined_table$Financial_health > q[2], \"High\", \"Middle\"))\n\n# Specify the order of the income levels\ncombined_table$income_level <- factor(combined_table$income_level,\n                                      levels = c(\"Low\", \"Middle\", \"High\"))\n\n# Create the plot with facets and regression line equation\nggplot(combined_table, aes(x = Financial_health, y = joviality)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"lm\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) + # Set Y-axis limits to 0-1\n  facet_wrap(~ income_level) + # Create facets by income level\n  stat_poly_eq(formula = y ~ x, aes(label = paste(\"R^2 = \", round(..r.squared.., 3))),\n               parse = TRUE, label.x = \"right\", label.y = 0.9, \n               eq.with.lhs = FALSE, size = 3) + # Show R-squared only, adjust label position and decrease font size\n  theme(plot.margin = unit(c(1, 1, 1, 5), \"lines\")) # Adjust right margin to make room for equation\n\n\n\n\n\n\n\n4.2.2 Joviality is affected by Cost of Living\nTo test the significance of correlation between joviality and cost of living, the following code chunk is used, and we notice that the slight positive correlation for 0.45.\n\n\nShow the code\nggscatterstats(\n  data = combined_table,\n  x = Cost_of_living,\n  y = joviality,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\nJoviality vs expense_category\nWe can see that food expenses has the highest correlation at 0.49. Thus, the city planners and managers can consider allocating a portion of the grant to food expenses.\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c(\"joviality\", \"Food\", \"Education\", \"Shelter\", \"Recreation\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Joviality Correlation Table\")\n\n\n\n\n\n\n\nShow the code\n# Select only the columns of interest from combined_table\ndata_reg <- select(combined_table, Shelter, Food, Education, Recreation, joviality)\n\ndata_reg <- data_reg %>%\n  mutate_at(vars(Shelter, Food, Education, Recreation), abs)\n\n# Melt data into long format\ndata_reg <- reshape2::melt(data_reg, id.vars = \"joviality\")\n\n#Create plot with multiple regression lines\n\nggplot(data_reg, aes(x = value, y = joviality, color = variable)) +\n  geom_point(size = 0.25) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, aes(group = variable)) +\n  xlab(\"Expenses_type\") +\n  ylab(\"Joviality\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#observation-on-interest-groups",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#observation-on-interest-groups",
    "title": "Take-Home_Ex01",
    "section": "4.3 Observation on Interest Groups",
    "text": "4.3 Observation on Interest Groups\nWe can plot the histogram below to observe the distribution of the different interest interest group. As seen from below, there is roughly the same proportion of participants in each group.\n\n\nShow the code\ncombined_table_grp <- combined_table %>% \n  group_by(participantId) %>%\n  summarise(interestGroup = first(interestGroup), age_bin = first(age_bin)) # assuming interestGroup and age_bin are constant for each participantID\n\nggplot(data = combined_table_grp, aes(x = interestGroup)) + \n  stat_count(color=\"black\", fill=\"azure4\") + \n  labs(x = \"Interest Groups\", y = \"Number of participants\") +\n  ggtitle(\"Distribution of interest groups\") +\n  geom_text(stat = \"count\", aes(label=..count..), vjust=-0.5) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nFurthermore, we can use the heatmap to have overall glimpse of the interest groups by age_bin to see if it affects the type of interest participants are in.\nFrom the heatmap below, we can see that there is a high proportion of age_bin [30,40) that are in Interest Group H.\n\n\nShow the code\n#Group the data by interest group and age bin, and count the number of participants\n\ndf_heatmap <- combined_table_grp %>% \n  group_by(interestGroup, age_bin) %>% \n  summarize(n = n()) %>% \n  ungroup()\n\n# Create a heatmap\nggplot(data = df_heatmap, aes(x = interestGroup, y = age_bin, fill = n)) +\n  geom_tile() +\n  scale_fill_gradientn(colors = c(\"lightblue\", \"red\"), na.value = \"white\") +\n  labs(x = \"Interest Group\", y = \"Age Bin\", fill = \"Number of Participants\") +\n  ggtitle(\"Heatmap of Participants by Interest Group and Age\") +\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#visualizing-uncertainty",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.knit.html#visualizing-uncertainty",
    "title": "Take-Home_Ex01",
    "section": "4.4 Visualizing uncertainty",
    "text": "4.4 Visualizing uncertainty\n\n4.4.1 Visualizing uncertainty of point estimates\nIt can be tempting to interpret point estimates like median as the true precise representation of the true data value. However, it should be noted that there are uncertainties surrounding these point estimates. Thus we want to show the target quantile confidence levels (95% or 99%) that the true (unknown) estimate would like within the interval, given evidence provided by observed data.\nAs can been seen from the age_bin plot below, some age_bin have higher uncertainties such as age_bin [20,30) and [50,60]. This could be due to the presence of large no of outliers, and probably at the stage of the deciding their career path. On the other hand, age_bin such as [18,20) has less uncertainties,which may indicate lower presence of outliers.\nLikewise, for the educationLevel plot below, low level education has less uncertainties, while the higher educationLevel, the higher the uncertainties get.\n\nAge_bineducationLevel\n\n\n\n\nShow the code\n#Base ggplot\nggplot(data = combined_table,\n  aes(x = age_bin,\n      y = Wage)) +\n\n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals\n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n\n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of wage by age_bin',\n  subtitle = 'Quantiles intervals (95% and 99%) of wage by age_bin',\n  x = \"age_bin\",\n  y = \"Wage\") +\n\n  theme_hc() +\n\n  theme(plot.title = element_text(face = \"bold\", size = 18),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(angle = 30, hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = combined_table,\n  aes(x = educationLevel,\n      y = Wage)) +\n\n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals\n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n\n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of wage by educationLevel',\n  subtitle = 'Quantiles intervals (95% and 99%) of wage by educationLevel',\n  x = \"educationLevel\",\n  y = \"Wage\") +\n\n  theme_hc() +\n\n  theme(plot.title = element_text(face = \"bold\", size = 18),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(angle = 30, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n4.4.2 Visualizing Uncertainty with Hypothetical Outcome Plots (HOPs)\nHPOs can help to illustrate the uncertainty and variability of the data and model predictions, and highlight the potential impact of different variables or factors on the outcomes of interest.\n\nAge_bineducationLevel\n\n\n\n\nShow the code\nlibrary(ungeviz)\n\nggplot(data = combined_table,\n        (aes(x = factor(age_bin), y = Wage))) +\n   geom_point(position = position_jitter(\n     width = 0.05, height = 0.3),\n     size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n   geom_hpline(data = sampler(25, group = age_bin), height = 0.6, color = \"#D55E00\") +\n   theme_bw() +\n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = combined_table,\n        aes(x = factor(educationLevel), y = Wage)) +\n   geom_point(position = position_jitter(\n     width = 0.05, height = 0.3),\n     size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n   geom_hpline(data = sampler(25, group = educationLevel), height = 0.6, color = \"#D55E00\") +\n   theme_bw() +\n   transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-edges",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-edges",
    "title": "Take Home_Ex03",
    "section": "3.3 Extracting edges",
    "text": "3.3 Extracting edges\nThe code chunk below will be used to extract the links data.frame of mc3_data and save it as a tibble data.frame called mc3_edges.\n\nmc3_edges <- as_tibble(mc3_data$links) %>% \n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  ungroup()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-nodes",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-nodes",
    "title": "Take Home_Ex03",
    "section": "3.4 Extracting nodes",
    "text": "3.4 Extracting nodes\nThe code chunk below will be used to extract the nodes data.frame of mc3_data and save it as a tibble data.frame called mc3_nodes.\n\nmc3_nodes <- as_tibble(mc3_data$nodes) %>%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %>%\n  select(id, country, type, revenue_omu, product_services) #select() used to organise the sequence of col"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#initial-data-exploration",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#initial-data-exploration",
    "title": "Take Home_Ex03",
    "section": "3.4 Initial Data Exploration",
    "text": "3.4 Initial Data Exploration\n\n3.4.1 Exploring the edges data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_edges tibble data frame.\n\nskim(mc3_edges)\n\n\nData summary\n\n\nName\nmc3_edges\n\n\nNumber of rows\n24036\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n6\n700\n0\n12856\n0\n\n\ntarget\n0\n1\n6\n28\n0\n21265\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\nThe report above reveals that there is no missing values in all fields.\nIn the code chunk below, datatable() of DT package is used to display mc3_edges tibble data frame as an interactive table on the html document.\n\nDT::datatable(mc3_edges)\n\n\n\n\n\n\nNow, we will plot the distribution of the type of relationship that exist between the source and target and their corresponding frequency.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nhist_type <- ggplot(data = mc3_edges,\n       aes(x = type)) +\n  geom_bar() +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.1) +\n  labs(title = \"Distribution of Relationship Types\", x = \"Type\", y = \"Count\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\n# hist_type\n\n\nThere are two types of relationship; Beneficial Owner and Company Contacts, with a total of 16,792 count for the former and 7244 for the latter.\nNext, we will explore further the number of companies that a owner usually owns. If we observe that the owner owns more companies compared to the norm, these owners may be flagged as suspicious and we could further focus our investigation on them.\nTo begin, we will first filter out those type == “Beneficial Owner” and the code chunk are as shown below,\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nmc3_edges_owner <- mc3_edges %>%\n  filter(type == \"Beneficial Owner\") %>% \n  group_by(target, type) %>%\n    summarise(no_of_companies = n()) %>%\n  ungroup()\nmc3_edges_owner\n\n\n# A tibble: 15,305 × 3\n   target        type             no_of_companies\n   <chr>         <chr>                      <int>\n 1 Aaron Adams   Beneficial Owner               1\n 2 Aaron Adkins  Beneficial Owner               1\n 3 Aaron Allen   Beneficial Owner               1\n 4 Aaron Alvarez Beneficial Owner               1\n 5 Aaron Baker   Beneficial Owner               1\n 6 Aaron Beasley Beneficial Owner               1\n 7 Aaron Berry   Beneficial Owner               1\n 8 Aaron Black   Beneficial Owner               1\n 9 Aaron Boyle   Beneficial Owner               1\n10 Aaron Carroll Beneficial Owner               1\n# ℹ 15,295 more rows\n\n\nWe can also plot out the distribution of companies beneficial owners own using ggplot.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a ggplot histogram\ngg_hist_own <- ggplot(mc3_edges_owner, aes(x = no_of_companies)) +\n  geom_histogram() +\n  labs(title = \"No of companies beneficial owners own\", x = \"No of companies\", y = \"Count\") +\n  theme(plot.title = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = seq(min(mc3_edges_owner$no_of_companies), max(mc3_edges_owner$no_of_companies), by = 1))\n\n# Calculate frequency counts for each bin\nfreq_counts <- table(mc3_edges_owner$no_of_companies)\n\n# Create a data frame for labels\nlabel_data <- data.frame(x = as.numeric(names(freq_counts)), y = as.numeric(freq_counts))\n\n# Add frequency labels to the plot\ngg_hist_own <- gg_hist_own +\n  geom_text(\n    data = label_data,\n    aes(x = x, y = y, label = y),\n    vjust = -0.5,\n    size = 3\n  )\n\n# Display the ggplot histogram\n# gg_hist_own\n\n\nWe can combine the plot of the distribution of the type of relationship and the distribution of companies beneficial owners own using patchwork.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\ncombined_plot <- hist_type / gg_hist_own\ncombined_plot\n\n\n\n\n\nAs we can see above, there are a small percentage (<0.5%) of beneficial owners that own more than 3 companies. These owners will be flagged as suspicious, and we will perform further investigations on them.\nNext, I will create a new dataframe for edge called mc3_edges_with_no_of_companies which has the no_of_companies column added in.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Join the no_of_companies column from mc3_edges_owner into mc3_edges\nmc3_edges_with_no_of_companies <- mc3_edges %>%\n  left_join(mc3_edges_owner %>% select(target, no_of_companies),\n            by = c(\"target\" = \"target\")) %>%\n  mutate(no_of_companies = ifelse(is.na(no_of_companies), 0, no_of_companies))\n\n\n# View the updated mc3_edges\nmc3_edges_with_no_of_companies\n\n\n# A tibble: 24,036 × 5\n   source                      target             type   weights no_of_companies\n   <chr>                       <chr>              <chr>    <int>           <dbl>\n 1 1 AS Marine sanctuary       Christina Taylor   Compa…       1               1\n 2 1 AS Marine sanctuary       Debbie Sanders     Benef…       1               1\n 3 1 Ltd. Liability Co Cargo   Angela Smith       Benef…       1               1\n 4 1 S.A. de C.V.              Catherine Cox      Compa…       1               0\n 5 1 and Sagl Forwading        Angela Mendoza     Compa…       1               0\n 6 1 and Sagl Forwading        Christopher Watson Benef…       1               1\n 7 2 Limited Liability Company Amanda Mcdonald    Benef…       1               1\n 8 2 Limited Liability Company Megan Padilla      Compa…       1               0\n 9 2 Limited Liability Company Monica Martinez    Compa…       1               0\n10 2 Limited Liability Company Teresa Collins     Benef…       1               1\n# ℹ 24,026 more rows\n\n\n\n\n3.4.3 Exploring the nodes data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_nodes tibble data frame.\n\nskim(mc3_nodes)\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n27622\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3244\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n21515\n0.22\n1822155\n18184433\n3652.23\n7676.36\n16210.68\n48327.66\n310612303\n▇▁▁▁▁\n\n\n\n\n\nIn the code chunk below, datatable() of DT package is used to display mc3_nodes tibble data frame as an interactive table on the html document.\n\nDT::datatable(mc3_nodes)\n\n\n\n\n\n\nFor product services column that have NA values, we will input the value as “0”. For revenue_omu column that has NA or unknown value, we will replace it as “unknown”.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nmc3_nodes <- mc3_nodes %>%\n  mutate(product_services = ifelse(product_services == \"character(0)\", \"unknown\", product_services),\n         revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n\nDistribution of the type of nodes\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nhist_type_node <- ggplot(data = mc3_nodes,\n       aes(x = type)) +\n  geom_bar()+\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.1) +\n  labs(title = \"Distribution of Node Type\", x = \"Type\", y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\")) \n  \n#hist_type_node\n\n\nDistribution of number of countries for each id\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Count the number of unique countries for each ID\ncountry_counts <- mc3_nodes %>%\n  group_by(id) %>%\n  summarize(unique_countries = n_distinct(country))\n\n#Calculate the no of unique countries each ID has\n\n# Calculate the frequency count for each country\nfrequency_table_country <- table(country_counts$unique_countries)\n\n# Convert the frequency table to a data frame\nfrequency_df_country <- as.data.frame(frequency_table_country)\n\n# Rename the columns\ncolnames(frequency_df_country) <- c(\"Unique Countries\", \"Frequency\")\n\n# Display the frequency table\nfrequency_df_country\n\n\n  Unique Countries Frequency\n1                1     22783\n2                2       131\n3                3        12\n4                4         2\n5                9         1\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Plot the frequency table as a bar plot with labels\nhist_country <- ggplot(frequency_df_country, aes(x = `Unique Countries`, y = Frequency)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = Frequency), vjust = -0.5, size = 3.5) +  # Add labels to the bars\n  labs(title = \"Count of Countries for each ID\",\n       x = \"No of Countries\",\n       y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\"))\n#hist_country\n\n\nFrom the above plot, we could see there are 146 ids that have more than 1 countries, which calls for suspicious.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Count the number of unique rev for each ID\nrev_counts <- mc3_nodes %>%\n  group_by(id) %>%\n  summarize(unique_rv = n_distinct(revenue_omu))\n\n# Display the resulting data frame\n#rev_counts\n\n# Calculate the frequency count for each id\nfrequency_table_rev <- table(rev_counts$unique_rv)\n\n# Convert the frequency table to a data frame\nfrequency_df_rev <- as.data.frame(frequency_table_rev)\n\n# Rename the columns\ncolnames(frequency_df_rev) <- c(\"Unique rev\", \"Frequency\")\n\n# Display the frequency table\nfrequency_df_rev\n\n\n  Unique rev Frequency\n1          1     22238\n2          2       591\n3          3        76\n4          4        14\n5          5         4\n6          6         2\n7          7         2\n8         10         1\n9         11         1\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Plot the frequency table as a bar plot with labels\nhist_rev <- ggplot(frequency_df_rev, aes(x = `Unique rev`, y = Frequency)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = Frequency), vjust = -0.5, size = 3.5) +  # Add labels to the bars\n  labs(title = \"Count of no of rev for each ID\",\n       x = \"No of rev\",\n       y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\"))\n#hist_rev\n\n\nFrom the above, we can also see that there are 691 ids that have more than 1 revenue reflected.\nCombine the different plots using patchwork as shown by code chunk below,\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\ncombine_plot_node <- hist_type_node / (hist_country + hist_rev)\ncombine_plot_node\n\n\n\n\n\nNow, I want to a new dataframe for nodes called mc3_nodes_updated to store the frequency of countries and revenue we derive earlier on to see which id these belongs to.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Join the unique_countries column from country_counts into mc3_nodes\nmc3_nodes_updated <- mc3_nodes %>%\n  left_join(country_counts %>% select(id, unique_countries),\n            by = c(\"id\" = \"id\")) \n\n# Join the unique_rv column from rev_counts into mc3_nodes\nmc3_nodes_updated <- mc3_nodes_updated %>%\n  left_join(rev_counts %>% select(id, unique_rv),\n            by = c(\"id\" = \"id\"))\n\n# View the updated mc3_nodes\nmc3_nodes_updated\n\n\n# A tibble: 27,622 × 7\n   id      country type  revenue_omu product_services unique_countries unique_rv\n   <chr>   <chr>   <chr> <chr>       <chr>                       <int>     <int>\n 1 Jones … ZH      Comp… 310612303.… Automobiles                     1         2\n 2 Colema… ZH      Comp… 162734683.… Passenger cars,…                1         1\n 3 Aqua A… Oceanus Comp… 115004666.… Holding firm wh…                1         1\n 4 Makumb… Utopor… Comp… 90986412.5… Car service, ca…                1         1\n 5 Taylor… ZH      Comp… 81466666.6… Fully electric …                1         1\n 6 Harmon… ZH      Comp… 75070434.9… Discount superm…                1         1\n 7 Punjab… Riodel… Comp… 72167572.0… Beef, pork, chi…                1         1\n 8 Assam … Utopor… Comp… 72162317.2… Power and Gas s…                2         2\n 9 Ianira… Rio Is… Comp… 68832979.2… Light commercia…                1         1\n10 Moran,… ZH      Comp… 65592905.5… Automobiles, tr…                1         1\n# ℹ 27,612 more rows\n\n\n\n\n3.4.2 Initial Network Visualisation and Analysis\nBuilding network model with tidygraph\n\nfiltered_mc3_edges_owner <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3, type == \"Beneficial Owner\")\nfiltered_mc3_edges_owner\n\n# A tibble: 313 × 5\n   source                           target         type  weights no_of_companies\n   <chr>                            <chr>          <chr>   <int>           <dbl>\n 1 Acevedo, Dickson and Gonzalez    Richard Smith  Bene…       1               6\n 2 Adams Group                      John Smith     Bene…       1               9\n 3 Adams-Pope                       Michelle Rodr… Bene…       1               4\n 4 Adriatic Catch S.A. de C.V.      David Jones    Bene…       1               6\n 5 Albertine Rift  NV Family        Michael Taylor Bene…       1               4\n 6 Alexander PLC                    David Jones    Bene…       1               6\n 7 Alvarez Ltd                      Michael Carter Bene…       1               5\n 8 Alvarez, Young and Ramos         Michael Miller Bene…       1               5\n 9 Ancla del Este Ltd. Liability Co Aaron Jones    Bene…       1               4\n10 Ancla del Este Sp Fish           John Jones     Bene…       1               4\n# ℹ 303 more rows\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a data frame with source nodes and rename column\nid1 <- filtered_mc3_edges_owner %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid2 <- filtered_mc3_edges_owner %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes1 <- rbind(id1, id2) %>%\n  distinct() \n\n#see if need add in some of the nodes detail \n mc3_nodes1\n\n\n# A tibble: 362 × 2\n   id                               type_node\n   <chr>                            <chr>    \n 1 Acevedo, Dickson and Gonzalez    company  \n 2 Adams Group                      company  \n 3 Adams-Pope                       company  \n 4 Adriatic Catch S.A. de C.V.      company  \n 5 Albertine Rift  NV Family        company  \n 6 Alexander PLC                    company  \n 7 Alvarez Ltd                      company  \n 8 Alvarez, Young and Ramos         company  \n 9 Ancla del Este Ltd. Liability Co company  \n10 Ancla del Este Sp Fish           company  \n# ℹ 352 more rows\n\n\n\nDT::datatable(mc3_nodes1)\n\n\n\n\n\n\n\nmc3_graph <- tbl_graph(nodes = mc3_nodes1,\n                       edges = filtered_mc3_edges_owner,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Set a seed for reproducibility\nset.seed(123)\n\nmc3_graph %>%\nggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha=0.5)) +\n  geom_node_point(aes(\n    size = betweenness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5)) +\n  scale_size_continuous(range=c(1,10))+\n  theme_graph()\n\n\n\n\n\n\n\nPreparing Network Data for visNetowrk\nInstead of plotting static network graph, we can plot interactive network graph by using visNetwork package. Before we can plot a interactive network graph by using visNetwork package, we are required to prepare two tibble data frames, one for the nodes and the other one for the edges.\nPreparing edges tibble data frame\n\nedges_df <- mc3_graph %>%\n  activate(edges) %>%\n  as.tibble()\nedges_df\n\n# A tibble: 313 × 5\n    from    to type             weights no_of_companies\n   <int> <int> <chr>              <int>           <dbl>\n 1     1   296 Beneficial Owner       1               6\n 2     2   297 Beneficial Owner       1               9\n 3     3   298 Beneficial Owner       1               4\n 4     4   299 Beneficial Owner       1               6\n 5     5   300 Beneficial Owner       1               4\n 6     6   299 Beneficial Owner       1               6\n 7     7   301 Beneficial Owner       1               5\n 8     8   302 Beneficial Owner       1               5\n 9     9   303 Beneficial Owner       1               4\n10    10   304 Beneficial Owner       1               4\n# ℹ 303 more rows\n\n\nPreparing nodes tibble data frame\nIn this section, we will prepare a nodes tibble data frame by using the code chunk below.\n\nnodes_df <- mc3_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\n\nnodes_df <- nodes_df %>%\n  rename(group = type_node) \n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Plot the network graph with labeled nodes using visNetwork\nvisNetwork(nodes_df, edges_df, main = list(text = \"Network Graph of Company and Beneficial Owner\",\n                                           style = \"color: black; font-weight: bold; text-align: center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLayout(randomSeed = 123) %>%\n  addFontAwesome(name =\"font-awesome\") %>%\n  visGroups(groupname = \"company\", shape = \"icon\",\n            icon = list(code = \"f0f7\", color = \"#000000\")) %>%\n  visGroups(groupname = \"Beneficial Owner\", shape = \"icon\",\n            icon = list(code = \"f2bd\")) %>%\n  visLegend() %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visInteraction(\n    zoomView = TRUE,\n    dragNodes = TRUE,\n    dragView = TRUE,\n    navigationButtons = TRUE,\n    selectable = TRUE,  # Enable node selection\n    hover = TRUE,  # Enable hover effects\n  )\n\n\n\n\n\n\n\nSimilarly, to plot the network graph of Company and Company Contacts, we do the same as above,\n\n#Filter the type = \"Company Contacts\"\nmc3_edges_cc<- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3, type == \"Company Contacts\") \nmc3_edges_cc\n\n# A tibble: 72 × 5\n   source                                   target type  weights no_of_companies\n   <chr>                                    <chr>  <chr>   <int>           <dbl>\n 1 Adriatic Tuna GmbH & Co. KG              Chris… Comp…       1               4\n 2 Alvarez and Sons                         Rober… Comp…       1               4\n 3 Andhra Pradesh   Limited Liability Comp… Miche… Comp…       1               4\n 4 Austin-Porter                            Micha… Comp…       1               4\n 5 Bahía del Este Ges.m.b.H.                Micha… Comp…       1               4\n 6 Baker-Savage                             Melis… Comp…       1               4\n 7 Brown-Frank                              John … Comp…       1               9\n 8 Caracola del Este Sagl Solutions         Micha… Comp…       1               5\n 9 Clayton Ltd                              Brian… Comp…       1               5\n10 Coleman, Harris and Mitchell             John … Comp…       1               7\n# ℹ 62 more rows\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a data frame with source nodes and rename column\nid3 <- mc3_edges_cc %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid4 <- mc3_edges_cc %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes2 <- rbind(id3, id4) %>%\n  distinct()\n\n#see if need add in some of the nodes detail \n\n\n\nmc3_graph2 <- tbl_graph(nodes = mc3_nodes2,\n                       edges = mc3_edges_cc,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Set a seed for reproducibility\nset.seed(123)\n\nmc3_graph2 %>%\nggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha=0.5)) +\n  geom_node_point(aes(\n    size = betweenness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5)) +\n  scale_size_continuous(range=c(1,10))+\n  theme_graph()\n\n\n\n\n\n\nedges_df_2 <- mc3_graph2 %>%\n  activate(edges) %>%\n  as.tibble()\n\n\nnodes_df_2 <- mc3_graph2 %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\n\nnodes_df_2 <- nodes_df_2 %>%\n  rename(group = type_node) \n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Plot the network graph with labeled nodes using visNetwork\nvisNetwork(nodes_df_2, edges_df_2, main = list(text = \"Network Graph of Company and Company Contacts\",\n                                           style = \"color: black; font-weight: bold; text-align: center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLayout(randomSeed = 123) %>%\n  addFontAwesome(name =\"font-awesome\") %>%\n  visGroups(groupname = \"company\", shape = \"icon\",\n            icon = list(code = \"f0f7\", color = \"#000000\")) %>%\n  visGroups(groupname = \"Company Contacts\", shape = \"icon\",\n            icon = list(code = \"f0c0\")) %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(\n    zoomView = TRUE,\n    dragNodes = TRUE,\n    dragView = TRUE,\n    navigationButtons = TRUE,\n    selectable = TRUE,  # Enable node selection\n    hover = TRUE,  # Enable hover effects\n  )\n\n\n\n\n\n\n\nTop 5% revenue\n\nfiltered_mc3_edges <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3)\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a data frame with source nodes and rename column\nid4 <- filtered_mc3_edges %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid5 <- filtered_mc3_edges %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes3 <- rbind(id4, id5) %>%\n  distinct() %>%\n  left_join(mc3_nodes_updated,\n            unmatched = \"drop\") %>%\n  distinct()\n\nmc3_nodes3 <- mc3_nodes3 %>%\n  mutate(revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n#see if need add in some of the nodes detail \n mc3_nodes3\n\n\n# A tibble: 535 × 8\n   id      type_node country type  revenue_omu product_services unique_countries\n   <chr>   <chr>     <chr>   <chr> <chr>       <chr>                       <int>\n 1 Aceved… company   <NA>    <NA>  0           <NA>                           NA\n 2 Adams … company   ZH      Comp… 9056.2418   A range of fish…                1\n 3 Adams … company   ZH      Bene… 0           unknown                         1\n 4 Adams … company   ZH      Comp… 0           unknown                         1\n 5 Adams-… company   <NA>    <NA>  0           <NA>                           NA\n 6 Adriat… company   Puerto… Comp… 8869.44     Technical testi…                1\n 7 Adriat… company   Oceanus Comp… 29366.6728  Integrated frei…                1\n 8 Albert… company   Marebak Comp… 9760.8727   Alaska Pollock,…                1\n 9 Alexan… company   ZH      Bene… 0           unknown                         1\n10 Alvare… company   ZH      Bene… 0           unknown                         1\n# ℹ 525 more rows\n# ℹ 1 more variable: unique_rv <int>\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Convert the revenue column to numeric (if it's not already numeric)\nmc3_nodes3$revenue_omu <- as.numeric(mc3_nodes3$revenue_omu)\n\n# Calculate the revenue threshold for the top 20% excluding non-numeric or missing values\nrevenue_threshold <- quantile(mc3_nodes3$revenue_omu, probs = 0.90, na.rm = TRUE)\n\n# Filter the DataFrame to retain only the rows with revenue above the threshold\nfiltered_mc3_nodes <- mc3_nodes3[mc3_nodes3$revenue_omu > revenue_threshold, ]\n\n# View the filtered DataFrame\nfiltered_mc3_nodes\n\n\n# A tibble: 54 × 8\n   id      type_node country type  revenue_omu product_services unique_countries\n   <chr>   <chr>     <chr>   <chr>       <dbl> <chr>                       <int>\n 1 Ancla … company   Uzifri… Comp…     130212. Operation of fi…                1\n 2 Andhra… company   Rio Is… Comp…     787121. Grocery products                1\n 3 Bahía … company   Novarc… Comp…      60335. Fabricated meta…                1\n 4 Bahía … company   Oceanus Comp…     254667. Swimwear and fa…                2\n 5 Bahía … company   Novarc… Comp…      98065. Contract manufa…                3\n 6 Bahía … company   Utopor… Comp…      67616. Gelatin                         3\n 7 Baker … company   ZH      Comp…  104095830. Fish; fresh or …                1\n 8 BlueWa… company   Zawali… Comp…     199596. Canned Products…                1\n 9 Bu yu … company   Nalako… Comp…      62860. Gelatine produc…                1\n10 Congo … company   Riodel… Comp…     106161. Writing tools a…                1\n# ℹ 44 more rows\n# ℹ 1 more variable: unique_rv <int>\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 5\n#| fig-height: 6\n\n# Create a bar chart of revenue vs ID using ggplot\nbar_plot_toprev <- ggplot(filtered_mc3_nodes, aes(x = reorder(id, revenue_omu), y = revenue_omu/1000)) +\n  geom_bar_interactive(aes(tooltip = paste(\"ID:\", id,\n                                           \"<br>Type:\", type_node,\n                                           \"<br>Country:\", country,\n                                           \"<br>Revenue:\", revenue_omu,\n                                           \"<br>Product Services:\", product_services)),\n                       stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"id\", y = \"Revenue_omu ('000)\", title = \"Top 10% ids\") +\n  coord_flip() +\n  theme(plot.title = element_text(face = \"bold\"))+\n  theme(axis.text.y = element_text(size = 6))\n\n# Print the bar plot\ngirafe(ggobj = bar_plot_toprev,\n       width_svg = 8,\n  height_svg = 8*0.618)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploring-the-edges-data-frame",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploring-the-edges-data-frame",
    "title": "Take Home_Ex03",
    "section": "4.1 Exploring the edges data frame",
    "text": "4.1 Exploring the edges data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_edges tibble data frame.\n\nskim(mc3_edges)\n\n\nData summary\n\n\nName\nmc3_edges\n\n\nNumber of rows\n24036\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n6\n700\n0\n12856\n0\n\n\ntarget\n0\n1\n6\n28\n0\n21265\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\nThe report above reveals that there is no missing values in all fields.\nIn the code chunk below, datatable() of DT package is used to display mc3_edges tibble data frame as an interactive table on the html document.\n\nDT::datatable(mc3_edges)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe edge table provides us an understanding of the relationship between the source and targets. Here source is the Company and the relationship with the target is based on the type column. There are two kinds of relationship; beneficial owner and company contacts.\n\n\n\nPlotting the variables in edge dataframe\nBelow is the code chunk using ggplot to plot the distribution of the following:\n\nDistribution of the type of relationship that exist between the source and target and their corresponding frequency.\nNumber of companies that a beneficial owner owns\nNumber of owners for each company\n\n\nRelationship TypesNo of companies owner ownsNo of owners in a company\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Plot distribution of type \nhist_type <- ggplot(data = mc3_edges,\n       aes(x = type)) +\n  geom_bar() +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.1) +\n  labs(title = \"Distribution of Relationship Types\", x = \"Type\", y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\"))\n\nhist_type\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Filter the type == \"Beneficial Owner\" \nmc3_edges_owner <- mc3_edges %>%\n  filter(type == \"Beneficial Owner\") %>% \n  group_by(target, type) %>%\n    summarise(no_of_companies = n()) %>%\n  ungroup()\n\n# Create a ggplot histogram to plot the no of companies a beneficial owner owns\ngg_hist_own <- ggplot(mc3_edges_owner, aes(x = no_of_companies)) +\n  geom_histogram(fill = \"steelblue\") +\n  labs(title = \"No of companies beneficial owners own\", x = \"No of companies\", y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = seq(min(mc3_edges_owner$no_of_companies), max(mc3_edges_owner$no_of_companies), by = 1))\n\n# Calculate frequency counts for each bin\nfreq_counts <- table(mc3_edges_owner$no_of_companies)\n\n# Create a data frame for labels\nlabel_data <- data.frame(x = as.numeric(names(freq_counts)), y = as.numeric(freq_counts))\n\n# Add frequency labels to the plot\ngg_hist_own <- gg_hist_own +\n  geom_text(\n    data = label_data,\n    aes(x = x, y = y, label = y),\n    vjust = -0.5,\n    size = 3\n  )\n\ngg_hist_own\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Filter the type == \"Beneficial Owner\" \nmc3_edges_comp <- mc3_edges %>%\n  filter(type == \"Beneficial Owner\") %>% \n  group_by(source) %>%\n    summarise(no_of_owners = n()) %>%\n  ungroup() %>%\n  arrange(no_of_owners)\n\nDT::datatable(mc3_edges_comp)\n\n\n\n\n\n\n\n\n\n\nAs seen from the above plot, there are a total of 16,792 count for beneficial owners and 7,244 for Company contacts.\nAlso, we can see that a majority of owners own 1 company. In fact, less than 0.5% of the beneficial owners own more than 3 companies. A table to show the number of owners for each company is also created,if the owners were to own many of the small companies (small in terms of companies who have few owners), this may call for suspicion and we will further investigate later on.\n\n\nCreating new edge dataframe\nBelow is the code chunk to create a new edge dataframe called mc3_edges_with_no_of_companies, which has the no_of_companies column added in.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Join the no_of_companies column from mc3_edges_owner into mc3_edges\nmc3_edges_with_no_of_companies <- mc3_edges %>%\n  left_join(mc3_edges_owner %>% select(target, no_of_companies),\n            by = c(\"target\" = \"target\")) %>%\n  mutate(no_of_companies = ifelse(is.na(no_of_companies), 0, no_of_companies))\n\n# View the updated mc3_edges\nmc3_edges_with_no_of_companies\n\n\n# A tibble: 24,036 × 5\n   source                      target             type   weights no_of_companies\n   <chr>                       <chr>              <chr>    <int>           <dbl>\n 1 1 AS Marine sanctuary       Christina Taylor   Compa…       1               1\n 2 1 AS Marine sanctuary       Debbie Sanders     Benef…       1               1\n 3 1 Ltd. Liability Co Cargo   Angela Smith       Benef…       1               1\n 4 1 S.A. de C.V.              Catherine Cox      Compa…       1               0\n 5 1 and Sagl Forwading        Angela Mendoza     Compa…       1               0\n 6 1 and Sagl Forwading        Christopher Watson Benef…       1               1\n 7 2 Limited Liability Company Amanda Mcdonald    Benef…       1               1\n 8 2 Limited Liability Company Megan Padilla      Compa…       1               0\n 9 2 Limited Liability Company Monica Martinez    Compa…       1               0\n10 2 Limited Liability Company Teresa Collins     Benef…       1               1\n# ℹ 24,026 more rows"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploring-the-nodes-data-frame",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploring-the-nodes-data-frame",
    "title": "Take Home_Ex03",
    "section": "4.2 Exploring the nodes data frame",
    "text": "4.2 Exploring the nodes data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_nodes tibble data frame.\n\nskim(mc3_nodes)\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n27622\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3244\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n21515\n0.22\n1822155\n18184433\n3652.23\n7676.36\n16210.68\n48327.66\n310612303\n▇▁▁▁▁\n\n\n\n\n\nThere are a large number of missing values in the revenue_omu column.\nIn the code chunk below, datatable() of DT package is used to display mc3_nodes tibble data frame as an interactive table on the html document.\n\nDT::datatable(mc3_nodes)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nObserving the nodes datatable above, we will notice that some of the node ids are not unique, some may have more than 1 country, offer more than 1 product services and/or more than 1 revenue reflected. This could be one of the way to infer the size of the company; if it operates in more than 1 country and/or offer many products, its likely that they are a big company.\n\n\n\nHandling of missing and/or unknown values\nNotice that the product services column contains NA or character(0) values, which are meaningless, thus replace it with “unknown”. As for revenue_omu column that has NA values, replace it with the value “0”.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nmc3_nodes <- mc3_nodes %>%\n  mutate(product_services = ifelse(product_services == \"character(0)\", \"unknown\", product_services),\n         revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n\n\n\nChecking for duplicate nodes and removing them\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Calculate the number of duplicates in mc3_nodes\nnum_duplicates_nodes <- sum(duplicated(mc3_nodes))\n\n# Display the number of duplicates\n#num_duplicates_nodes\n\n# Remove duplicates from mc3_nodes\nmc3_nodes_unique <- distinct(mc3_nodes)\n\n\nThere are a total of 2595 duplicated nodes. These duplicated nodes are removed and a new nodes dataframe, mc_nodes_uniquedataframe is created.\n\n\n4.2.1 Distribution of the nodes type and product_services\nIn this section, we will perform text sensing using appropriate functions of tidytext package.\nTo begin, we will employ the tokenisation process. In text sensing, tokenisation is the process of breaking up a given text into units called tokens. Tokens can be individual words, phrases or even whole sentences. In the process of tokenisation, some characters like punctuation marks may be discarded. The tokens usually become the input for the processes like parsing and text mining.\nIn the code chunk below, unnest_token() of tidytext is used to split text in product_services field into words.\n\ntoken_nodes <- mc3_nodes_unique %>%\n  unnest_tokens(word, \n                product_services)\n\nThe two basic arguments to unnest_tokens() used here are column names. First we have the output column name that will be created as the text is unnested into it (word, in this case), and then the input column that the text comes from (product_services, in this case).\n\n\n\n\n\n\nNote\n\n\n\n\nBy default, punctuation has been stripped. (Use the to_lower = FALSE argument to turn off this behavior).\nBy default, unnest_tokens() converts the tokens to lowercase, which makes them easier to compare or combine with other datasets. (Use the to_lower = FALSE argument to turn off this behavior).\n\n\n\nNow we can visualise the words extracted by using the code chunk below.\n\ntoken_nodes %>%\n  count(word, sort = TRUE) %>%\n  top_n(5) %>%\n  mutate(word = reorder(word, n)) \n\n# A tibble: 5 × 2\n  word         n\n  <fct>    <int>\n1 unknown  21009\n2 and       6389\n3 products  1860\n4 of         881\n5 as         752\n\n\nThe tibble dataframe above reveals that the unique words contains some words that may not be useful to use. For instance, “and” and “of”. In the word of text mining, we call those words stop words. Tidytext package has a function called stop_words that can help us clean up stop words.\n\nstopwords_removed <- token_nodes %>% \n  anti_join(stop_words)\n\n\n\n\n\n\n\nNote\n\n\n\nThere are two processes:\n\nLoad the stop_words data included with tidytext. This data is simply a list of words that you may want to remove in a natural language analysis..\nThen anti_join() of dplyr package is used to remove all stop words from the analysis..\n\n\n\n\nstopwords_removed %>%\n  filter(!word %in% c(\"unknown\", \"services\", \"related\",\"including\", \"offers\",\"range\")) %>%    #filter away meaningless words \n  count(word, sort = TRUE) %>%\n  top_n(20) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  geom_text(aes(label = n), vjust = 0.5, hjust = -0.2, size = 2.5) +  # Add labels to the bars\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of unique words found in product_services field\")\n\n\n\n\nThe below code chunk will better help us categorise our product_services into fishing related, non-fishing related and unknown category for further analysis.\n\n#Create a list of fishing related words \ninclude_words <- c(\"fish\", \"fishing\", \"seafood\", \"seafoods\",\"prawns\",\"prawn\", \"salmon\",\"tuna\",\"shrimp\",\"shrimps\",\"crab\",\"squid\",\"oyster\",\"clam\",\"mollusks\",\"crustaceans\",\"roe\",\"fillet\",\"haddock\",\"octopus\",\"herring\",\"lobsters\",\"seabass\",\"cephalopods\",\"cod\",\"shellfish\",\"shark\",\"chum\")\n\n#Use the grepl() function to create a logical vector indicating whether each word in mc3_nodes_unique$product_services is found in the include_words list. Store the result in a new column called category\nmc3_nodes_unique$category <- ifelse(grepl(paste0(\"\\\\b\", paste(include_words, collapse = \"\\\\b|\\\\b\"), \"\\\\b\"), \n                                         tolower(mc3_nodes_unique$product_services)),\n                                   \"Fishing-related\",\n                                   ifelse(mc3_nodes_unique$product_services == \"Unknown\",\n                                          \"Unknown\",\n                                          \"Non-fishing related\"))\n\nFrom the Nodes Type tab, we can see that there are a total of 3 node types, namely Beneficial Owner, Company and Company Contacts.\nFrom the Category Breakdown tab, we can look at the distribution of the different categories and the median revenue for each category. As seen from the pie chart, only a small percentage (4%) of companies provide fishing-related products_services and the median revenue generated for fishing industry is around 29,811.38 OMU.\nUnder the Top revenue ids tab, the top 10% revenue generating ids are plotted, which could possibly be used to cross check with the size of the company, to check for any abnormalities, for instance, few owners or contacts but exceptionally high earnings, and greater than the industry’s median revenue.\n\nNodes TypeCategory BreakdownTop revenue ids\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nhist_type_node <- ggplot(data = mc3_nodes_unique,\n       aes(x = type)) +\n  geom_bar()+\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.1) +\n  labs(title = \"Distribution of Node Type\", x = \"Type\", y = \"Count\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\")) \n  \nhist_type_node\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggrepel)\n\n# Define the colors for each category\ncategory_colors <- c(\"Fishing-related\" = \"#B4D4E7\", \"Non-fishing related\" = \"#B4E7BD\", \"Unknown\" = \"#D3D3D3\")\n\n# Set the category as a factor with desired order\ncategory_freq <- mc3_nodes_unique %>%\n  mutate(category = factor(category, levels = c(\"Fishing-related\", \"Non-fishing related\", \"Unknown\"))) %>%\n  count(category) %>%\n  mutate(percentage = prop.table(n) * 100)\n\n# Create a pie chart with labels\nggplot_cat <- ggplot(category_freq, aes(x = \"\", y = n, fill = category)) +\n  geom_bar(width = 1, stat = \"identity\", color = \"black\") +\n  coord_polar(theta = \"y\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  labs(title = \"Distribution of Category\") +\n  theme_void() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(hjust = 0.5, face = \"bold\")) +\n  geom_label_repel(aes(label = paste0(category, \"\\nCount: \", n, \"\\n\", round(percentage, 1), \"%\")),\n                   box.padding = 0.5,\n                   point.padding = 0.1,\n                   segment.color = \"black\",\n                   show.legend = FALSE,\n                   label.color = \"black\") +\n  scale_fill_manual(values = category_colors)\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n#Convert revenue_omu to numeric\nmc3_nodes_unique <- mc3_nodes_unique %>% \n  mutate(revenue_omu = as.numeric(revenue_omu))\n\n# Define the colors for each category\ncategory_colors <- c(\"Fishing-related\" = \"#B4D4E7\", \"Non-fishing related\" = \"#B4E7BD\", \"Unknown\" = \"#D3D3D3\")\n\n# Calculate the median revenue_omu for each category\nmedian_revenue <- mc3_nodes_unique %>%\n  group_by(category) %>%\n  filter(category != \"Non-fishing related\" | (category == \"Non-fishing related\" & revenue_omu != 0 & !is.na(revenue_omu))) %>%\n  summarize(median_revenue_omu = median(revenue_omu, na.rm = TRUE))\n\n# Plot the bar chart\nggplot_rev <- ggplot(median_revenue, aes(x = category, y = median_revenue_omu, fill = category)) +\n  geom_col() +\n  scale_fill_manual(values = category_colors) +\n  xlab(\"Category\") +\n  ylab(\"Median Revenue (OMU)\") +\n  labs(title = \"Median Revenue by Category\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\")) +\n  geom_text(aes(label = round(median_revenue_omu, 2)), vjust = -0.5)\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\ncombined_plot2 <- ggplot_cat / ggplot_rev\ncombined_plot2\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n## Adding the `mc3_nodes_unique` attributes, consider both beneficial owners and company contacts\nfiltered_mc3_edges <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3)\n\n\n# Create a data frame with source nodes and rename column\nid4 <- filtered_mc3_edges %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid5 <- filtered_mc3_edges %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes3 <- rbind(id4, id5) %>%\n  distinct() %>%\n  left_join(mc3_nodes_unique,\n            unmatched = \"drop\") %>%\n  distinct()\n\nmc3_nodes3 <- mc3_nodes3 %>%\n  mutate(revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n\n# Convert the revenue column to numeric (if it's not already numeric)\nmc3_nodes3$revenue_omu <- as.numeric(mc3_nodes3$revenue_omu)\n\n# Calculate the revenue threshold for the top 20% excluding non-numeric or missing values\nrevenue_threshold <- quantile(mc3_nodes3$revenue_omu, probs = 0.90, na.rm = TRUE)\n\n# Filter the DataFrame to retain only the rows with revenue above the threshold\nfiltered_mc3_nodes <- mc3_nodes3[mc3_nodes3$revenue_omu > revenue_threshold, ]\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 5\n#| fig-height: 6\n\n# Create a bar chart of revenue vs ID using ggplot\nbar_plot_toprev <- ggplot(filtered_mc3_nodes, aes(x = reorder(id, revenue_omu), y = revenue_omu/1000)) +\n  geom_bar_interactive(aes(tooltip = paste(\"ID:\", id,\n                                           \"<br>Type:\", type_node,\n                                           \"<br>Country:\", country,\n                                           \"<br>Revenue:\", revenue_omu,\n                                           \"<br>Product Services:\", product_services)),\n                       stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"id\", y = \"Revenue_omu ('000)\", title = \"Top 10% ids\") +\n  coord_flip() +\n  theme(plot.title = element_text(face = \"bold\"))+\n  theme(axis.text.y = element_text(size = 6))\n\n# Print the bar plot\ngirafe(ggobj = bar_plot_toprev,\n       width_svg = 8,\n  height_svg = 8*0.618)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-network-model-with-tidygraph-for-beneficial-owners",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-network-model-with-tidygraph-for-beneficial-owners",
    "title": "Take Home_Ex03",
    "section": "5.1 Building network model with tidygraph for Beneficial Owners",
    "text": "5.1 Building network model with tidygraph for Beneficial Owners\nBased on our edge dataframe analysis earlier on, we found out that less than 0.5% of the beneficial owners own more than 3 companies, which calls for suspicion, thus we will further investigate, by plotting the network graph and seeing their relationship with other owners and/or companies.\n\nPreparing edge data table\n\n#filter those beneficial owners that has more than 3 companies\nfiltered_mc3_edges_owner <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3, type == \"Beneficial Owner\")\n\n\n\nPreparing nodes data table\nInstead of using the nodes data table extracted from mc3_data, we will prepare a new nodes data table by using the source and target fields of filtered_mc3_edges_owner data table. This is necessary to ensure that the nodes in nodes data tables include all the source and target values.\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a data frame with source nodes and rename column\nid1 <- filtered_mc3_edges_owner %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid2 <- filtered_mc3_edges_owner %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes1 <- rbind(id1, id2) %>%\n  distinct() \n\n\n\n\nTidygraph model\n\nmc3_graph <- tbl_graph(nodes = mc3_nodes1,\n                       edges = filtered_mc3_edges_owner,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nVisNetworkNetwork graphOwners\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Preparing edges tibble data frame\nedges_df <- mc3_graph %>%\n  activate(edges) %>%\n  as.tibble()\n\n\n# Preparing nodes tibble data frame\nnodes_df <- mc3_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df <- nodes_df %>%\n  rename(group = type_node) \n\n\n# Plot the network graph with labeled nodes using visNetwork\nvisNetwork(nodes_df, edges_df, main = list(text = \"Network Graph of Company and Beneficial Owner\",\n                                           style = \"color: black; font-weight: bold; text-align: center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLayout(randomSeed = 123) %>%\n  addFontAwesome(name =\"font-awesome\") %>%\n  visGroups(groupname = \"company\", shape = \"icon\",\n            icon = list(code = \"f0f7\", color = \"#000000\")) %>%\n  visGroups(groupname = \"Beneficial Owner\", shape = \"icon\",\n            icon = list(code = \"f2bd\")) %>%\n  visLegend() %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visInteraction(\n    zoomView = TRUE,\n    dragNodes = TRUE,\n    dragView = TRUE,\n    navigationButtons = TRUE,\n    selectable = TRUE,  # For node selection\n    hover = TRUE,  # For hover effects\n  )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Set a seed for reproducibility\nset.seed(123)\n\nggraph_own <- mc3_graph %>%\nggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha=0.5)) +\n  geom_node_point(aes(\n    size = betweenness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5)) +\n  scale_size_continuous(range=c(1,10))+\n  theme_graph()\nggraph_own\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\ntop_ids <- filtered_mc3_edges_owner %>%\n  select(target, no_of_companies) %>%\n  distinct() %>%\n  arrange(desc(no_of_companies)) \n\nDT::datatable(top_ids)\n\n\n\n\n\n\n\n\n\n\nThe owners tab provides a table to show the no of companies each owner owns. Michael Johnson for instance is the beneficial owner for 8 companies. When we delve into each of the companies he owns, he was the sole owner for the majority of his companies, and one of them, Baker and Sons , was even the top revenue generating company and it was way above the median revenue generated for a fishing industry, which seems suspicious.\nJames Smith for instance, on the other hand also seems suspicious as he is the stakeholder of a large corporation Spanish Shrimp A/S Marine, who has 28 other stakeholders, and is one of the top revenue generating company, with revenue above the median revenue, but at the same time he is also the sole owner for the rest of the companies he is associated with."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-network-model-with-tidygraph-for-company-contacts",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-network-model-with-tidygraph-for-company-contacts",
    "title": "Take Home_Ex03",
    "section": "5.2 Building network model with tidygraph for Company Contacts",
    "text": "5.2 Building network model with tidygraph for Company Contacts\nSimilarly, to plot the network graph of Company and Company Contacts, we do the same as above,\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n#Filter the type = \"Company Contacts\" to create the edge data table\nmc3_edges_cc<- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3, type == \"Company Contacts\") \n\n# Create the nodes data table\n# Create a data frame with source nodes and rename column\nid3 <- mc3_edges_cc %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid4 <- mc3_edges_cc %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes2 <- rbind(id3, id4) %>%\n  distinct()\n\n\n#Building the tidygraph model for company contacts\nmc3_graph2 <- tbl_graph(nodes = mc3_nodes2,\n                       edges = mc3_edges_cc,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\n\nVisNetworkNetwork graph\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Preparing edges tibble data frame\nedges_df_2 <- mc3_graph2 %>%\n  activate(edges) %>%\n  as.tibble()\n\n# Preparing nodes tibble data frame\nnodes_df_2 <- mc3_graph2 %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(everything()) %>%\n  relocate(id, .before = label)\n\nnodes_df_2 <- nodes_df_2 %>%\n  rename(group = type_node) \n\n# Plot the network graph with labeled nodes using visNetwork\nvisNetwork(nodes_df_2, edges_df_2, main = list(text = \"Network Graph of Company and Company Contacts\",\n                                           style = \"color: black; font-weight: bold; text-align: center;\")) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLayout(randomSeed = 123) %>%\n  addFontAwesome(name =\"font-awesome\") %>%\n  visGroups(groupname = \"company\", shape = \"icon\",\n            icon = list(code = \"f0f7\", color = \"#000000\")) %>%\n  visGroups(groupname = \"Company Contacts\", shape = \"icon\",\n            icon = list(code = \"f0c0\")) %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n  ) %>%\n  visLegend() %>%\n  visInteraction(\n    zoomView = TRUE,\n    dragNodes = TRUE,\n    dragView = TRUE,\n    navigationButtons = TRUE,\n    selectable = TRUE,  # For node selection\n    hover = TRUE,  # For hover effects\n  )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Set a seed for reproducibility\nset.seed(123)\n\nmc3_graph2 %>%\nggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha=0.5)) +\n  geom_node_point(aes(\n    size = betweenness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5)) +\n  scale_size_continuous(range=c(1,10))+\n  theme_graph()\n\n\n\n\n\n\n\n\nAs seen from the network graph above, some owners are not only the stakeholder/owner of more than 3 companies, but they are also company contacts with multiple other companies, such as Jennifer Johnson, David Jones, John Willams etc, which will require further investigations to see if there are any illegal activities going on."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#adding-the-mc3_nodes_unique-attributes",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#adding-the-mc3_nodes_unique-attributes",
    "title": "Take Home_Ex03",
    "section": "5.3 Adding the mc3_nodes_unique attributes",
    "text": "5.3 Adding the mc3_nodes_unique attributes\nHere we will consider both beneficial owners and company contacts,\n\nfiltered_mc3_edges <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3)\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 3\n#| fig-height: 3\n\n# Create a data frame with source nodes and rename column\nid4 <- filtered_mc3_edges %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid5 <- filtered_mc3_edges %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes3 <- rbind(id4, id5) %>%\n  distinct() %>%\n  left_join(mc3_nodes_unique,\n            unmatched = \"drop\") %>%\n  distinct()\n\nmc3_nodes3 <- mc3_nodes3 %>%\n  mutate(revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n\n# Convert the revenue column to numeric (if it's not already numeric)\nmc3_nodes3$revenue_omu <- as.numeric(mc3_nodes3$revenue_omu)\n\n# Calculate the revenue threshold for the top 20% excluding non-numeric or missing values\nrevenue_threshold <- quantile(mc3_nodes3$revenue_omu, probs = 0.90, na.rm = TRUE)\n\n# Filter the DataFrame to retain only the rows with revenue above the threshold\nfiltered_mc3_nodes <- mc3_nodes3[mc3_nodes3$revenue_omu > revenue_threshold, ]\n\n# View the filtered DataFrame\nfiltered_mc3_nodes\n\n\n# A tibble: 54 × 7\n   id              type_node country type  revenue_omu product_services category\n   <chr>           <chr>     <chr>   <chr>       <dbl> <chr>            <chr>   \n 1 Ancla del Este… company   Uzifri… Comp…     130212. Operation of fi… Fishing…\n 2 Andhra Pradesh… company   Rio Is… Comp…     787121. Grocery products Non-fis…\n 3 Bahía de Plata… company   Novarc… Comp…      60335. Fabricated meta… Non-fis…\n 4 Bahía del Este… company   Oceanus Comp…     254667. Swimwear and fa… Non-fis…\n 5 Bahía del Sol … company   Novarc… Comp…      98065. Contract manufa… Non-fis…\n 6 Bahía del Sol … company   Utopor… Comp…      67616. Gelatin          Non-fis…\n 7 Baker and Sons  company   ZH      Comp…  104095830. Fish; fresh or … Fishing…\n 8 BlueWaterBites… company   Zawali… Comp…     199596. Canned Products… Non-fis…\n 9 Bu yu wang AG   company   Nalako… Comp…      62860. Gelatine produc… Non-fis…\n10 Congo Rapids  … company   Riodel… Comp…     106161. Writing tools a… Non-fis…\n# ℹ 44 more rows\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 5\n#| fig-height: 6\n\n# Create a bar chart of revenue vs ID using ggplot\nbar_plot_toprev <- ggplot(filtered_mc3_nodes, aes(x = reorder(id, revenue_omu), y = revenue_omu/1000)) +\n  geom_bar_interactive(aes(tooltip = paste(\"ID:\", id,\n                                           \"<br>Type:\", type_node,\n                                           \"<br>Country:\", country,\n                                           \"<br>Revenue:\", revenue_omu,\n                                           \"<br>Product Services:\", product_services)),\n                       stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"id\", y = \"Revenue_omu ('000)\", title = \"Top 10% ids\") +\n  coord_flip() +\n  theme(plot.title = element_text(face = \"bold\"))+\n  theme(axis.text.y = element_text(size = 6))\n\n# Print the bar plot\ngirafe(ggobj = bar_plot_toprev,\n       width_svg = 8,\n  height_svg = 8*0.618)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#top-revenue-ids",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#top-revenue-ids",
    "title": "Take Home_Ex03",
    "section": "Top revenue ids",
    "text": "Top revenue ids\n\n## Adding the `mc3_nodes_unique` attributes, consider both beneficial owners and company contacts\nfiltered_mc3_edges <- mc3_edges_with_no_of_companies %>%\n  filter(no_of_companies > 3)\n\n\n# Create a data frame with source nodes and rename column\nid4 <- filtered_mc3_edges %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type_node = \"company\")\n\n# Create a data frame with target nodes and rename column\nid5 <- filtered_mc3_edges %>%\n  select(target, type) %>%\n  rename(id = target, type_node = type)\n\n# Combine the two data frames and remove duplicates\nmc3_nodes3 <- rbind(id4, id5) %>%\n  distinct() %>%\n  left_join(mc3_nodes_unique,\n            unmatched = \"drop\") %>%\n  distinct()\n\nmc3_nodes3 <- mc3_nodes3 %>%\n  mutate(revenue_omu = ifelse(revenue_omu == \"\" | is.na(revenue_omu), \"0\", revenue_omu))\n\n\n# Convert the revenue column to numeric (if it's not already numeric)\nmc3_nodes3$revenue_omu <- as.numeric(mc3_nodes3$revenue_omu)\n\n# Calculate the revenue threshold for the top 20% excluding non-numeric or missing values\nrevenue_threshold <- quantile(mc3_nodes3$revenue_omu, probs = 0.90, na.rm = TRUE)\n\n# Filter the DataFrame to retain only the rows with revenue above the threshold\nfiltered_mc3_nodes <- mc3_nodes3[mc3_nodes3$revenue_omu > revenue_threshold, ]\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 5\n#| fig-height: 6\n\n# Create a bar chart of revenue vs ID using ggplot\nbar_plot_toprev <- ggplot(filtered_mc3_nodes, aes(x = reorder(id, revenue_omu), y = revenue_omu/1000)) +\n  geom_bar_interactive(aes(tooltip = paste(\"ID:\", id,\n                                           \"<br>Type:\", type_node,\n                                           \"<br>Country:\", country,\n                                           \"<br>Revenue:\", revenue_omu,\n                                           \"<br>Product Services:\", product_services)),\n                       stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"id\", y = \"Revenue_omu ('000)\", title = \"Top 10% ids\") +\n  coord_flip() +\n  theme(plot.title = element_text(face = \"bold\"))+\n  theme(axis.text.y = element_text(size = 6))\n\n# Print the bar plot\ngirafe(ggobj = bar_plot_toprev,\n       width_svg = 8,\n  height_svg = 8*0.618)"
  }
]