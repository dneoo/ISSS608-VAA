[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nThis website is a collection of my coursework for the Visual Analytics courses taken during my MITB Journey.\nThere are 3 type of exercises:\n\nHands-on Exercise\nIn-Class Exercise\nTake-Home Exercise"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple chart",
    "text": "Plotting a simple chart\n\nUsing geombar() to plot a bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nUsing geom_dotplot() to plot a dot plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)\n\n\n\n\n\n\nUsing geom_histogram() to create a histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "Working with Theme",
    "text": "Working with Theme\n\nChanging theme of bar chart\n\nggplot(data=exam_data, aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", colour = \"lightblue\", \n                                    size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-driven-graphics-for-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-driven-graphics-for-analysis",
    "title": "Hands-on Exercise 1",
    "section": "Designing Data-driven Graphics for Analysis",
    "text": "Designing Data-driven Graphics for Analysis\n\nExercise 1\n\nggplot(data=exam_data, \n       aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nExercise 2 : Adding mean and median lines\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nExercise 3: Distribution of English scores for all pupils\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nExercise 4\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "The code chunck below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.1 Working with ggrepel",
    "text": "2.1 Working with ggrepel\nggrepel helps to repel overlapping text\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nSimply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-themes",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.2 Working with Themes",
    "text": "2.2 Working with Themes\n8 Built-in Themes: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nUsing ggtheme package\nIn the example below, The Economist theme is used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\nUsing hrbthems package\nProvides a base theme that focuses on typographic elements, including where various labels are placed and fonts used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_ipsum(axis_title_size = 18,       #increase font size of axis title to 18 \n              base_size = 15,             #increase default axis label to 15\n              grid = \"Y\") +               # keep only y-axis grid lines\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "2.3 Beyond Single Graph",
    "text": "2.3 Beyond Single Graph\nCreate composite plot by combining multiple graphs First, create the three statistical graphics below\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\nWorking with patchwork\nCreating patchwork Use ‘+’ to create two columns layout Use ‘/’ to create two row layout (stack) Use ‘()’ to create subplot group Use ‘|’ to place the plots beside each other\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')   #creating a composite figure with tag\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nCombining patchwork and themes\n\n((p1 / p2) | p3) & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nInsert another plot in a plot with inset_element()\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\nggiraph, for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\nDT, provides an R interface to the JavaScript library DataTablesthat create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork, for combining multiple plots into one figure.\ngifski , converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder, an excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggiraph-for-interactive-data-visualisation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggiraph-for-interactive-data-visualisation",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Using ggiraph for interactive data visualisation",
    "text": "2.1 Using ggiraph for interactive data visualisation\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive. The interactivity is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nData_id: a column of data-sets that contain an id to be associated with elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\n\nIf it is used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\n\n2.1.1 Using tooltip (tooltip effect)\nThere are two parts of the codes: 1. creating ggplot object, 2. girafe() of ggiraph will be used to create an interactive svg object.\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  #geom_dotplot_interactive still takes argument of original geom_dotplot but with tooltip enabled in aes()\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\n\n\n2.1.2 Displaying multiple information on tooltip\n\n# Create a new field called tooltip\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\n\n\n2.1.3 Customising Tooltip style\nUsing opts_tooltip() of ggiraph to customize tooltip rendering by adding css declarations.\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:blue;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBackground colour of the tooltip is now white and the font colour is blue and bold\n\n\n\n\n2.1.4 Displaying statistics on tooltip"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph,visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nGAStech_edges data.frame consists of individual email flow records, which is not useful for visualisation.\nThus, we will aggregate the individual by date,senders, receivers, main subject and day of the week.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n  summarise(Weight = n()) %>%\n  filter(source!=target) %>%    #only want those that you sent to others, dont want those u cc yourself\n  filter(Weight > 1) %>%         #only want those you sent out more than 1\n  ungroup()\n\nGAStech_edges_aggregated\n\n# A tibble: 1,372 × 4\n   source target Weekday   Weight\n    <dbl>  <dbl> <ord>      <int>\n 1      1      2 Sunday         5\n 2      1      2 Monday         2\n 3      1      2 Tuesday        3\n 4      1      2 Wednesday      4\n 5      1      2 Friday         6\n 6      1      3 Sunday         5\n 7      1      3 Monday         2\n 8      1      3 Tuesday        3\n 9      1      3 Wednesday      4\n10      1      3 Friday         6\n# ℹ 1,362 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "Using tbl_graph() to build tidygraph data model",
    "text": "Using tbl_graph() to build tidygraph data model\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.1 Plotting a basic network graph",
    "text": "3.1 Plotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n3.1.2 Changing the default network graph theme\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.3 Changing the color of the plot\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n3.1.4 Modifying network nodes\nIn this section, you will color each node by referring to their respective departments.\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.5 Modifying edges\nHere, the code chunck below shows how the thickness of the edges will be mapped with the Weight variable. (Thin line means not much interaction with one another)\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n3.1.6 Creating facet graphs\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\nAs shown above, we can see that weekdays there are interactions, but Saturday there are no links, meaning not much interaction with others."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#network-metrics-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#network-metrics-analysis",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.2 Network Metrics Analysis",
    "text": "3.2 Network Metrics Analysis\n\n3.2.1 Computing centrality indices\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n3.2.2 Visualising Community\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-interactive-network-graph-with-visnetwork",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-interactive-network-graph-with-visnetwork",
    "title": "Hands-on Ex 5: Network Data Visualisation and Analysis",
    "section": "3.3 Building Interactive Network Graph with visNetwork",
    "text": "3.3 Building Interactive Network Graph with visNetwork\nBefore we plot the interactive network graph, we need to prepare the data model using the code chunk below.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nPlotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n3.3.1 Working with visual attributes - Nodes\nRename Department field to group\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix,gt,patchwork,tidyverse,ggstatsplot,ggpubr)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq() +\n  stat_qq_line()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In_class_Ex05_MC1.html",
    "href": "In-class_Ex/In-class_Ex05/In_class_Ex05_MC1.html",
    "title": "Jsonlite",
    "section": "",
    "text": "pacman::p_load(jsonlite,tidygraph,ggraph,visNetwork,tidyverse)\n\n\nMC1 <- jsonlite::fromJSON(\"data/MC1.json\")\n\n\n#Extract id, type and country and make it as a tibble database. use select to choose the fields you want and reorganise the data as you want\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country)\n\n\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Application Learning Journey",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nIn this website, you will find my coursework prepared for this course.\nHope you enjoy reading them!\nMost Recent Submissions…\n\n\n\n\n\n\n\n\n\n\n\nHands-on Ex 5: Network Data Visualisation and Analysis\n\n\n\n\n\n\nDabbie Neo\n\n\nMay 13, 2023\n\n\n\n\n\n\n\n\n\n\n\nJsonlite\n\n\n\n\n\n\nDabbie Neo\n\n\nMay 13, 2023\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 4\n\n\n\n\n\n\nDabbie Neo\n\n\nMay 6, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "This exercise aims to reveal the demographic, financial characteristics and hidden patterns of the City of Engagement, using static and interactive statistical graphics methods. The data will be processed using appropriate tidyverse packages and visualization will be designed using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-and-launching-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-and-launching-r-packages",
    "title": "Take-Home_Ex01",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:\n\nplotly: R library for plotting interactive statistical graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\ngganimate\ngifski\nknitr: Used for dynamic report generation\npatchwork: Used to combine plots\nggdist: Used for visualisation distribution and uncertainty\nggthemes: Provide additional themes for ggplot2\ntidyverse: a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, tidyverse,gt,rstatix,ggpmisc,ggridges,gganimate,viridis,ggiraph,reshape2,scales)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "title": "Take-Home_Ex01",
    "section": "3.2 Importing the Data",
    "text": "3.2 Importing the Data\n\nparticipants <- read_csv(\"data/Participants.csv\")\nfinancial <- read_csv(\"data/FinancialJournal.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take-Home_Ex01",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nCheck for missing values in each column in participants data\n\n# Check for missing values in each column\ncolSums(is.na(participants))\n\n participantId  householdSize       haveKids            age educationLevel \n             0              0              0              0              0 \n interestGroup      joviality \n             0              0 \n\n\nCheck for missing values in each column in financial data\n\n# Check for missing values in each column\ncolSums(is.na(financial))\n\nparticipantId     timestamp      category        amount \n            0             0             0             0 \n\n\nLooking at the data below, there are a few data issues\n\nglimpse(participants)\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\", \"HighScho…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", \"D\", \"D\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\n\nglimpse(financial)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nISSUE 1: INACCUATE DATA/MODELLING FORMAT\nparticipantId is in <dbl> format. It needs to be converted to <chr>\n\nparticipants$participantId <- as.character(participants$participantId)\n#str(participants)\n\nfinancial$participantId <- as.character(financial$participantId)\n#str(financial) --> to check if data type has been changed\n\nISSUE 2: CHANGE TIMESTAMP TO USABLE DATA\nExtract the month and year using lubridate.\n\n#financial$month_year <- format(financial$timestamp, \"%Y/%m\")\n\nfinancial$month_year <- floor_date(as.POSIXct(financial$timestamp), unit = \"month\")\nfinancial$month_year <- format(financial$month_year, format = \"%m/%Y\")\n\n# Convert month_year to date format\nfinancial$month_year <- as.Date(paste0(\"01/\", financial$month_year), format = \"%d/%m/%Y\")\n\nhead(financial)\n\n# A tibble: 6 × 5\n  participantId timestamp           category  amount month_year\n  <chr>         <dttm>              <chr>      <dbl> <date>    \n1 0             2022-03-01 00:00:00 Wage      2473.  2022-03-01\n2 0             2022-03-01 00:00:00 Shelter   -555.  2022-03-01\n3 0             2022-03-01 00:00:00 Education  -38.0 2022-03-01\n4 1             2022-03-01 00:00:00 Wage      2047.  2022-03-01\n5 1             2022-03-01 00:00:00 Shelter   -555.  2022-03-01\n6 1             2022-03-01 00:00:00 Education  -38.0 2022-03-01\n\n\nISSUE 3: DUPLICATES FOUND IN DATA\n\n\n[1] 1113\n\n\n[1] 0\n\n\n[1] 1512523\n\n\nISSUE 4: DATA IS SEGREGATED BY INDIVDUAL ENTRIES\nGroup the entries by participants taking into consideration time and category and summing up the amount.\n\n# Group by participant_id and month_year, subgroup by category, then summarize by amount\nnew_financial <- financial_unique %>%\n  group_by(participantId, month_year, category) %>%\n  summarise(total_amount = sum(amount)) %>%\n  mutate(total_amount = round(total_amount, 2))\n#head(new_financial)\n\n# Pivot the table so that the categories appear as columns\nnew_financial_wide <- new_financial %>% \n  pivot_wider(names_from = category, values_from = total_amount)\n\n# Check if any columns has missing value \ncolSums(is.na(new_financial_wide))\n\n participantId     month_year      Education           Food     Recreation \n             0              0           7673              0           1199 \n       Shelter           Wage RentAdjustment \n           131              0          10619 \n\n# replace missing values with 0\nnew_financial_wide <- new_financial_wide %>% \n  mutate_all(~replace_na(., 0))\nhead(new_financial_wide)\n\n# A tibble: 6 × 8\n# Groups:   participantId, month_year [6]\n  participantId month_year Education  Food Recreation Shelter   Wage\n  <chr>         <date>         <dbl> <dbl>      <dbl>   <dbl>  <dbl>\n1 0             2022-03-01     -38.0 -268.      -349.   -555. 11932.\n2 0             2022-04-01     -38.0 -266.      -219.   -555.  8637.\n3 0             2022-05-01     -38.0 -265.      -383.   -555.  9048.\n4 0             2022-06-01     -38.0 -257.      -466.   -555.  9048.\n5 0             2022-07-01     -38.0 -270.     -1070.   -555.  8637.\n6 0             2022-08-01     -38.0 -262.      -314.   -555.  9459.\n# ℹ 1 more variable: RentAdjustment <dbl>\n\n\nISSUE 5: DATA DOES NOT SHOW FINANCIAL HEALTH AND COST OF LIVING\nFinancial Health = Sum (Wage + Education + Shelter + Recreation + Food + RentAdjustment)\n\nnew_financial_wide$Financial_health <- rowSums(new_financial_wide[, c(\"Wage\", \"Education\",\"Shelter\",\"Recreation\",\"Food\",\"RentAdjustment\" )], na.rm = TRUE)\nhead(new_financial_wide)\n\n# A tibble: 6 × 9\n# Groups:   participantId, month_year [6]\n  participantId month_year Education  Food Recreation Shelter   Wage\n  <chr>         <date>         <dbl> <dbl>      <dbl>   <dbl>  <dbl>\n1 0             2022-03-01     -38.0 -268.      -349.   -555. 11932.\n2 0             2022-04-01     -38.0 -266.      -219.   -555.  8637.\n3 0             2022-05-01     -38.0 -265.      -383.   -555.  9048.\n4 0             2022-06-01     -38.0 -257.      -466.   -555.  9048.\n5 0             2022-07-01     -38.0 -270.     -1070.   -555.  8637.\n6 0             2022-08-01     -38.0 -262.      -314.   -555.  9459.\n# ℹ 2 more variables: RentAdjustment <dbl>, Financial_health <dbl>\n\n\nCost_of_living = Sum(Education + Shelter + Recreation + Food)\n\nnew_financial_wide$Cost_of_living <- rowSums(new_financial_wide[,c(\"Education\",\"Shelter\",\"Recreation\",\"Food\")], na.rm = TRUE)\nnew_financial_wide$Cost_of_living <- new_financial_wide$Cost_of_living * -1\nhead(new_financial_wide)\n\n# A tibble: 6 × 10\n# Groups:   participantId, month_year [6]\n  participantId month_year Education  Food Recreation Shelter   Wage\n  <chr>         <date>         <dbl> <dbl>      <dbl>   <dbl>  <dbl>\n1 0             2022-03-01     -38.0 -268.      -349.   -555. 11932.\n2 0             2022-04-01     -38.0 -266.      -219.   -555.  8637.\n3 0             2022-05-01     -38.0 -265.      -383.   -555.  9048.\n4 0             2022-06-01     -38.0 -257.      -466.   -555.  9048.\n5 0             2022-07-01     -38.0 -270.     -1070.   -555.  8637.\n6 0             2022-08-01     -38.0 -262.      -314.   -555.  9459.\n# ℹ 3 more variables: RentAdjustment <dbl>, Financial_health <dbl>,\n#   Cost_of_living <dbl>\n\n\nISSUE 6: AGE DATA IS DISAGGREGATED\nBin age data by groups of 10.\n\nparticipants <- participants %>%\n  mutate(age_bin = cut(age, \n                       breaks = c(seq(max(age), min(age) - 10, -10), min(age)), \n                       right = FALSE, \n                       include.lowest = TRUE, \n                       labels = NULL))\n\n# Replace the numeric bin labels with age ranges\nparticipants$age_bin <- sub(\"(\\\\d+)-(\\\\d+)\", \"\\\\1-\\\\2\", as.character(participants$age_bin))\nparticipants$age_bin[participants$age_bin == paste0(max(participants$age_bin), \"-\")] <- paste0(\"<= \", max(as.numeric(levels(participants$age_bin)))-1)\n\n# Display the first 10 rows of the new data frame with age_bin column\nhead(participants, 10)\n\n# A tibble: 10 × 8\n   participantId householdSize haveKids   age educationLevel      interestGroup\n   <chr>                 <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1 0                         3 TRUE        36 HighSchoolOrCollege H            \n 2 1                         3 TRUE        25 HighSchoolOrCollege B            \n 3 2                         3 TRUE        35 HighSchoolOrCollege A            \n 4 3                         3 TRUE        21 HighSchoolOrCollege I            \n 5 4                         3 TRUE        43 Bachelors           H            \n 6 5                         3 TRUE        32 HighSchoolOrCollege D            \n 7 6                         3 TRUE        26 HighSchoolOrCollege I            \n 8 7                         3 TRUE        27 Bachelors           A            \n 9 8                         3 TRUE        20 Bachelors           G            \n10 9                         3 TRUE        35 Bachelors           D            \n# ℹ 2 more variables: joviality <dbl>, age_bin <chr>\n\n\nISSUE 7: PARTICIPANTS DATA AND FINANCIAL DATA ARE SEPARATED\nCombine the two tables together by participantId\n\ncombined_table <- merge(participants, new_financial_wide, by = \"participantId\")\nhead(combined_table)\n\n  participantId householdSize haveKids age      educationLevel interestGroup\n1             0             3     TRUE  36 HighSchoolOrCollege             H\n2             0             3     TRUE  36 HighSchoolOrCollege             H\n3             0             3     TRUE  36 HighSchoolOrCollege             H\n4             0             3     TRUE  36 HighSchoolOrCollege             H\n5             0             3     TRUE  36 HighSchoolOrCollege             H\n6             0             3     TRUE  36 HighSchoolOrCollege             H\n    joviality age_bin month_year Education    Food Recreation Shelter     Wage\n1 0.001626703 [30,40) 2022-03-01    -38.01 -268.34    -348.72 -554.99 11931.95\n2 0.001626703 [30,40) 2022-04-01    -38.01 -265.86    -219.43 -554.99  8636.88\n3 0.001626703 [30,40) 2022-05-01    -38.01 -264.62    -383.01 -554.99  9048.16\n4 0.001626703 [30,40) 2022-06-01    -38.01 -256.97    -465.68 -554.99  9048.16\n5 0.001626703 [30,40) 2022-07-01    -38.01 -270.21   -1069.54 -554.99  8636.88\n6 0.001626703 [30,40) 2022-08-01    -38.01 -261.84    -314.14 -554.99  9459.44\n  RentAdjustment Financial_health Cost_of_living\n1              0         10721.89        1210.06\n2              0          7558.59        1078.29\n3              0          7807.53        1240.63\n4              0          7732.51        1315.65\n5              0          6704.13        1932.75\n6              0          8290.46        1168.98"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographic-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographic-analysis",
    "title": "Take-Home_Ex01",
    "section": "4.1 Demographic Analysis",
    "text": "4.1 Demographic Analysis\nAge\n\n4.1.1 Income Distribution\nWe will first take a look at the Income Distribution using histogram and boxplot.\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot\nwage_mean <- round(mean(combined_table$Wage))\nwage_median <- round(median(combined_table$Wage))\nymax <- as.numeric(round((IQR(combined_table$Wage)*1.5) +\n                quantile(combined_table$Wage,0.75)))\nymin <- as.integer(min(combined_table$Wage))\n\n#plotting histogram\nh_wage <- ggplot(data = combined_table, aes(x = Wage)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,25000), labels = scales::comma) +\n  labs(x = \"Wage\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = wage_mean), col=\"darkblue\", linewidth=0.75) +\n  annotate(\"text\", x=5700, y=1700, label=\"Mean wage:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5500, y=1600, label=format(wage_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = wage_median), col=\"lightpink4\", linewidth=0.75) +\n  annotate(\"text\", x=2000, y=1700, label=\"Median wage\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=2000, y=1600, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb_wage <- ggplot(data = combined_table, aes(y = Wage)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=0.6, notch=FALSE, width = 0.3) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,25000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.45) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=4000, label=format(wage_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.25, y=1500, label=\"Median wage =\",\n           size=3, color=\"lightpink4\")\n\n# combine the 2 plots \n\nwage_distri <- b_wage / h_wage + plot_layout(heights = c(1, 3)) \n\nwage_distri + plot_annotation(title = \"Distribution of Wage\", \n                               subtitle = str_wrap(\"There is a right-skewed distribution i.e. mean wage > median wage. There is also a large number of outliers (wage >$9,110).\", width =60),\n                               theme = theme(\n                                 plot.title = element_text(size = 18),\n                                 plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nThe shape of the wage distribution shows that there is an income inequality in the city.It has a right-skewed distribution, i.e. mean wage > median wage.\n\nmeanwage_table <- combined_table %>%\n  group_by(participantId) %>%\n  summarize(mean_wage = mean(Wage))\nhead(meanwage_table)\n\n# A tibble: 6 × 2\n  participantId mean_wage\n  <chr>             <dbl>\n1 0                 9151.\n2 1                 8031.\n3 10                6609.\n4 100               3910.\n5 1000              2441.\n6 1001              3853.\n\n\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\nqq <- ggplot(meanwage_table,\n       aes(sample=mean_wage))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Income\")\n\nsw_t <- meanwage_table %>%\n  shapiro_test(mean_wage) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\nqq + table_png\n\n\n\n\n\nUsing the Normal Quartile Plot (Q-Q plot), we can see that the points deviate significantly from the straight diagonal line. Looking at the results of the Shaprio-test above suggest that there is sufficient statistical evidence to reject the null hypothesis at 95% confidence. Thus, the set of data is indeed not normally distributed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#income-by-age",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#income-by-age",
    "title": "Take-Home_Ex01",
    "section": "4.1.2 Income by Age",
    "text": "4.1.2 Income by Age\nLet’s find out of there if income is affected by age. When you are older, you are likely to earn more.\nTo compare the income level across ages, we will test the null hypothesis:\nH0: the mean income across different age groups are the same H1: the mean income across different age groups are different\nTo start the confirmatory data analysis, we first perform the normality assumption test for the distribution of income and age.\n\n\nShow the code\n#computing summary statistics of mean, median and lower and upper whiskers in boxplot for AGE\nage_mean <- round(mean(combined_table$age))\nage_median <- round(median(combined_table$age))\nymax <- as.numeric(round((IQR(combined_table$age)*1.5) +\n                quantile(combined_table$age,0.75)))\nymin <- as.integer(min(combined_table$age))\n\n#plotting histogram for AGE\nh_age <- ggplot(data = combined_table, aes(x = age)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 4) + \n  scale_x_continuous(limits = c(0,70), labels = scales::comma) +\n  labs(x = \"Age\", y = \"Number of participants\") +\n  geom_vline(aes(xintercept = age_mean), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=50, y=1700, label=\"Mean age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=45, y=1600, label=format(age_mean, big.mark = \",\"),\n           size=3, color=\"black\") +\n  geom_vline(aes(xintercept = age_median), col=\"black\", linewidth=0.75) +\n  annotate(\"text\", x=26, y=1700, label=\"Median age:\", \n           size=3, color=\"black\") +\n  annotate(\"text\", x=30, y=1600, label=format(age_median, big.mark = \",\"),\n           size=3, color=\"black\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot for AGE\nb_age <- ggplot(data = combined_table, aes(y = age)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,70), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.5) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\")\n\nage_distri <- b_age / h_age + plot_layout(heights = c(1, 3)) \n\nage_distri + plot_annotation(title = \"Distribution of Age\", \n                               subtitle = \"There is a normal distribution i.e. mean age = median age\",\n                               theme = theme(\n                                 plot.title = element_text(size = 18),\n                                 plot.subtitle = element_text(size = 12)))\n\n\n\n\n\nShow the code\n#combine the wage_distri plot dervied earlier with the age_distri plot\nwage_age_distri <- (wage_distri | age_distri) + plot_layout(widths = c(6,6))\n\nwage_age_distri + plot_annotation(title = \"Distribution of Income and Age\", \n                               theme = theme(\n                                 plot.title = element_text(size = 16)))\n\n\n\n\n\nNormality assumption test for Income and Age.\nPlot the qqplot for income and age\n\n\nShow the code\n#| echo: false\n#| fig-width: 4\n#| fig-height: 4\n\n# Create age table \nunique_participants <- unique(subset(combined_table, select = c(\"participantId\", \"age\")))\nhead(unique_participants)\n\n\n   participantId age\n1              0  36\n13             1  25\n25            10  48\n37           100  29\n49          1000  56\n61          1001  49\n\n\nShow the code\nqq_age <- ggplot(unique_participants,\n       aes(sample=age))+\n  stat_qq() +\n  stat_qq_line() +\n  ggtitle(\"Normal Q-Q Plot of Age\")\n\nsw_t_age <- unique_participants %>%\n  shapiro_test(age) %>%\n  gt() #make it to gt format to give a nice table\n\ntmp_age <- tempfile(fileext = '.png')\ngtsave(sw_t_age, tmp_age)\ntable_png_age <- png::readPNG(tmp_age,native=TRUE) #sw_t cant be recognised by patchwork so change it to png\n\n(qq_age + table_png_age) / (qq + table_png)\n\n\n\n\n\nBased on the Shapiro test, both the p-value are < alpha value of 0.05, thus there is sufficient statistical evidence to conclude that the distribution of income and age are not normally distributed. Thus we will use the non-parametric test.\nOneway ANOVA Test\nTo test the null hypothesis, we performed the non-parametric test.\n\nggbetweenstats(\n  data = combined_table,\n  x = age_bin, \n  y = Wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"ns\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE,\n  ylim = c(0, 25000),\n  breaks = seq(0, 25000, 5000)\n) +\nggtitle(\"Oneway ANNOVA - Income across different age\")\n\n\n\n\nThe Kruskal-Wallis Test p-value is lower than the alpha values, thus there is sufficient statistical evidence to reject the null hypothesis and infer that the mean income across age is not the same.\nHigher income median for those age 30-40. After the age of 40, the increase in age does not correspond with the increase in income. We can also see that the 2 highest points are from the opposite ends of the age spectrum. Even though these are outliers, this suggests that for the high-income tier, age is not the limiting factor. An individual does not have to be old to earn a higher income."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#financial-health-observation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#financial-health-observation",
    "title": "Take-Home_Ex01",
    "section": "4.1.3 Financial Health Observation",
    "text": "4.1.3 Financial Health Observation\nCumulative Financial Health\n\n# Create a data frame\ndf_totalfh <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(total_fh = sum(Financial_health))\n\nhead(df_totalfh)\n\n# A tibble: 6 × 2\n  month_year total_fh\n  <date>        <dbl>\n1 2022-03-01 4832812.\n2 2022-04-01 2204851.\n3 2022-05-01 2403220.\n4 2022-06-01 2421291.\n5 2022-07-01 2272492.\n6 2022-08-01 2574129.\n\n\n\n\nShow the code\n# calculate cumulative financial health\ndf_totalfh <- df_totalfh %>% \n  mutate(cumulative_fh = cumsum(total_fh))\n\nhead(df_totalfh)\n\n\n# A tibble: 6 × 3\n  month_year total_fh cumulative_fh\n  <date>        <dbl>         <dbl>\n1 2022-03-01 4832812.      4832812.\n2 2022-04-01 2204851.      7037663.\n3 2022-05-01 2403220.      9440883.\n4 2022-06-01 2421291.     11862173.\n5 2022-07-01 2272492.     14134666.\n6 2022-08-01 2574129.     16708794.\n\n\nShow the code\n# Calculate y-axis breaks and labels\ny_breaks <- pretty_breaks(n = 3)(range(df_totalfh$cumulative_fh))\ny_labels <- dollar_format(prefix = \"$\")(y_breaks)\n\n# plot graph\nggplot(data = df_totalfh, aes(x = month_year, y = cumulative_fh)) +\n  geom_line() +\n  labs(x = \"Month/Year\", y = \"Cumulative Financial Health\", title = \"Cumulative Financial Health Over Time\") +\n  stat_summary(geom = \"line\", fun = \"cumsum\", linetype = \"dashed\") +\n  scale_y_continuous(breaks = y_breaks, labels = y_labels) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\n\n\n\n\nFrom the figure above, we can tell that the city has cumulative savings across the months.\nFinancial Health vs mean financial health (boxplot and line)\n\np_fh <- ggplot(data = combined_table, aes(x = month_year, y = Financial_health, \n                                      tooltip = month_year)) +\n  geom_boxplot() +\n  stat_summary(fun.y = mean, geom = \"line\", aes(group = 1), color = \"red\") + \n  theme_minimal() +\n  scale_fill_brewer(palette = \"Dark2\") +\n  labs(title = \"Financial Health Over Time\",\n       y = \"Financial Health\",\n       x = \"Month/Year\") +\n  theme(plot.title = element_text(hjust = 0.2, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        axis.text = element_text(size = 8, face = \"bold\"),\n        axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%Y\")\n\nggplotly(p_fh, tooltip = c(\"x\", \"y\", \"tooltip\"))\n\n\n\n\n\nBased on the plot above, we can see that the mean of the financial health peaks in March and decreased significantly in April. Between April 2022 to Feb 2023, financial health was maintained between $2,500 to $3,000.\nExpenses overtime\n\n\nShow the code\n# group the expenses by month year\nexpenses_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(total_recreation = mean(Recreation),\n            total_food = mean(Food),\n            total_shelter = mean(Shelter),\n            total_education = mean(Education))\n\n# plot the data using ggplot2\np_expense <- ggplot(expenses_grouped, aes(x = month_year)) + \n  geom_line(aes(y = total_recreation, color = \"Recreation\")) +\n  geom_line(aes(y = total_food, color = \"Food\")) +\n  geom_line(aes(y = total_shelter, color = \"Shelter\")) +\n  geom_line(aes(y = total_education, color = \"Education\")) +\n  labs(x = \"Month/Year\", y = \"Mean Expenses($)\") +\n  scale_y_continuous(limits = c(-1000, 0), \n                      breaks = seq(-1000, 0, 2*100),\n                      labels = dollar_format(prefix = \"$\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses Over time\") +\n  scale_color_manual(values = c(\"Recreation\" = \"red\", \n                                \"Food\" = \"blue\", \n                                \"Shelter\" = \"green\", \n                                \"Education\" = \"purple\")) +\n  theme(plot.title = element_text(face = \"bold\"),\n        plot.margin = margin(0, 0, 0, 0)) \np_expense\n\n\n\n\n\n\nexpenses_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(total_recreation = mean(Recreation),\n            total_food = mean(Food),\n            total_shelter = mean(Shelter),\n            total_education = mean(Education)) %>% \n  pivot_longer(cols = c(total_recreation, total_food, total_shelter, total_education), names_to = \"expense_type\", values_to = \"expense\")\nhead(expenses_grouped)\n\n# A tibble: 6 × 3\n  month_year expense_type     expense\n  <date>     <chr>              <dbl>\n1 2022-03-01 total_recreation  -643. \n2 2022-03-01 total_food        -324. \n3 2022-03-01 total_shelter     -625. \n4 2022-03-01 total_education    -14.2\n5 2022-04-01 total_recreation  -443. \n6 2022-04-01 total_food        -346. \n\n\n#CHECK WHY CANT PLOT\n\n # ggplot(data = expenses_grouped, aes(x = expense, y = expense_type, fill = after_stat(x))) +\n #   \n #   geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n #  \n #   theme_minimal() +\n #  \n #     labs(title = 'Expenses by Category Over Time: {frame_time}',\n #        y = \"Type of Expense\",\n #        x = \"Total Expense\") +\n #   \n #   theme(legend.position=\"none\",\n #   text = element_text(family = \"Garamond\"),\n #   plot.title = element_text(face = \"bold\", size = 12),\n #   \n #   axis.title.x = element_text(size = 10, hjust = 1),\n #   axis.title.y = element_text(size = 10),\n #   axis.text = element_text(size = 8)) +\n #   \n #   scale_fill_viridis(name = \"expense\", option = \"D\") +\n # \n #   transition_time(\"month_year\") +\n #   ease_aes('linear')\n\nPlotted the costs over time and it showed that food, rent and education remained stable over time, meaning these costs are fixed despite any fluations in income. In contrast, recreation expenses is high in March and decreases significantly from March to April and plateaus to a stable rate.\nThus, we can conclude that recreation increases if there is an increase in income but will remain low if there is low income. Income overtime\n\n\nShow the code\n# group the wage by month year\nwage_grouped <- combined_table %>%\n  group_by(month_year) %>%\n  summarize(mean_wage_bymonth = mean(Wage))\n\n# plot the data using ggplot2\np_meanwage <- ggplot(wage_grouped, aes(x = month_year)) + \n  geom_line(aes(y = mean_wage_bymonth)) +\n  labs(x = \"Month/Year\", y = \"Mean Wage($)\") +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%m/%Y\") +\n  ggtitle(\"Expenses by Month/Year\")\n\n\n\nexpenses_wage <- p_expense + p_meanwage + plot_layout(heights = c(80, 50)) \nexpenses_wage\n\n\n\n\nIn March, the mean income is peaked and dips significantly in April. Post April, the income remains relatively stable and starts to increase slightly in August. The fluctuations in the financial health and income is directly proportionate.\nAs this is an agricultural city, the pay could be affected by the seasons and harvest.\nWage vs Cost of Living overtime\n\n# Creating a table with Wage and Cost of Living by month_year\n\n# Group the data by month and find the corresponding means\ndf_monthly <- combined_table %>%\n  group_by(month_year) %>%\n  summarise(mean_income = mean(Wage),\n            mean_cost_of_living = mean(Cost_of_living))\n# Melt the data frame to create a long format\ndf_monthly_melt <- melt(df_monthly, id.vars = \"month_year\", variable.name = \"variable\", value.name = \"value\")\n\n#CHECK FOR THE XAXIS SCALE\n\n# Plot using ggplot2\nggplot(df_monthly_melt, aes(x = month_year, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 25), alpha = 0.7) +\n  scale_fill_manual(name = \"Legend\", values = c(\"mean_income\" = \"blue\", \"mean_cost_of_living\" = \"red\")) +\n  labs(x = \"Month\", y = \"Mean\", title = \"Monthly Mean Income and Cost of Living\") +\n  scale_x_date(guide = guide_axis(angle = 45))\n\n\n\n  theme(axis.text.x = element_text(hjust = 0.4, vjust = 0.5, size = 5)) \n\nList of 1\n $ axis.text.x:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : num 5\n  ..$ hjust        : num 0.4\n  ..$ vjust        : num 0.5\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n\n\nLooking at the wage vs cost of living, we can see that on average, most citizens can cope with their cost of living as their mean wage (blue bars) is higher than the mean cost of living (red bars). Most citizens should still have savings monthly.\nObservation on Education Level\nEducation affects financial health and birth rate\n\n# Create a factor with the education levels in the desired order\nedu_levels <- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\ncombined_table$educationLevel <- factor(combined_table$educationLevel, levels = edu_levels)\n\n# Create a box plot with separate panels for individuals with and without kids\np_fh_kids <- ggplot(combined_table, aes(x = educationLevel, y = Financial_health, fill = haveKids)) +\n  geom_boxplot() +\n  stat_summary(aes(group = haveKids, color = haveKids), fun = mean, geom = \"line\", size = 0.5) + # add mean lines\n  stat_boxplot(geom='errorbar', width=0.25, coef=1.5, size=0.5) + # add error bars\n  scale_fill_manual(name = \"haveKids\", values = c(\"FALSE\" = \"grey\", \"TRUE\" = \"orange\")) +\n  labs(title = \"Boxplot of Financial Health and Education by Kids\", x = \"Education\", y = \"Financial Health\") +\n  facet_wrap(~haveKids, ncol = 2) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Display the plot\np_fh_kids\n\n\n\n\nWe observe here that education is positively correlated to wage and financial health of the citizens. The higher the education level, the better the financial health. Also, we can see that citizen with better financial health have kids.\nObservation on Joviality\n\n\nShow the code\n# Select columns by name for the correlation matrix\ncols <- c(\"joviality\", \"Wage\", \"Financial_health\", \"Cost_of_living\", \"age\")\n\n# Plot the ggcorrmat\nggstatsplot::ggcorrmat(\n  data = combined_table, \n  cor.vars = cols, hc.order = TRUE, p.mat=p.mat,\n  title = \"Joviality Correlation Table\")\n\n\n\n\n\nTo understand what affects joviality, we plot out correlation charts of factors that society things will affect joviality – financial health, Wage, Cost of living and age. However, unlike society norms, city of engagement seems to defer. None of the factors have correlation of more than 0.5. drop wage since is it highly correlated with financial health.\nFocus on financial_health and cost of living\nAs presented below, there is a negative correlation between joviality and wage, expense, and savings.\nJoviality is affected by Financial health\n\n\nShow the code\n# Create the plot\nggplot(combined_table, aes(x = Financial_health, y = joviality)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"loess\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) # Set Y-axis limits to 0-1\n\n\n\n\n\n\n\nShow the code\nlibrary(ggpmisc)\n# Compute the 25th and 75th percentiles of Financial_health\nq <- quantile(combined_table$Financial_health, probs = c(0.25, 0.75))\n\n# Create a new column \"income_level\" based on Financial_health percentiles\ncombined_table$income_level <- ifelse(combined_table$Financial_health < q[1], \"Low\",\n                                      ifelse(combined_table$Financial_health > q[2], \"High\", \"Middle\"))\n\n# Specify the order of the income levels\ncombined_table$income_level <- factor(combined_table$income_level,\n                                      levels = c(\"Low\", \"Middle\", \"High\"))\n\n# Create the plot with facets and regression line equation\nggplot(combined_table, aes(x = Financial_health, y = joviality)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"lm\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) + # Set Y-axis limits to 0-1\n  facet_wrap(~ income_level) + # Create facets by income level\n  stat_poly_eq(formula = y ~ x, aes(label = paste(\"R^2 = \", round(..r.squared.., 3))),\n               parse = TRUE, label.x = \"right\", label.y = 0.9, \n               eq.with.lhs = FALSE, size = 3) + # Show R-squared only, adjust label position and decrease font size\n  theme(plot.margin = unit(c(1, 1, 1, 5), \"lines\")) # Adjust right margin to make room for equation\n\n\n\n\n\nEven though correlation between joviality is weak (-0.35), we can observe the smooth red curve is relatively different across different income levels. It appears joviality has a strong correlation for lower income levels as compaeed to the rich. when broken down in health levels, it appears that joviality has the lowest correlation for middle income, the R2= 0.006.\nHowever, we also observed that there are poor people who have the highest joviality of 0.99 whereas for the top 5% citizens (in blue), all of them have a joviality score below 0.64. Thus, we can conclude that being rich does not necessarily make citizens happy.\nJoviality is affected by Cost of Living\n\n\nShow the code\n# Create the plot for Joviality vs Cost_of_living\nggplot(combined_table, aes(x = Cost_of_living, y = joviality)) +\n  geom_point() + # Scatter plot\n  geom_smooth(method = \"lm\", se = FALSE, colour = \"red\") + # Add smoother\n  scale_y_continuous(limits = c(0, 1)) # Set Y-axis limits to 0-1\n\n\n\n\n\nJoviality vs expense_category\nRecommendations"
  }
]