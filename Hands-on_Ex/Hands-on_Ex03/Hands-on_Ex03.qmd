---
title: "Hands-on Exercise 3"
author: "Dabbie Neo"
date: 4/29/2023
date-modified: "`r Sys.Date()`"
---

# 1. Getting Started

## Install and launching R packages

The code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:

ggiraph for making 'ggplot' graphics interactive.

plotly, R library for plotting interactive statistical graphs.

gganimate, an ggplot extension for creating animated statistical graphs.

DT provides an R interface to the JavaScript library DataTables that create interactive table on html page.

tidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.

patchwork for combining multiple plots into one figure.

gifski converts video frames to GIF animations using pngquant's fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.

gapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.

```{r}
pacman::p_load(ggiraph, plotly, 
               patchwork, DT, tidyverse)
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# 2. Exercises

## 2.1 Using ggiraph for interactive data visualisation

ggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive. The interactivity is made with ggplot geometries that can understand three arguments:

Tooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.

Data_id: a column of data-sets that contain an id to be associated with elements.

Onclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.

If it is used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.

## 2.1 Using tooltip (tooltip effect)

There are two parts of the codes: 1. creating ggplot object, 2. girafe() of ggiraph will be used to create an interactive svg object.

```{r}
p <- ggplot(data=exam_data, 
       aes(x = MATHS)) +
  #geom_dotplot_interactive still takes argument of original geom_dotplot but with tooltip enabled in aes()
  geom_dotplot_interactive(
    aes(tooltip = ID),
    stackgroups = TRUE, 
    binwidth = 1, 
    method = "histodot") +
  scale_y_continuous(NULL, 
                     breaks = NULL)
girafe(
  ggobj = p,
  width_svg = 6,
  height_svg = 6*0.618
)
```

Interactivity: By hovering the mouse pointer on an data point of interest, the student's ID will be displayed.
